{"version":3,"sources":["components/VertSlider.js","Header.jsx","data.js","views/Home.js","views/Better.js","views/Table.jsx","views/Filtering.js","views/Slider.js","views/Test.js","components/AxisRange.js","views/sibs.js","views/Just.js","views/ScatterView.js","views/Axistest.js","graphs/Shotchart.js","views/ShotchartView.js","views/myShotchartView.js","Main.jsx","App.jsx","index.js","config.js","components/RangeSlider.js","components/AxisScatter.js","components/MultiDropdown.js","graphs/BarChart.js","components/Datapoint.js","components/Dropdown.js","graphs/Scatterplot.js","shotchart/court.js","shotchart/shots.js","graphs/myShotChart.js","components/singleSlider.js","views/Grid.js"],"names":["React","Component","Navigation","className","Navbar","bg","variant","fixed","expand","Toggle","aria-controls","Collapse","id","Nav","fill","Link","href","NavDropdown","title","Item","Divider","data","country","value","App1","chart","width","height","xScale","d3","domain","map","d","range","yScale","colorScale","selectAll","enter","append","classed","attr","bandwidth","style","i","text","xAxis","scale","call","yAxis","ticks","select","yGridlines","tickSize","tickFormat","el","Element","margin","chartWidth","chartHeight","this","plot","toReact","drawChart","Main","props","dateParse","rowParse","date","time","runner","split","Number","reverse","reduce","t","n","state","players","pp","bardata","error","isLoaded","posts","_","Math","random","fetch","CONFIG","API_BASE_URL","then","response","json","result","setState","player","index","key","firstname","lastname","PTS","p","Array","post","align","Main1","setDefault","selected","PLAYER_ID","shotid","resetThenSet","forEach","item","filterAndSort_Laps","selectedRace","selectedSeason","laptimes","filtQ","filter","raceName","season","toggleSelected","temp","JSON","parse","stringify","arr","test","fnames","left","right","location","fruit","axios","get","SHOTS","year1","year2","uniqIds","Set","uniqList","option","includes","self","findIndex","listid","ab","pts","SHOT_DIST","wholePts","sort","a","b","background","display","justifyContent","MultiDropdown","titleHelper","col","uid","list","toggleItem","onChangeYear","handleChangeYear","bind","BarChart","size","BubbleChart","bubbleChartData","maxRadius","count","minRadius","radiusScale","tick","nodes","force","strength","on","nextProps","simulation","svgDimensions","window","screen","tooltip","fontSize","transform","circle","stroke-width","stroke","r","cx","x","cy","y","onMouseMove","e","name","nativeEvent","offsetX","offsetY","onMouseOut","Circle","Axis","renderAxis","margins","xValue","axisElement","ref","clamp","h1","h2","tempH1","tempH2","trueYear1","trueYear2","Handle","handle","initialValue","onMouseOver","prevProps","prevState","mouseValue","trueMouseValue","minWidth","drag","getTrueMouseValue","remove","insert","round","invert","RangeSlider","top","bottom","RangeBar","x1","y1","x2","y2","RangeBarFilled","initialValue1","initialValue2","Charts","rangeSliderData","axisType","orient","axis","d3Axis","tickPadding","d3Select","translate","handleClick","other","trueH1","trueH2","minData","maxData","i1","i2","sorted","xScale1","scaleBand","bandSize","xProps","tickValues","wholePts1","wholeAst1","HOME_PTS","PLAYER_NAME","wholeAst","SHOT_PTS","abc","def","push","xmax","parseFloat","ymax","xdata","ydata","datapoint","Datapoint","Scatterplot","type","PureComponent","unshift","d3_hexbin","hexbin","ShotChart","console","log","displayToolTips","final_shots","courtSelection","html","chart_court","court","chart_shots","shots","shotRenderThreshold","minCount","displayType","chartType","datum","dist","LOC_X","LOC_Y","shot","action_type","SHOT_TYPE","shot_distance","shot_made_flag","FGM","Shotchart","playerId","slice","isToggleOn","distL","distR","left2","right2","shot_value","SHOT_VALUE","shot_pts","shot_zone","SHOT_ZONE","shot_area","SHOT_AREA","score_margin","SCORE_DIFF","handleDistChange","handle1","handle2","sGroup","label","onClick","handleBinChange","exact","path","component","grid","Table","Filter","Better","Slider","Axistest","Just","Scatter","myShotchart","library","add","faCheck","faAngleUp","faAngleDown","App","Header","ReactDOM","render","document","getElementById","handleSide","xScale2","Text","styled","gRef","createRef","d3Render","current","labelPos","DropdownMultiple","listOpen","headerTitle","timeOut","close","setTimeout","addEventListener","removeEventListener","selCol","selcetedids","toggleList","stopPropagation","icon","color","uniqNames","length","join","createBarChart","node","dataMax","max","scaleLinear","exit","highlight","unhighlight","Dropdown","selectItem","stateKey","onClickOutside","out","rangeRound","activeDisplay","activeTheme","percentFormatter","decFormatter","namee","selection","each","empty","svg","dashedFoulCircle","solidFoulCircle","restrictedArea","threePointArea","keyLines","arguments","hexRadiusValues","hexMinShotThreshold","heatScale","hexRadiusScale","toolTips","hexbin1","radius","_nestShotsByLocation","nestedData","rollup","v","entries","_getHexBinShootingStats","attempts","makes","made","shootingPercentage","pps","points","shotsGroup","legends","hexBinCoords","transition","duration","hexagon","tool_tip","d3_tip","offset","show","hide","legendSVG","efficiencyLegend","frequencyLegend","frequencyLegendXStart","theme","SingleSlider","ResponsiveReactGridLayout","WidthProvider","ResponsiveGridLayout","ls","global","localStorage","getItem","getFromLS","selectedP1","selectedP2","dist2L","dist2R","layouts","layout","setItem","deff","breakpoints","lg","md","sm","xs","xxs","cols","rowHeight","onLayoutChange","data-grid","w","h","minW","minH","static","handleDistChange2"],"mappings":"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","file":"static/js/main.a0abef67.chunk.js","sourcesContent":["\r\nimport React, { Component } from 'react'\r\n// import '../css/global.css'\r\n// import { scaleLinear } from \"d3-scale\"\r\nimport { max } from 'd3-array'\r\nimport { select } from 'd3-selection'\r\nimport * as d3 from \"d3\";\r\nimport { range } from 'd3-array';\r\nimport { scaleBand, scaleLinear, scaleOrdinal } from 'd3-scale';\r\n\r\n// import Axis from \"../components/AxisRange\"\r\nimport Axis from \"./AxisScatter\"\r\n\r\n\r\nclass Handle extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            handle: '',\r\n            h1: 2,\r\n            h2: 3,\r\n            tempH1: null,\r\n            tempH2: null,\r\n            trueYear1: null,\r\n            trueYear2:null\r\n        }\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n    onMouseOver() {\r\n        this.setState({\r\n            handle: this.props.handle\r\n\r\n        });\r\n    }\r\n    render() {\r\n        const { initialValue,other, xScale, handle,margins } = this.props;\r\n        // const circle = <circle className=\"handleCircle\" r=\"10px\" fill=\"#fa7070\" />\r\n        const circle = <circle  r=\"10px\"  />\r\n\r\n        return  <g className={handle} transform={`translate(${margins.left},${xScale(initialValue)})` }\r\n                    onMouseOver={this.onMouseOver.bind(this)}   style={{fill:\"#fa7070\"}}   >\r\n                    \r\n                    {circle}\r\n\r\n                        </g>\r\n\r\n\r\n    }\r\n\r\n    handleClick(prevProps) {\r\n \r\n        // onChangeYear(h1,h2 );\r\n\r\n      }\r\n\r\n\r\n\r\n      componentDidUpdate(prevProps, prevState) {\r\n        // let {margins,data,svgDimensions,onChangeYear,initialValue} = prevProps;\r\n        let {handle,margins,data,svgDimensions,onChangeYear,xScale,initialValue, other,handleSide,sGroup} = this.props;\r\n\r\n        if (handleSide === \"left\")\r\n        {\r\n            // a = other +5\r\n            var h1 = xScale(initialValue);\r\n            var h2 = xScale(other);   \r\n            var tempH1 = xScale(initialValue);\r\n            var tempH2 = xScale(other);   \r\n            var trueH1 = initialValue \r\n            var trueH2 = other    \r\n        }\r\n        \r\n        else if (handleSide === \"right\")\r\n        {\r\n            var h1 = xScale(other);   \r\n            var h2 = xScale(initialValue);\r\n            var tempH1 = xScale(other);   \r\n            var tempH2 = xScale(initialValue);\r\n            var trueH1 = other    \r\n            var trueH2 = initialValue \r\n        }\r\n\r\n        \r\n\r\n\r\n        let mouseValue, trueMouseValue, self = this;\r\n        // let handle = this.props.handle;\r\n        let minWidth = 10//((window.screen.width/2 - margins.left - margins.right)/5);\r\n        // let minWidth = ((window.screen.width/2 - margins.left - margins.right)/10);\r\n\r\n\r\n        const drag = d3.drag()\r\n            .on(\"drag\", draged).on(\"end\", dragend);\r\n\r\n        d3.select(\".rangeSliderGroup\"+sGroup).call(drag);\r\n        // d3.select(\".\"+handle).call(drag);\r\n\r\n\r\n        function draged() {\r\n            // mouseValue = d3.mouse(this)[0];\r\n            mouseValue = d3.mouse(this)[1];\r\n\r\n            trueMouseValue = getTrueMouseValue(mouseValue);\r\n\r\n            handleSide === \"left\" ? h1 = mouseValue : h2 = mouseValue;\r\n\r\n            if ((h1 - h2) > minWidth && mouseValue > margins.top && mouseValue < (svgDimensions.height - margins.bottom))\r\n            // if ((h1 - h2) > minWidth && mouseValue > 0 && mouseValue <300)\r\n\r\n            // if ((h1 - h2) > minWidth)\r\n\r\n             {\r\n                d3.select(\".\" + handle).attr(\"transform\", \"translate(\"+ margins.left +\",\" + mouseValue + \")\");\r\n\r\n                if (handleSide === \"left\") \r\n                {\r\n                    tempH1 = mouseValue;\r\n                    trueH1 = trueMouseValue;\r\n                } \r\n                else\r\n                {\r\n                    tempH2 = mouseValue\r\n                    trueH2 = trueMouseValue;\r\n                }\r\n            }\r\n            else \r\n            {\r\n                h1 = tempH1;\r\n                h2 = tempH2;\r\n                handleSide === \"left\" ? trueMouseValue = trueH1 : trueMouseValue = trueH2;\r\n            }\r\n\r\n            d3.select(\".rangeBarFilled\"+sGroup).remove();\r\n\r\n            d3.select(\".rangeSliderGroup\" +sGroup)\r\n                .insert(\"line\", \".rangeSliderAxis\"+sGroup)\r\n                .attr(\"x1\", margins.left)\r\n                .attr(\"x2\", margins.left)\r\n                .attr(\"y1\", h1)\r\n                .attr(\"y2\", h2)\r\n                .attr(\"class\", \"rangeBarFilled\"+sGroup)\r\n                .style(\"stroke\", \"#fa7070\")\r\n                .style(\"stroke-width\",\"3px\")\r\n\r\n\r\n        }\r\n        function dragend() {\r\n\r\n            if (((xScale(trueH1) < margins.left)||(xScale(trueH2) < margins.left)) || (self.state.handle !== \"\")) {\r\n\r\n            }\r\n            else {\r\n  \r\n                \r\n            }\r\n\r\n\r\n            onChangeYear(trueH1, trueH2);\r\n            // handle = \"\"\r\n\r\n        }\r\n        function getTrueMouseValue(mouseValue) {\r\n            // const a = xScale.invert(mouseValue) * 10\r\n            // return Math.round(a) / 10;\r\n\r\n\r\n            const a = xScale.invert(mouseValue) \r\n            // const a = xScale(mouseValue) \r\n\r\n            return Math.round(a) ;//+18;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst VertSlider = ({ data, onChangeYear, left, right,width,height,handle1,handle2, sGroup, handleSide, label }) => {\r\n    const margins = { top: 20, right: 30, bottom: 20, left: 30 },\r\n        svgDimensions = { width: width, height: height };\r\n\r\n    const minData = d3.min(data), maxData = d3.max(data)\r\n\r\n    // const xScale = d3.scaleLinear()\r\n    //     .domain([0, maxData])\r\n    //     .range([margins.left, svgDimensions.width - margins.right])\r\n    //     .clamp(true);\r\n\r\n    const xScale = d3.scaleLinear()\r\n        .domain([minData, maxData])\r\n        .range([margins.left, svgDimensions.width - margins.right])\r\n        .clamp(true);\r\n\r\n    const yScale = d3\r\n        .scaleLinear()\r\n        .domain([minData, maxData])\r\n        .range([ svgDimensions.height -margins.bottom, margins.top])\r\n        .clamp(true)\r\n\r\n    const i1 = left, i2 = right\r\n\r\n\r\n    // const RangeBar = <line x1={margins.left} y1=\"0\" x2={svgDimensions.width - margins.right} y2=\"0\" className={\"rangeBar\"} />\r\n    // const RangeBarFilled = <line x1={xScale(i1)} y1=\"0\" x2={xScale(i2)} y2=\"0\" className={\"rangeBarFilled\"+sGroup} style={{stroke: \"#fa7070\",\"stroke-width\": \"3px\"}}/>\r\n\r\n\r\n    const RangeBar = <line x1={margins.left} y1=\"0\" x2={margins.left} y2={svgDimensions.height -margins.bottom } className={\"rangeBar\"} />\r\n    const RangeBarFilled = <line x1={margins.left} y1={yScale(i1)} x2={margins.left} y2={yScale(i2)}className={\"rangeBarFilled\"+sGroup} style={{stroke: \"#fa7070\",\"stroke-width\": \"3px\"}}/>\r\n\r\n    // const xScale2 = d3\r\n    //   .scaleLinear()\r\n    //   .domain([0, maxData])\r\n    //   .range([margins.left, svgDimensions.width - margins.right])\r\n\r\n      const xScale2 = d3\r\n      .scaleLinear()\r\n      .domain([minData, maxData])\r\n      .range([margins.left, svgDimensions.width - margins.right])\r\n\r\n\r\n\r\n        const yScale2 = d3\r\n        .scaleLinear()\r\n        .domain([minData, maxData])\r\n        .range([ svgDimensions.height -margins.bottom, margins.top])\r\n\r\n\r\n\r\n              \r\nreturn     <svg width={width} height={svgDimensions.height} >\r\n                <g className={\"rangeSliderGroup\"+sGroup} transform={`translate(0,${0})`}>\r\n                <Axis x={margins.left} y={0} scale={yScale2} label={label} type=\"Left\" />\r\n                {RangeBar}\r\n                {RangeBarFilled}\r\n                {/* <Axis margins={margins} svgDimensions={svgDimensions} xScale={xScale} data={data}/> */}\r\n                    {/* <Axis {...yProps}/> */}\r\n                    <Handle onChangeYear={onChangeYear} handle={handle1} handle2={handle2} \r\n                         handleSide={\"left\"} sGroup={sGroup} initialValue={i1} other={i2} data={data} xScale={yScale2} margins={margins} svgDimensions={svgDimensions} />\r\n                    <Handle onChangeYear={onChangeYear} handle={handle2} handle2={handle1}\r\n                         handleSide={\"right\"} sGroup={sGroup} initialValue={i2} other={i1}  data={data} xScale={yScale2} margins={margins} svgDimensions={svgDimensions} />\r\n                </g>\r\n    </svg>;\r\n             \r\n\r\n}\r\n\r\nexport default VertSlider;","import React from 'react'\r\nimport { ButtonToolbar, Button, ToggleButtonGroup, ToggleButton, Navbar,NavItem, Nav,NavDropdown } from 'react-bootstrap'\r\nimport { Link,NavLink } from 'react-router-dom'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport Container from 'react-bootstrap/Container'\r\n\r\n\r\n\r\nclass Navigation extends React.Component {\r\n    render() {\r\n        return (\r\n            // <div>\r\n                \r\n                // <Container>\r\n                <div className=\"header-bar\">\r\n                    {/* <Navbar bg=\"#495464\"  fixed=\"top\" expand=\"xl\"> */}\r\n                    <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\" expand=\"xl\">\r\n                        \r\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"ml-auto hidden-sm-up float-xs-left\" />\r\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\" fill=\"true\" variant=\"pills\">\r\n                            <Nav.Link href=\"/\">Home</Nav.Link>\r\n                            <Nav.Link href='/filter'>Filter</Nav.Link>\r\n                            {/* <Nav.Link href='/table'>Table</Nav.Link> */}\r\n                            <Nav.Link href='/bar'>Bar</Nav.Link>\r\n                            <Nav.Link href='/test'>test</Nav.Link>\r\n                            <Nav.Link href='/slider'>Slider</Nav.Link>\r\n                            <Nav.Link href='/scatter'>Scatter</Nav.Link>\r\n                            <Nav.Link href='/shotchart'>Shotchart</Nav.Link>\r\n                            <Nav.Link href='/my'>My Shotchart</Nav.Link>\r\n                            <Nav.Link href='/grid'>Grid</Nav.Link>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                            \r\n\r\n                            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n                                <NavDropdown.Item href=\"/test\">Action</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                                <NavDropdown.Divider />\r\n                                <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n                    </Navbar>\r\n                </div>\r\n            // </Container>\r\n            // </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation;","const data = [\r\n    {\r\n        country: 'India',\r\n        value: 273\r\n    },\r\n    {\r\n        country: 'USA',\r\n        value: 2420\r\n    },\r\n    {\r\n        country: 'China',\r\n        value: 1270\r\n    },\r\n    {\r\n        country: 'UK',\r\n        value: 553\r\n    },\r\n    {\r\n        country: 'Germany',\r\n        value: 731\r\n    },\r\n    {\r\n        country: 'Sweden',\r\n        value: 136\r\n    },\r\n    {\r\n        country: 'France',\r\n        value: 682\r\n    },\r\n    {\r\n        country: 'Australia',\r\n        value: 239\r\n    },\r\n    {\r\n        country: 'Canada',\r\n        value: 367\r\n    },\r\n    {\r\n        country: 'Brazil',\r\n        value: 442\r\n    }\r\n];\r\n\r\nexport default data;","import React, { Component } from 'react';\r\nimport BarChart from '../graphs/BarChart'\r\nimport { CONFIG } from '../config.js';\r\nimport * as d3 from \"d3\";\r\nimport axios from 'axios'\r\n\r\n\r\nclass Main1 extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            players: [],\r\n            bardata: [12,25,6,6,9,10],\r\n            width: 600,\r\n            height: 320,\r\n            id: \"root\",\r\n            error : null,\r\n            isLoaded : false,\r\n            posts : []   ,\r\n            data: d3.range(100).map(_ => [Math.random(), Math.random()])\r\n        };\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n\r\n    //    fetch(CONFIG.API_BASE_URL)\r\n    //    .then( response => response.json())\r\n    //    .then(\r\n    //        // handle the result\r\n    //        (result) => {\r\n    //            this.setState({\r\n    //                isLoaded : true,\r\n    //                players : result\r\n    //            });\r\n    //        },\r\n    //        // Handle error \r\n    //        (error) => {\r\n    //            this.setState({\r\n    //                isLoaded: true,\r\n    //                error\r\n    //            })\r\n    //        },\r\n    //    )\r\n\r\n       const racesRequest = axios.get(CONFIG.SHOTS)\r\n       .then(response =>\r\n           response.data.map((player,index) => ({\r\n               firstname: player.PLAYER_NAME,\r\n               lastname: player.TEAM,\r\n               PTS: player.SHOT_DIST,\r\n               key: 'players',\r\n               selected: false,\r\n               id: index\r\n           }))\r\n       )\r\n       .then(\r\n        // handle the result\r\n        (response) => {\r\n            this.setState({\r\n                isLoaded : true,\r\n                 players: response \r\n            });\r\n        },\r\n        // Handle error \r\n        (error) => {\r\n            this.setState({\r\n                isLoaded: true,\r\n                error\r\n            })\r\n        },\r\n    )\r\n     }\r\n\r\n    render() {\r\n\r\n        const names = this.state.players.map(function (p) {return p.firstname})\r\n        const pts1 = this.state.players.map(post => (Math.trunc(post.PTS)))\r\n        const pts = pts1.slice(0,2)\r\n       \r\n        return (\r\n            <div className=\"header\">\r\n                <div className=\"wrapper\" style={{display: 'flex',  justifyContent:'center'}}>\r\n                  <h1>Hoooommeee page </h1>\r\n                    {/* {Header} */}\r\n                </div>\r\n              \r\n                <div style={{display: 'flex',  justifyContent:'center'}}>\r\n                \r\n                     <BarChart  data={pts} size={[200, 200] }/>\r\n                    \r\n                    \r\n                </div>\r\n                <div>\r\n                    {\r\n                    this.state.players.map(post => (\r\n                        <li  align=\"start\">\r\n                            <div>\r\n                                <p>{post.firstname} {post.lastname}: {post.PTS}</p>                               \r\n                            </div>\r\n                        </li>\r\n                    ))\r\n                    }\r\n                </div>\r\n\r\n        \r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Main1;\r\n\r\n","import React, { Component } from 'react';\r\n// import { Element } from 'react-faux-dom';\r\nimport * as d3 from 'd3';\r\n// import '../App.css';\r\nimport data from '../data';\r\n\r\nclass App1 extends Component {\r\n\r\n    plot(chart, width, height) {\r\n        // create scales!\r\n        const xScale = d3.scaleBand()\r\n            .domain(data.map(d => d.country))\r\n            .range([0, width]);\r\n        const yScale = d3.scaleLinear()\r\n            .domain([0, d3.max(data, d => d.value)])\r\n            .range([height, 0]);\r\n        const colorScale = d3.scaleOrdinal(d3.schemeCategory10);\r\n\r\n        chart.selectAll('.bar')\r\n            .data(data)\r\n            .enter()\r\n            .append('rect')\r\n            .classed('bar', true)\r\n            .attr('x', d => xScale(d.country))\r\n            .attr('y', d => yScale(d.value))\r\n            .attr('height', d => (height - yScale(d.value)))\r\n            .attr('width', d => xScale.bandwidth())\r\n            .style('fill', (d, i) => colorScale(i));\r\n\r\n        chart.selectAll('.bar-label')\r\n            .data(data)\r\n            .enter()\r\n            .append('text')\r\n            .classed('bar-label', true)\r\n            .attr('x', d => xScale(d.country) + xScale.bandwidth()/2)\r\n            .attr('dx', 0)\r\n            .attr('y', d => yScale(d.value))\r\n            .attr('dy', -6)\r\n            .text(d => d.value);\r\n\r\n        const xAxis = d3.axisBottom()\r\n            .scale(xScale);\r\n            \r\n        chart.append('g')\r\n            .classed('x axis', true)\r\n            .attr('transform', `translate(0,${height})`)\r\n            .call(xAxis);\r\n\r\n        const yAxis = d3.axisLeft()\r\n            .ticks(5)\r\n            .scale(yScale);\r\n\r\n        chart.append('g')\r\n            .classed('y axis', true)\r\n            .attr('transform', 'translate(0,0)')\r\n            .call(yAxis);\r\n\r\n        chart.select('.x.axis')\r\n            .append('text')\r\n            .attr('x',  width/2)\r\n            .attr('y', 60)\r\n            .attr('fill', '#000')\r\n            .style('font-size', '20px')\r\n            .style('text-anchor', 'middle')\r\n            .text('Country');    \r\n            \r\n        chart.select('.y.axis')\r\n            .append('text')\r\n            .attr('x', 0)\r\n            .attr('y', 0)\r\n            .attr('transform', `translate(-50, ${height/2}) rotate(-90)`)\r\n            .attr('fill', '#000')\r\n            .style('font-size', '20px')\r\n            .style('text-anchor', 'middle')\r\n            .text('Government Expenditure in Billion Dollars');   \r\n            \r\n        const yGridlines = d3.axisLeft()\r\n            .scale(yScale)\r\n            .ticks(5)\r\n            .tickSize(-width,0,0)\r\n            .tickFormat('')\r\n\r\n        chart.append('g')\r\n            .call(yGridlines)\r\n            .classed('gridline', true);\r\n    }\r\n\r\n    drawChart() {\r\n        const width = 1000;\r\n        const height = 450;\r\n\r\n        const el = new Element('div');\r\n        const svg = d3.select(el)\r\n            .append('svg')\r\n            .attr('id', 'chart')\r\n            .attr('width', width)\r\n            .attr('height', height);\r\n\r\n        const margin = {\r\n            top: 60,\r\n            bottom: 100,\r\n            left: 80,\r\n            right: 100\r\n        };\r\n\r\n        const chart = svg.append('g')\r\n            .classed('display', true)\r\n            .attr('transform', `translate(${margin.left},${margin.top})`);\r\n\r\n        const chartWidth = width - margin.left - margin.right;\r\n        const chartHeight = height - margin.top - margin.bottom\r\n        this.plot(chart, chartWidth, chartHeight);\r\n\r\n        return el.toReact();\r\n    }\r\n\r\n    render() {\r\n        // return this.drawChart();\r\n        return (\r\n\r\n            // <div>Test</div>\r\n            this.drawChart()\r\n        )\r\n    }\r\n}\r\n\r\nexport default App1;\r\n\r\n// class App1 extends Component {\r\n//     constructor(props){\r\n//        super(props)\r\n//     //    this.createBarChart = this.createBarChart.bind(this)\r\n//     }\r\n\r\n//  render() {\r\n//        return <svg ref={node => this.node = node}\r\n//        width={this.props.size[0]+20} height={this.props.size[1]+20}>\r\n//        </svg>\r\n//     }\r\n//  }\r\n//  export default App1;","import React, { Component } from 'react'\r\nimport * as d3 from 'd3';\r\nimport { CONFIG } from '../config.js';\r\nimport App1 from './Better'\r\n\r\n\r\nclass Main extends Component {\r\n\tconstructor(props) {\r\n\tsuper(props);\r\n\tthis.state = {\r\n\t\tplayers: [],\r\n\t\tpp: [],\r\n\t\tbardata: [12,5,6,6,9,10],\r\n\t\twidth: 200,\r\n\t\theight: 150,\r\n\t\tid: \"root\",\r\n\t\terror : null,\r\n\t\tisLoaded : false,\r\n\t\tposts : []   ,\r\n\t\tdata: d3.range(100).map(_ => [Math.random(), Math.random()])\r\n\t};\r\n\t}\r\n\r\n\t componentDidMount() {\r\n\r\n\t\tfetch(CONFIG.API_BASE_URL)\r\n\t\t.then( response => response.json())\r\n\t\t.then(\r\n\t\t\t// handle the result\r\n\t\t\t(result) => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tisLoaded : true,\r\n\t\t\t\t\tplayers : result\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t// Handle error \r\n\t\t\t(error) => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tisLoaded: true,\r\n\t\t\t\t\terror\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t)\r\n  }\r\n\tdateParse = d3.timeParse(\"%d %b %Y\");\r\n\r\n    rowParse = ({ date, time, runner }) => ({\r\n        date: this.dateParse(date),\r\n        time: time.split(':')\r\n                  .map(Number)\r\n                  .reverse()\r\n                  .reduce((t, n, i) => i > 0 ? t+n*60**i : n),\r\n        runner\r\n\t});\r\n\t\r\n\t// onClick = () => {\r\n\t// \tconst { width, height } = this.state;\r\n\t// \tthis.setState({\r\n\t// \t  width: width * 0.7,\r\n\t// \t  height: height * 0.7\r\n\t// \t});\r\n\t//   };\r\n\r\n   \r\n   render() {\r\n\t//const { data } = this.state;\r\n\t const players = this.state.players.map((player, index) => <li key={index}>{player.firstname} {player.lastname}{player.PTS}</li>);\r\n\tconst pts = this.state.players.map(function (p) {return p.PTS})\r\n\t \r\n\tconst { width, height, data } = this.state;\r\n\tconst randomData = new Array(10).fill(0).map(_ => Math.random());\r\n\r\n\r\n   return (\r\n\t\t<div className=\"App\">\r\n\t\t\t<h2>DonutChart</h2>\r\n\t\t   {\r\n\t\t\t\tthis.state.posts.map(post => (\r\n\t\t\t\t\t<li  align=\"start\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<p>{post.firstname} {post.lastname}: {post.PTS}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t))\r\n\t\t\t}\r\n\r\n\t\t\t<div>\r\n\t\t\t<App1></App1>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n      </div>\r\n   )\r\n   }\r\n}\r\nexport default Main\r\n\r\n\r\n","\r\nimport React, { Component } from 'react';\r\nimport BarChart from '../graphs/BarChart'\r\nimport { CONFIG } from '../config.js';\r\nimport * as d3 from \"d3\";\r\nimport axios from 'axios'\r\nimport Dropdown from '../components/Dropdown';\r\nimport MultiDropdown from '../components/MultiDropdown';\r\n// import RangeSlider from \"./sibs\"\r\nimport RangeSlider from \"../components/RangeSlider\"\r\n\r\n\r\n\r\nclass Main1 extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            players: [],\r\n            test: [],\r\n            response: [],\r\n            bardata: [12,25,6,6,9,10],\r\n            width: 600,\r\n            height: 320,\r\n            id: \"root\",\r\n            error : null,\r\n            isLoaded : false,\r\n            fnames : []   ,\r\n            data: d3.range(100).map(_ => [Math.random(), Math.random()]),\r\n            left: 0,\r\n            right: 30,\r\n            location: [\r\n                {\r\n                  id: 0,\r\n                  title: 'New York',\r\n                  selected: false,\r\n                  key: 'location'\r\n                },\r\n                {\r\n                  id: 1,\r\n                  title: 'Dublin',\r\n                  selected: false,\r\n                  key: 'location'\r\n                }\r\n                \r\n              ],\r\n\r\n              fruit: [\r\n                {\r\n                  id: 0,\r\n                  title: 'Apple',\r\n                  selected: false,\r\n                  key: 'fruit'\r\n                },\r\n                {\r\n                  id: 1,\r\n                  title: 'Orange',\r\n                  selected: false,\r\n                  key: 'fruit'\r\n                }\r\n              ]\r\n        };\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n\r\n      const racesRequest = axios.get(CONFIG.SHOTS)\r\n\t\t\t.then(response =>\r\n\t\t\t\tresponse.data\r\n\t\t\t).then(players => this.setDefault(players))\r\n       \r\n        //\r\n\r\n\r\n     }\r\n\r\n     setDefault = (players) => {\r\n          players.map(i => i.key = \"players\");\r\n      \r\n          players.map(i => i.selected = true);\r\n          players.map((p, i) => p.id = p.PLAYER_ID);\r\n          players.map((p, i) => p.shotid = i);\r\n\r\n\r\n            this.setState({ players: players})\r\n\r\n        }\r\n\r\n     resetThenSet = (value, key) => \r\n     {\r\n\t\tlet data = [...this.state[key]];\r\n\t\tdata.forEach(item => item.selected = false);\r\n        data[value].selected = true;\r\n        \r\n\r\n        this.setState({ key: data });\r\n        \r\n    }\r\n    \r\n    filterAndSort_Laps = (selectedRace, selectedSeason, laptimes, filtQ) => {\r\n\r\n\t\tvar filtered = laptimes.filter(d => (d.raceName === selectedRace.raceName && d.season === selectedSeason.season))\r\n\r\n\t\t// if (filtQ) {\r\n\t\t// \treturn this.filterQuantile(filteredLapsResults)\r\n\t\t// } else {\r\n\t\t// \tconsole.log(filteredLapsResults)\r\n\t\t// \treturn filteredLapsResults\r\n        // }\r\n        return filtered\r\n\r\n    }\r\n    \r\n\r\n    toggleSelected = (id, key) => {\r\n      let temp = JSON.parse(JSON.stringify(this.state[key]))\r\n\r\n      temp.forEach(function myFunction(item, index, arr) {\r\n        // arr[index] = item * 10;\r\n        if (arr[index].id === id) {\r\n          temp[index].selected = !temp[index].selected\r\n        }\r\n  \r\n      })\r\n  \r\n  \r\n      // uniqList[listid].selected = !uniqList[listid].selected\r\n      this.setState({\r\n        [key]: temp\r\n      })\r\n      }\r\n\r\n      handleChangeYear(year1,year2){\r\n        this.setState({\r\n            left: year1,\r\n            right: year2,\r\n            \r\n        })\r\n    }\r\n    \r\n    //   resetThenSet = (id, key) => {\r\n    //     let temp = JSON.parse(JSON.stringify(this.state[key]))\r\n    //     temp.forEach(item => item.selected = false);\r\n    //     temp[id].selected = true;\r\n    //     this.setState({\r\n    //       [key]: temp\r\n    //     })\r\n    //   }\r\n\r\n    render() {\r\n        const {fnames, players} = this.state\r\n\r\n\r\n          var uniqIds = [...new Set(players.map(d => d.PLAYER_ID))]\r\n          var uniqList = players.map((p, index) => ({\r\n            option: p[\"PLAYER_NAME\"],\r\n            id: p[\"PLAYER_ID\"],\r\n            selected: false,\r\n            key: \"players\"\r\n          }))\r\n      \r\n          uniqList = uniqList.filter((item, index) => uniqIds.includes(item.id))\r\n          // uniqList = uniqList.filter((item,index)=> uniqList.id.indexOf(item.id)===index)                                           \r\n          uniqList = uniqList.filter((uniqList, index, self) =>\r\n              index === self.findIndex((t) => (t.id === uniqList.id)))\r\n      \r\n          uniqList.map((p, i) => p.listid = i);\r\n\r\n        // const names = this.state.players.map(function (p) {return p.firstname})\r\n        // const pts = this.state.players.map(post => (Math.trunc(post.PTS)))\r\n        // const pts = this.state.test.map(post => (Math.trunc(post.PTS)))\r\n        const names = this.state.players.map(post => post.firstname)\r\n\r\n        // var selectedPLayer = fnames.find(d => (d.selected === true))\r\n        // var selPTS = players.find(d => (d.firstname === selectedPLayer.firstname))\r\n        // var selPTS1 = players.find(d => (d.firstname === \"Steph\"))\r\n        \r\n        // var selectedPLayer = fnames.find(d => (d.selected === true))\r\n        // var selPTS = players.find(d => (d.firstname === selectedPLayer.firstname))\r\n        // var selPTS1 = players.find(d => (d.firstname === \"Kevin\"))\r\n\r\n        // const a =  players[0].PTS\r\n        \r\n        // const pts = selPTS1.map(post => (Math.trunc(post.PTS)))\r\n        // const pts = [a,44]\r\n\r\n        // var cool = [\"Kevin\", \"Steph\"]\r\n\r\n        // var p = players.filter(d => (d.selected === true))\r\n        // const pnames = p.map(function (p) {return p.id})\r\n\r\n        var ab = players.filter((p) => (p.selected == true))\r\n        \r\n        // var ab = players.filter((person) => pnames.includes(person.id))\r\n        // const pts = ab.map(post => (post.PTS))\r\n        \r\n        \r\n        ab = ab.filter((p) => (p.SHOT_DIST>= this.state.left) && (p.SHOT_DIST <= this.state.right))\r\n        \r\n        var pts = ab.map(post => (post.SHOT_DIST))\r\n        var wholePts = players.map(post => (post.SHOT_DIST))\r\n        // wholePts = [0].concat(wholePts)\r\n        // wholePts = [100].concat(wholePts)\r\n        // wholePts.sort()\r\n        // wholePts = wholePts.concat(100)\r\n        // wholePts.unshift(0)\r\n        // wholePts.unshift(50)\r\n\r\n        // wholePts.push(100)\r\n        wholePts = wholePts.sort(function(a, b){return a-b})\r\n        pts = pts.sort(function(a, b){return a-b})\r\n\r\n        \r\n\r\n       \r\n        return (\r\n            <div className=\"hmmw\" style={{background: '#666699'}}>\r\n              <h1>Hello world</h1>\r\n                <div className=\"asd\" style={{display: 'flex',  justifyContent:\"flex-start\", \"margin-left\": \"50px\"}}>\r\n                  \r\n                    {/* {Header} */}\r\n\r\n                    {/* <Dropdown\r\n                        title=\"Year\"\r\n                        col=\"firstname\"\r\n                        list={this.state.fnames}\r\n                        resetThenSet={this.resetThenSet}\r\n                    /> */}\r\n\r\n                        <MultiDropdown\r\n                            titleHelper=\"Player\"\r\n                            title=\"Select Players\"\r\n                            col=\"PLAYER_NAME\"\r\n                            uid=\"PLAYER_ID\"\r\n\r\n                            list={this.state.players}\r\n                            uniqList={uniqList}\r\n                            toggleItem={this.toggleSelected}\r\n                                />\r\n                                {/* {wholePts} */}\r\n                </div>\r\n              \r\n             \r\n                {/* style={{background: '#343042'}} */}\r\n\r\n                  {/* <div style={{display: 'flex',  justifyContent:\"flex-start\",background: '#343042', \"margin-left\": \"200px\"}}> */}\r\n                  {/* <div style={{display: 'flex',  justifyContent:\"flex-start\",\"margin-left\": \"200px\"}}> */}\r\n                    \r\n                  <div><br></br></div>\r\n\r\n                  <div style={{display: 'flex',  justifyContent:\"flex-start\",\"margin-left\": \"50px\"}}>\r\n                    \r\n                  {/* {this.state.left}<RangeSlider onChangeYear={this.handleChangeYear.bind(this)} data={wholePts} left={this.state.left} right={this.state.right}/>{this.state.right } */}\r\n\r\n                    <RangeSlider onChangeYear={this.handleChangeYear.bind(this)}\r\n                      data={wholePts} \r\n                      left={this.state.left}\r\n                        right={this.state.right}\r\n                        width={500}\r\n                        height={150}\r\n                        />\r\n\r\n                  </div>\r\n\r\n                  <div style={{display: 'flex',  justifyContent:'center'}}>\r\n                \r\n                       \r\n                        <BarChart  data={pts} size={[850, 250] }/>\r\n                      \r\n                      {/* {data={pts}}  data={[31,32,25]}*/}\r\n                  </div>\r\n\r\n\r\n\r\n                <div>\r\n                    {/* {p} */}\r\n                    {/* <br></br> */}\r\n                    {\r\n                    this.state.players.map(post => (\r\n                        <li  align=\"start\">\r\n                            <div>\r\n                                <p>{post.firstname} {post.lastname}: {post.PTS}</p>                               \r\n                                {/* <p>{post.firstname} </p>              */}\r\n                            </div>\r\n                        </li>\r\n                    ))\r\n                    }\r\n                </div>\r\n\r\n        \r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Main1;\r\n\r\n\r\n// function DisplayCircle({ data, index, title, cost, group }) {\r\n//   const currentColor = getBubbleColor(group);\r\n//   return (\r\n//   <circle\r\n//       key={index}\r\n//       r={data.r}\r\n//       fill={currentColor}\r\n//       strokeWidth=\"1\"\r\n//       stroke={d3.rgb(currentColor).darker()}\r\n//       cx={data.x}\r\n//       cy={data.y}\r\n//   />\r\n//   );}","import React, { Component } from 'react'\r\n// import './App.css'\r\nimport { scaleLinear } from \"d3-scale\"\r\nimport { max } from 'd3-array'\r\nimport { select } from 'd3-selection'\r\nimport * as d3 from \"d3\";\r\n\r\n/********************* BubbleChart start ***************************/\r\nfunction Circle(data){\r\n    let maxRadius = d3.max(data,function (d) {\r\n        return d.count;\r\n    });\r\n    let minRadius = d3.min(data,function (d) {\r\n        return d.count;\r\n    });\r\n    let radiusScale = d3.scaleSqrt().domain([minRadius,maxRadius]).range([5,40]);\r\n\r\n    return data.map((circle,index)=>{\r\n        return <circle\r\n            key={index}\r\n            className=\"bubble\"\r\n            fill={`hsla(${circle.count},100%,70%,0.15)`}\r\n            stroke-width=\"1px\"\r\n            stroke={`hsla(${circle.count},100%,70%,0.8)`}\r\n            r = {radiusScale(circle.count)}\r\n            cx={circle.x}\r\n            cy={circle.y}\r\n             onMouseMove = {(e) => {\r\n                 d3.select(\".bubbleChartTooltip\")\r\n                    .style(\"visibility\",\"visible\")\r\n                    .text(circle.name + \" (\" +circle.count+\")\")\r\n                    .attr('x',(e.nativeEvent.offsetX + 10) + \"px\")\r\n                    .attr('y',(e.nativeEvent.offsetY - 10) + \"px\")\r\n             }}\r\n             onMouseOut = {() => {\r\n                 d3.select(\".bubbleChartTooltip\")\r\n                     .style(\"visibility\",\"hidden\")\r\n             }}\r\n        />\r\n    });\r\n}\r\n\r\nclass BubbleChart extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            bubbleChartData: []\r\n        }\r\n    }\r\n\r\n  simulation(bubbleChartData){\r\n      let maxRadius = d3.max(bubbleChartData,function (d) {\r\n          return d.count;\r\n      });\r\n      let minRadius = d3.min(bubbleChartData,function (d) {\r\n          return d.count;\r\n      });\r\n      let radiusScale = d3.scaleSqrt().domain([minRadius,maxRadius]).range([5,40]);\r\n      let self = this;\r\n\r\n      self.tick = d3.forceSimulation()\r\n          .nodes(bubbleChartData)\r\n          .force(\"xTowardsTheCenter\",d3.forceX(0).strength(0.01))\r\n          .force(\"yTowardsTheCenter\",d3.forceY(100).strength(0.01))\r\n          .force(\"collide\",d3.forceCollide(function(d){\r\n              return radiusScale(d.count);\r\n          }))\r\n          .on(\"tick\",ticked);\r\n\r\n// simulation.nodes([nodes]) adds properties to data.\r\n    function ticked(){\r\n        self.setState({\r\n            bubbleChartData: bubbleChartData\r\n        })\r\n    }\r\n    }\r\n//\r\n    componentWillReceiveProps(nextProps){\r\n        this.setState({\r\n            bubbleChartData: nextProps.bubbleChartData\r\n        },function () {\r\n            this.simulation(this.state.bubbleChartData)\r\n        })\r\n    }\r\n    componentWillMount(){\r\n        this.setState({\r\n            bubbleChartData: this.props.bubbleChartData\r\n        },function () {\r\n            this.simulation(this.state.bubbleChartData)\r\n        })\r\n    }\r\n\r\n    render() {\r\n      const margins = {top: 20,right: 50,bottom: 20, left: 50},\r\n          svgDimensions = {width: window.screen.width/2, height: window.screen.height/2 };\r\n\r\n        const tooltip = <text fill=\"#fff\" fontSize=\"14\" className=\"bubbleChartTooltip\" style={{'visibility':'hidden'}}>tooltip</text>\r\n        return (\r\n              <svg width={svgDimensions.width} height={svgDimensions.height}>\r\n                <g className=\"bubbleChartGroup\" transform={`translate(${svgDimensions.width/2},${svgDimensions.height/2 - 50})`}>\r\n                    {Circle(this.state.bubbleChartData)}\r\n                </g>\r\n                  {tooltip}\r\n              </svg>\r\n        );\r\n    }\r\n}\r\n/********************* BubbleChart end ***************************/\r\n\r\n\r\n /********************* RangeSlider start ***************************/\r\nclass Axis extends React.Component {\r\n  componentDidMount(){\r\n    this.renderAxis();\r\n  }\r\n  renderAxis(){\r\n    const {svgDimensions,margins} = this.props\r\n    const xValue = (svgDimensions.width - margins.left - margins.right)/10;\r\n    d3.select(this.axisElement)\r\n      .call(d3.axisBottom()\r\n        .scale(this.props.xScale)\r\n        .ticks(6)\r\n        .tickFormat(d3.format(\"\"))\r\n      )\r\n      .selectAll(\"text\")\r\n      .style(\"font-size\",\"10px\")\r\n      .style(\"fill\",\"white\")\r\n      .attr(\"x\",xValue)\r\n\r\n    d3.select(this.axisElement).selectAll(\"line\").attr(\"stroke\",\"white\")\r\n    d3.select(this.axisElement).select(\"path\").style(\"d\",\"none\")\r\n  }\r\n  render() {\r\n    return (\r\n      <g className=\"rangeSliderAxis\" transform=\"translate(0,10)\" ref={el => this.axisElement = el } />\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst xScale = d3.scaleLinear()\r\n    .domain([2012,2017])\r\n    .range([50,window.screen.width/2 - 50])\r\n    .clamp(true);\r\nlet h1 = xScale(2013),h2=xScale(2015);\r\nlet tempH1 = xScale(2013),tempH2=xScale(2015);\r\nlet trueYear1 = 2013,trueYear2=2015;\r\n\r\nclass Handle extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      handle: ''\r\n    }\r\n  }\r\n  onMouseOver(){\r\n    this.setState({\r\n      handle: this.props.handle\r\n    });\r\n  }\r\n  render() {\r\n    const {initialValue,xScale,handle} = this.props;\r\n    const circle = <circle r=\"10px\" fill=\"#fa7070\"/>\r\n\r\n    return <g className={handle} transform={`translate(${xScale(initialValue)},0)`}\r\n     onMouseOver={this.onMouseOver.bind(this)}>{circle}</g>\r\n  }\r\n\r\n  componentDidUpdate(prevProps,prevState){\r\n    let {margins,svgDimensions,xScale,onChangeYear} = prevProps;\r\n    let mouseValue,trueMouseValue,self=this;\r\n    let handle=this.state.handle;\r\n    let minWidth = ((window.screen.width/2 - margins.left - margins.right)/5);\r\n\r\n    const drag = d3.drag()\r\n     .on(\"drag\",draged).on(\"end\",dragend);\r\n\r\n    d3.select(\".rangeSliderGroup\").call(drag);\r\n\r\n    function draged(){\r\n      mouseValue = d3.mouse(this)[0];\r\n      trueMouseValue = getTrueMouseValue(mouseValue);\r\n\r\n      handle === \"handle1\" ? h1=mouseValue : h2=mouseValue;\r\n\r\n      if ((h2-h1)>minWidth && mouseValue > margins.left && mouseValue < (svgDimensions.width - margins.right)){\r\n        d3.select(\".\"+self.state.handle).attr(\"transform\",\"translate(\"+mouseValue+\",0)\");\r\n          if (handle === \"handle1\") {\r\n              tempH1 = mouseValue;\r\n              trueYear1 = trueMouseValue;\r\n          } else {\r\n              tempH2 = mouseValue\r\n              trueYear2 = trueMouseValue;\r\n          }\r\n      } else {\r\n        h1 = tempH1;\r\n        h2 = tempH2;\r\n        handle === \"handle1\" ? trueMouseValue = trueYear1 : trueMouseValue = trueYear2;\r\n      }\r\n        d3.select(\".rangeBarFilled\").remove();\r\n        d3.select(\".rangeSliderGroup\")\r\n            .insert(\"line\",\".rangeSliderAxis\")\r\n            .attr(\"x1\",h1)\r\n            .attr(\"x2\",h2)\r\n            .attr(\"y1\",0)\r\n            .attr(\"y2\",0)\r\n            .attr(\"class\",\"rangeBarFilled\")\r\n\r\n    }\r\n    function dragend() {\r\n        h1 = xScale(getTrueMouseValue(tempH1));\r\n        h2 = xScale(getTrueMouseValue(tempH2));\r\n\r\n        d3.select(\".\"+self.state.handle).attr(\"transform\",\"translate(\"+xScale(trueMouseValue)+\",0)\");\r\n        d3.select(\".rangeBarFilled\").remove();\r\n        d3.select(\".rangeSliderGroup\")\r\n            .insert(\"line\",\".rangeSliderAxis\")\r\n            .attr(\"x1\",xScale(trueYear1))\r\n            .attr(\"x2\",xScale(trueYear2))\r\n            .attr(\"y1\",0)\r\n            .attr(\"y2\",0)\r\n            .attr(\"class\",\"rangeBarFilled\");\r\n\r\n        onChangeYear(trueYear1,trueYear2);\r\n    }\r\n    function getTrueMouseValue(mouseValue){\r\n        return Math.round(xScale.invert(mouseValue));\r\n      }\r\n  }\r\n}\r\n\r\nconst RangeSlider = ({data,onChangeYear}) => {\r\n  const margins = {top: 20, right: 50, bottom: 20, left: 50},\r\n          svgDimensions = {width: window.screen.width/2, height: window.screen.height/6 };\r\n  const xScale = d3.scaleLinear()\r\n    .domain([2012,2017])\r\n    .range([margins.left,svgDimensions.width - margins.right])\r\n    .clamp(true);\r\n\r\n  const RangeBar = <line x1={margins.left} y1=\"0\" x2={svgDimensions.width - margins.right} y2=\"0\" className=\"rangeBar\" />\r\n  const RangeBarFilled = <line x1={xScale(data.initialValue1)} y1=\"0\" x2={xScale(data.initialValue2)} y2=\"0\" className=\"rangeBarFilled\" />\r\n\r\n  return <svg className=\"rangeSliderSvg\" width={svgDimensions.width} height={svgDimensions.height}>\r\n      <g className=\"rangeSliderGroup\" transform={`translate(0,${svgDimensions.height - margins.bottom - 40})`}>\r\n         {RangeBar}{RangeBarFilled}\r\n         <Axis margins={margins} svgDimensions={svgDimensions} xScale={xScale}/>\r\n         <Handle onChangeYear={onChangeYear} handle=\"handle1\" initialValue={data.initialValue1} data={data} xScale={xScale} margins={margins} svgDimensions={svgDimensions} />\r\n         <Handle onChangeYear={onChangeYear} handle=\"handle2\" initialValue={data.initialValue2} data={data} xScale={xScale} margins={margins} svgDimensions={svgDimensions} />\r\n      </g>\r\n  </svg>;\r\n}\r\n/********************* RangeSlider end ***************************/\r\n\r\nclass Charts extends React.Component{\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n        rangeSliderData : '',\r\n        bubbleChartData : []\r\n    }\r\n  }\r\n  componentWillMount(){\r\n    this.setState({\r\n        rangeSliderData: {\r\n            initialValue1 : 2013,\r\n            initialValue2 : 2015\r\n        },\r\n        bubbleChartData: [\r\n            {\r\n            \"name\": \"Orland\",\r\n            \"count\": 18\r\n        }, {\r\n            \"name\": \"Keely\",\r\n            \"count\": 363\r\n        }, {\r\n            \"name\": \"Melita\",\r\n            \"count\": 305\r\n        }, {\r\n            \"name\": \"Morry\",\r\n            \"count\": 140\r\n        }, {\r\n            \"name\": \"Joyous\",\r\n            \"count\": 481\r\n        }, {\r\n            \"name\": \"Emery\",\r\n            \"count\": 14\r\n        }, {\r\n            \"name\": \"Libbi\",\r\n            \"count\": 424\r\n        }, {\r\n            \"name\": \"Lauralee\",\r\n            \"count\": 385\r\n        }, {\r\n            \"name\": \"Noll\",\r\n            \"count\": 426\r\n        }, {\r\n            \"name\": \"Paulette\",\r\n            \"count\": 184\r\n        }, {\r\n            \"name\": \"Alfredo\",\r\n            \"count\": 233\r\n        }, {\r\n            \"name\": \"Todd\",\r\n            \"count\": 66\r\n        }, {\r\n            \"name\": \"Homer\",\r\n            \"count\": 335\r\n        }, {\r\n            \"name\": \"Hana\",\r\n            \"count\": 343\r\n        }, {\r\n            \"name\": \"Gaile\",\r\n            \"count\": 208\r\n        }, {\r\n            \"name\": \"Rhetta\",\r\n            \"count\": 174\r\n        }, {\r\n            \"name\": \"Claudine\",\r\n            \"count\": 125\r\n        }, {\r\n            \"name\": \"Bonita\",\r\n            \"count\": 138\r\n        }, {\r\n            \"name\": \"Anstice\",\r\n            \"count\": 367\r\n        }, {\r\n            \"name\": \"Ginger\",\r\n            \"count\": 313\r\n        }]\r\n    });\r\n  }\r\n\r\n  handleChangeYear(year1,year2){\r\n      this.setState({\r\n          bubbleChartData: [{\r\n              \"name\": \"Orland\",\r\n              \"count\": 18\r\n          }, {\r\n              \"name\": \"Keely\",\r\n              \"count\": 363\r\n          }, {\r\n              \"name\": \"Melita\",\r\n              \"count\": 305\r\n          }, {\r\n              \"name\": \"Morry\",\r\n              \"count\": 140\r\n          }, {\r\n              \"name\": \"Joyous\",\r\n              \"count\": 481\r\n          }, {\r\n              \"name\": \"Emery\",\r\n              \"count\": 14\r\n          }, {\r\n              \"name\": \"Libbi\",\r\n              \"count\": 424\r\n          }, {\r\n              \"name\": \"Lauralee\",\r\n              \"count\": 385\r\n          }, {\r\n              \"name\": \"Noll\",\r\n              \"count\": 426\r\n          }, {\r\n              \"name\": \"Paulette\",\r\n              \"count\": 184\r\n          }, {\r\n              \"name\": \"Alfredo\",\r\n              \"count\": 233\r\n          }, {\r\n              \"name\": \"Todd\",\r\n              \"count\": 66\r\n          }, {\r\n              \"name\": \"Homer\",\r\n              \"count\": 335\r\n          }, {\r\n              \"name\": \"Hana\",\r\n              \"count\": 343\r\n          }, {\r\n              \"name\": \"Gaile\",\r\n              \"count\": 208\r\n          }, {\r\n              \"name\": \"Rhetta\",\r\n              \"count\": 974\r\n          }, {\r\n              \"name\": \"Claudine\",\r\n              \"count\": 125\r\n          }, {\r\n              \"name\": \"Bonita\",\r\n              \"count\": 138\r\n          }, {\r\n              \"name\": \"Anstice\",\r\n              \"count\": 367\r\n          }, {\r\n              \"name\": \"Ginger\",\r\n              \"count\": 313\r\n          }]\r\n      })\r\n  }\r\n\r\n  render(){\r\n    const width = window.screen.width/2, height = window.screen.height;\r\n\r\n    return <div className=\"charts\" style={{width: width , margin: '0 auto'}}>\r\n          <div className=\"rangeSlider\" style={{background: '#343042'}}>\r\n            <RangeSlider onChangeYear={this.handleChangeYear.bind(this)} data={this.state.rangeSliderData}/>\r\n          </div>\r\n          <div className=\"bubbleChart\" style={{background: '#403c52'}}>\r\n            <BubbleChart bubbleChartData={this.state.bubbleChartData}/>\r\n          </div>\r\n      </div>;\r\n  }\r\n}\r\nexport default Charts;\r\n// const mountingPoint = document.createElement('div');\r\n// mountingPoint.className = 'react-app';\r\n// document.body.appendChild(mountingPoint);\r\n\r\n// ReactDOM.render(\r\n//   <Charts />,\r\n//   mountingPoint\r\n// )\r\n","import React, { Component } from 'react'\r\n// import './App.css'\r\nimport { scaleLinear } from \"d3-scale\"\r\nimport { max } from 'd3-array'\r\nimport { select } from 'd3-selection'\r\nimport * as d3 from \"d3\";\r\n\r\n/********************* BubbleChart start ***************************/\r\n\r\n/********************* BubbleChart end ***************************/\r\n\r\n\r\n/********************* RangeSlider start ***************************/\r\nconst rng = [2000, 2105]\r\n\r\nclass Axis extends React.Component {\r\n    componentDidMount() {\r\n        this.renderAxis();\r\n    }\r\n    renderAxis() {\r\n        const { svgDimensions, margins, textcolor } = this.props\r\n        const xValue = (svgDimensions.width - margins.left - margins.right) / 10;\r\n        d3.select(this.axisElement)\r\n            .call(d3.axisBottom()\r\n                .scale(this.props.xScale)\r\n                .ticks(6)\r\n                .tickFormat(d3.format(\"\"))\r\n                //.styles(\"d\",\"yellow\")\r\n            )\r\n            .selectAll(\"text\")\r\n            .style(\"font-size\", \"10px\")\r\n            .style(\"fill\", \"black\")\r\n            .attr(\"x\", xValue)\r\n\r\n        d3.select(this.axisElement).selectAll(\"line\").attr(\"stroke\", \"black\")\r\n        d3.select(this.axisElement).select(\"path\").style(\"d\", \"none\")\r\n        // d3.select(this.axisElement).select(\"path\").style(\"stroke\",\"yellow\")\r\n        // \r\n    }\r\n    render() {\r\n        return (\r\n            //   <g className=\"rangeSliderAxis\" textcolor=\"blue\" transform=\"translate(0,10)\" ref={el => this.axisElement = el } />\r\n            <g></g>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const xScale = d3.scaleLinear()\r\n//     .domain(rng)\r\n//     .range([50,window.screen.width/2 - 50])\r\n//     .clamp(true);\r\n\r\n\r\n// let h1 = xScale(2013), \r\n// let h2 = xScale(2015);\r\n// let tempH1 = xScale(2013), tempH2 = xScale(2015);\r\n// let trueYear1 = 2013, trueYear2 = 2015;\r\n\r\nclass Handle extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            handle: '',\r\n            h1: null,\r\n            h2: null,\r\n            tempH1: null,\r\n            tempH2: null,\r\n            trueYear1: null,\r\n            trueYear2:null\r\n        }\r\n    }\r\n    onMouseOver() {\r\n        this.setState({\r\n            handle: this.props.handle\r\n        });\r\n    }\r\n    render() {\r\n        const { initialValue,other, xScale, handle } = this.props;\r\n        const circle = <circle r=\"10px\" fill=\"#fa7070\" />\r\n\r\n        if (handle === \"handle1\")\r\n        {\r\n            this.state.h1 = xScale(initialValue);\r\n            this.state.tempH1 = xScale(initialValue);\r\n            this.state.trueH1 = initialValue;\r\n\r\n            this.state.h2 = xScale(other);\r\n            this.state.tempH2 = xScale(other);\r\n            this.state.trueH2 = other;\r\n\r\n\r\n        }\r\n        else if (handle === \"handle2\")\r\n        {\r\n            this.state.h1 = xScale(other);\r\n            this.state.tempH1 = xScale(other);\r\n            this.state.trueH1 = other;\r\n\r\n            this.state.h2 = xScale(initialValue);\r\n            this.state.tempH2 = xScale(initialValue);\r\n            this.state.trueH2 = initialValue;\r\n            \r\n\r\n\r\n        }\r\n\r\n        return <g className={handle} transform={`translate(${xScale(initialValue)},0)`}\r\n            onMouseOver={this.onMouseOver.bind(this)}>{circle}</g>\r\n    }\r\n\r\n\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        // let {margins,data,svgDimensions,onChangeYear,initialValue} = prevProps;\r\n        let {margins,data,svgDimensions,onChangeYear,xScale,initialValue, other} = prevProps;\r\n\r\n        // let { margins,data, svgDimensions, xScale, onChangeYear } = prevProps;\r\n\r\n\r\n        const minData = d3.min(data), maxData = d3.max(data)\r\n\r\n        // const xScale = d3.scaleLinear()\r\n        // .domain([minData, maxData])\r\n        // .range([50,window.screen.width/2 - 50])\r\n        // .clamp(true);\r\n\r\n\r\n        // if (this.state.h1 === null  )\r\n        // {\r\n        //     // var h1 = xScale(initialValue);\r\n            \r\n        //     this.state.tempH1 =xScale(initialValue);\r\n\r\n        //     this.state.rueYear1 = initialValue;\r\n\r\n        //     this.state.h1 = xScale(initialValue);\r\n\r\n        //     // this.state.h2 = xScale(other);\r\n\r\n        //     this.state.tempH2 = xScale(other);\r\n        //     this.state.trueYear2 = other;\r\n\r\n        //     this.state.h2 = xScale(other);\r\n\r\n        // }\r\n\r\n        // if (this.state.h1 === null &&(this.state.handle === \"handle1\") )\r\n        // {\r\n        //     var h1 = xScale(initialValue);\r\n            \r\n        //     var tempH1 =xScale(initialValue);\r\n\r\n        //     var trueYear1 = initialValue;\r\n\r\n        //     this.state.h1 = xScale(initialValue);\r\n\r\n        // }\r\n        // else if ((this.state.h2 === null) && (this.state.handle === \"handle2\")) {\r\n\r\n        //     var h2 = xScale(initialValue);\r\n\r\n        //     var tempH2 = xScale(initialValue);\r\n        //     var trueYear2 = initialValue;\r\n\r\n        //     this.state.h2 = xScale(initialValue);\r\n\r\n        // }\r\n\r\n\r\n\r\n\r\n        let mouseValue, trueMouseValue, self = this;\r\n        let handle = this.state.handle;\r\n        let minWidth = 2//((window.screen.width/2 - margins.left - margins.right)/5);\r\n        // let minWidth = ((window.screen.width/2 - margins.left - margins.right)/10);\r\n\r\n\r\n        const drag = d3.drag()\r\n            .on(\"drag\", draged).on(\"end\", dragend);\r\n\r\n        d3.select(\".rangeSliderGroup\").call(drag);\r\n\r\n        function draged() {\r\n            mouseValue = d3.mouse(this)[0];\r\n            trueMouseValue = getTrueMouseValue(mouseValue);\r\n\r\n            handle === \"handle1\" ? this.state.h1 = mouseValue : this.state.h2 = mouseValue;\r\n\r\n            if ((this.state.h2 - this.state.h1) > minWidth && mouseValue > margins.left && mouseValue < (svgDimensions.width - margins.right)) {\r\n                d3.select(\".\" + self.state.handle).attr(\"transform\", \"translate(\" + mouseValue + \",0)\");\r\n                if (handle === \"handle1\") {\r\n                    this.state.tempH1 = mouseValue;\r\n                    this.state.trueH1 = trueMouseValue;\r\n                } else {\r\n                    this.state.tempH2 = mouseValue\r\n                    this.state.trueH2 = trueMouseValue;\r\n                }\r\n            }\r\n            else {\r\n                this.state.h1 = this.state.tempH1;\r\n                this.state.h2 = this.state.tempH2;\r\n                handle === \"handle1\" ? trueMouseValue = this.state.trueH1 : trueMouseValue = this.state.trueH2;\r\n            }\r\n            d3.select(\".rangeBarFilled\").remove();\r\n            d3.select(\".rangeSliderGroup\")\r\n                .insert(\"line\", \".rangeSliderAxis\")\r\n                .attr(\"x1\", this.state.h1)\r\n                .attr(\"x2\", this.state.h2)\r\n                .attr(\"y1\", 0)\r\n                .attr(\"y2\", 0)\r\n                .attr(\"class\", \"rangeBarFilled\")\r\n\r\n        }\r\n        function dragend() {\r\n            this.state.h1 = xScale(getTrueMouseValue(this.state.tempH1));\r\n            this.state.h2 = xScale(getTrueMouseValue(this.state.tempH2));\r\n            if (self.state.handle === \"\") {\r\n\r\n            }\r\n            else {\r\n                d3.select(\".\" + self.state.handle).attr(\"transform\", \"translate(\" + xScale(trueMouseValue) + \",0)\");\r\n                d3.select(\".rangeBarFilled\").remove();\r\n                d3.select(\".rangeSliderGroup\")\r\n                    .insert(\"line\", \".rangeSliderAxis\")\r\n                    .attr(\"x1\", xScale(this.state.trueH1))\r\n                    .attr(\"x2\", xScale(this.state.trueH2))\r\n                    .attr(\"y1\", 0)\r\n                    .attr(\"y2\", 0)\r\n                    .attr(\"class\", \"rangeBarFilled\");\r\n\r\n                onChangeYear(this.state.trueH1, this.state.trueH2);\r\n            }\r\n\r\n\r\n        }\r\n        function getTrueMouseValue(mouseValue) {\r\n            // const a = xScale.invert(mouseValue) * 10\r\n            // return Math.round(a) / 10;\r\n\r\n\r\n            const a = xScale.invert(mouseValue) \r\n            return Math.round(a) ;\r\n        }\r\n    }\r\n}\r\n\r\nconst RangeSlider = ({ data, onChangeYear, left, right }) => {\r\n    const margins = { top: 20, right: 50, bottom: 20, left: 50 },\r\n        svgDimensions = { width: window.screen.width / 2, height: window.screen.height / 6 };\r\n\r\n    const minData = d3.min(data), maxData = d3.max(data)\r\n\r\n    const xScale = d3.scaleLinear()\r\n        .domain([minData, maxData])\r\n        .range([margins.left, svgDimensions.width - margins.right])\r\n        .clamp(true);\r\n\r\n    const i1 = left, i2 = right\r\n\r\n    const RangeBar = <line x1={margins.left} y1=\"0\" x2={svgDimensions.width - margins.right} y2=\"0\" className=\"rangeBar\" />\r\n    const RangeBarFilled = <line x1={xScale(i1)} y1=\"0\" x2={xScale(i2)} y2=\"0\" className=\"rangeBarFilled\" />\r\n\r\n    return <svg className=\"rangeSliderSvg\" width={svgDimensions.width} height={svgDimensions.height}>\r\n        <g className=\"rangeSliderGroup\" transform={`translate(0,${svgDimensions.height - margins.bottom - 40})`}>\r\n            {RangeBar}{RangeBarFilled}\r\n            <Axis margins={margins} svgDimensions={svgDimensions} xScale={xScale} />\r\n\r\n\r\n            <Handle onChangeYear={onChangeYear} handle=\"handle1\" initialValue={i1} other={i2} data={data} xScale={xScale} margins={margins} svgDimensions={svgDimensions} />\r\n            <Handle onChangeYear={onChangeYear} handle=\"handle2\" initialValue={i2} other={i1}  data={data} xScale={xScale} margins={margins} svgDimensions={svgDimensions} />\r\n        </g>\r\n    </svg>;\r\n}\r\n/********************* RangeSlider end ***************************/\r\nexport default RangeSlider;\r\n\r\n\r\n// class Charts extends React.Component{\r\n//   constructor(){\r\n//     super();\r\n//     this.state = {\r\n//         rangeSliderData : '',\r\n//         bubbleChartData : []\r\n//     }\r\n//   }\r\n//   componentWillMount(){\r\n//     this.setState({\r\n//         rangeSliderData: {\r\n//             initialValue1 : 2013,\r\n//             initialValue2 : 2015\r\n//         }\r\n//        \r\n//     });\r\n//   }\r\n\r\n//   handleChangeYear(year1,year2){\r\n//       this.setState({\r\n//           left: year1,\r\n//           right: year2\r\n//           \r\n//       })\r\n//   }\r\n\r\n//   render(){\r\n//     const width = window.screen.width/2, height = window.screen.height;\r\n\r\n//     return <div className=\"charts\" style={{width: width , margin: '0 auto'}}>\r\n//           <div className=\"rangeSlider\" >\r\n//           {/* <div className=\"rangeSlider\" style={{background: '#343042'}}> */}\r\n//               <h1>dsad</h1>\r\n//             <RangeSlider onChangeYear={this.handleChangeYear.bind(this)} data={this.state.rangeSliderData}/>\r\n//           </div>\r\n//           {/* <div className=\"bubbleChart\" style={{background: '#403c52'}}> */}\r\n//           <div className=\"bubbleChart\" >\r\n\r\n//             {/* <BubbleChart bubbleChartData={this.state.bubbleChartData}/> */}\r\n//             left: {this.state.left}\r\n//             <br></br>\r\n//             right: {this.state.right}\r\n\r\n\r\n//           </div>\r\n//       </div>;\r\n//   }\r\n// }\r\n// export default Charts;\r\n// const mountingPoint = document.createElement('div');\r\n// mountingPoint.className = 'react-app';\r\n// document.body.appendChild(mountingPoint);\r\n\r\n// ReactDOM.render(\r\n//   <Charts />,\r\n//   mountingPoint\r\n// )\r\n","\r\n// import React, { Component } from 'react'\r\n// // import './App.css'\r\n// import { scaleLinear } from \"d3-scale\"\r\n// import { max } from 'd3-array'\r\n// import { select } from 'd3-selection'\r\n// import * as d3 from \"d3\";\r\n\r\n\r\n\r\n// class Axis extends React.Component {\r\n//     componentDidMount(){\r\n//       this.renderAxis();\r\n//     }\r\n//     renderAxis(){\r\n//       const {svgDimensions,margins} = this.props\r\n//       const xValue = (svgDimensions.width - margins.left - margins.right)/10;\r\n//       d3.select(this.axisElement)\r\n//         .call(d3.axisBottom()\r\n//           .scale(this.props.xScale)\r\n//           .ticks(6)\r\n//           .tickFormat(d3.format(\"\"))\r\n//         )\r\n//         .selectAll(\"text\")\r\n//         .style(\"font-size\",\"10px\")\r\n//         .style(\"fill\",\"white\")\r\n//         .attr(\"x\",xValue)\r\n  \r\n//       d3.select(this.axisElement).selectAll(\"line\").attr(\"stroke\",\"white\")\r\n//       d3.select(this.axisElement).select(\"path\").style(\"d\",\"none\")\r\n//     }\r\n//     render() {\r\n//       return (\r\n//         <g className=\"rangeSliderAxis\" transform=\"translate(0,10)\" ref={el => this.axisElement = el } />\r\n//       )\r\n//     }\r\n//   }\r\n\r\nimport React, { Component } from 'react'\r\nimport * as d3Axis from 'd3-axis'\r\nimport { select as d3Select } from 'd3-selection'\r\n\r\n// import './Axis.css'\r\n\r\nclass Axis extends Component {\r\n  componentDidMount() {\r\n    this.renderAxis()\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.renderAxis()\r\n  }\r\n\r\n  renderAxis() {\r\n    const axisType = `axis${this.props.orient}`\r\n\r\n\r\n\r\n\r\n\r\n    const axis = d3Axis[axisType]()\r\n      .scale(this.props.scale)\r\n      .tickSize(-this.props.tickSize)\r\n      .tickPadding([10])\r\n      .ticks([5])\r\n\r\n    d3Select(this.axisElement).call(axis)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <g\r\n        className={`Axis Axis-${this.props.orient}`}\r\n        ref={(el) => { this.axisElement = el; }}\r\n        transform={this.props.translate}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default Axis;","\r\nimport React, { Component } from 'react'\r\n// import './App.css'\r\n// import { scaleLinear } from \"d3-scale\"\r\nimport { max } from 'd3-array'\r\nimport { select } from 'd3-selection'\r\nimport * as d3 from \"d3\";\r\nimport { range } from 'd3-array';\r\nimport { scaleBand, scaleLinear, scaleOrdinal } from 'd3-scale';\r\n\r\nimport Axis from \"../components/AxisRange\"\r\n// import Axis from \"../components/AxisScatter\"\r\n\r\n\r\nclass Axis1 extends React.Component {\r\n    componentDidMount() {\r\n        this.renderAxis();\r\n    }\r\n    renderAxis() {\r\n        const { svgDimensions, margins, textcolor,data } = this.props\r\n        const xValue = (svgDimensions.width - margins.left - margins.right) / 10;\r\n\r\n        const xScale = d3.scaleLinear()\r\n        .domain([0, 40])\r\n\r\n        // .domain([d3.min(data),d3.max(data)])\r\n\r\n        .range([margins.left, svgDimensions.width - margins.right])\r\n\r\n        d3.select(this.axisElement)\r\n            .call(d3.axisBottom()\r\n                .scale(xScale)\r\n                .ticks(10)\r\n                // .tickValues([17,30])\r\n                // .tickFormat(d3.format(\"\"))\r\n                //.styles(\"d\",\"yellow\")\r\n            )\r\n            .selectAll(\"text\")\r\n            .style(\"font-size\", \"10px\")\r\n            .style(\"fill\", \"black\")\r\n            .attr(\"x\", xValue)\r\n\r\n        d3.select(this.axisElement).selectAll(\"line\").attr(\"stroke\", \"black\")\r\n        // d3.select(this.axisElement).select(\"path\").style(\"d\", \"none\")\r\n        d3.select(this.axisElement).select(\"path\").style(\"stroke\",\"black\")\r\n\r\n\r\n        // var scale = d3.scaleLinear()\r\n        // .range([20, 480])\r\n        // .domain([0, 3]);\r\n\r\n        // var axis = d3.axisBottom(scale)\r\n        // .tickValues(d3.range(scale.domain()[0], scale.domain()[1] + 1, 1))\r\n        // .tickFormat(function(d) {\r\n        //     return ~~d;\r\n        // });\r\n        // \r\n\r\n\r\n    //     select(node)\r\n    //   .selectAll('text')\r\n\r\n    //      .data(this.props.data)\r\n    //      .enter()\r\n    //      .append(\"text\")\r\n    //      .text((d) => d)\r\n    //      .attr(\"x\", (d, i) => i * 38)\r\n    //      .attr(\"y\", (d, i) => this.props.size[1] - yScale(d) -3 )\r\n    }\r\n    render() {\r\n        return (\r\n              <g className=\"rangeSliderAxis\" textcolor=\"blue\" transform=\"translate(0,10)\" ref={el => this.axisElement = el } />\r\n\r\n            //   <g className=\"rangeSliderAxis\" textcolor=\"blue\" transform=\"translate(0,10)\" ref={el => axis = el } />\r\n\r\n            //   <div>dasda</div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Handle extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            handle: '',\r\n            h1: 2,\r\n            h2: 3,\r\n            tempH1: null,\r\n            tempH2: null,\r\n            trueYear1: null,\r\n            trueYear2:null\r\n        }\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n    onMouseOver() {\r\n        this.setState({\r\n            handle: this.props.handle\r\n\r\n        });\r\n    }\r\n    render() {\r\n        const { initialValue,other, xScale, handle } = this.props;\r\n        const circle = <circle r=\"10px\" fill=\"#fa7070\" />\r\n\r\n        if (handle === \"handle1\")\r\n        {\r\n            var h1 = initialValue;\r\n            var h2 = other;\r\n\r\n        }\r\n        \r\n        else if (handle === \"handle2\")\r\n        {\r\n            var h1 = other;\r\n            var h2 = initialValue;\r\n        }\r\n\r\n        return  <g className={handle} transform={`translate(${xScale(initialValue)},0)`}\r\n                    onMouseOver={this.onMouseOver.bind(this)}>{circle}\r\n                        </g>\r\n\r\n        // return <div>\r\n        //             <div> <button onClick={this.handleClick}>\r\n        //                     {this.state.isToggleOn ? 'ON' : 'OFF'}\r\n        //                 </button>  \r\n        //             </div>\r\n                    \r\n                    \r\n        //             {handle}:<br></br>H1: {h1}<br></br> H2: {h2}\r\n\r\n        //             <g className={handle} transform={`translate(${xScale(initialValue)},0)`}\r\n        //                     onMouseOver={this.onMouseOver.bind(this)}>{circle}\r\n        //             </g>\r\n\r\n        //         </div>\r\n    }\r\n\r\n    handleClick(prevProps) {\r\n        // let {margins,data,svgDimensions,onChangeYear,xScale,initialValue, other} = prevProps;\r\n        let {margins,data,svgDimensions,onChangeYear,xScale,initialValue, other} = this.props;\r\n\r\n        let handle = this.props.handle;\r\n\r\n\r\n        // this.setState(state => (\r\n        //     {\r\n        //         isToggleOn: !state.isToggleOn,\r\n        //         // h1: this.props.initialValue,\r\n        //         // h2: this.props.other\r\n\r\n        //         h1: initialValue,\r\n        //         h2: other +5\r\n\r\n\r\n        // }));\r\n        var a =0\r\n\r\n        if (handle === \"handle1\")\r\n        {\r\n            // a = other +5\r\n            var h1 = initialValue +2\r\n            var h2 = other \r\n\r\n            \r\n        }\r\n        \r\n        else if (handle === \"handle2\")\r\n        {\r\n            var h1 = other +2\r\n            var h2 = initialValue +2\r\n        }\r\n\r\n        // onChangeYear(this.state.h1,1);\r\n        onChangeYear(h1,h2 );\r\n\r\n      }\r\n\r\n\r\n\r\n      componentDidUpdate(prevProps, prevState) {\r\n        // let {margins,data,svgDimensions,onChangeYear,initialValue} = prevProps;\r\n        let {handle,margins,data,svgDimensions,onChangeYear,xScale,initialValue, other} = this.props;\r\n\r\n        // let { margins,data, svgDimensions, xScale, onChangeYear } = prevProps;\r\n\r\n\r\n        // const minData = d3.min(data), maxData = d3.max(data)\r\n\r\n        if (handle === \"handle1\")\r\n        {\r\n            // a = other +5\r\n            var h1 = xScale(initialValue);\r\n            var h2 = xScale(other);   \r\n            var tempH1 = xScale(initialValue);\r\n            var tempH2 = xScale(other);   \r\n            var trueH1 = initialValue \r\n            var trueH2 = other    \r\n        }\r\n        \r\n        else if (handle === \"handle2\")\r\n        {\r\n            var h1 = xScale(other);   \r\n            var h2 = xScale(initialValue);\r\n            var tempH1 = xScale(other);   \r\n            var tempH2 = xScale(initialValue);\r\n            var trueH1 = other    \r\n            var trueH2 = initialValue \r\n        }\r\n\r\n\r\n        let mouseValue, trueMouseValue, self = this;\r\n        // let handle = this.props.handle;\r\n        let minWidth = 10//((window.screen.width/2 - margins.left - margins.right)/5);\r\n        // let minWidth = ((window.screen.width/2 - margins.left - margins.right)/10);\r\n\r\n\r\n        const drag = d3.drag()\r\n            .on(\"drag\", draged).on(\"end\", dragend);\r\n\r\n        d3.select(\".rangeSliderGroup\").call(drag);\r\n\r\n        function draged() {\r\n            mouseValue = d3.mouse(this)[0];\r\n            trueMouseValue = getTrueMouseValue(mouseValue);\r\n\r\n            handle === \"handle1\" ? h1 = mouseValue : h2 = mouseValue;\r\n\r\n            if ((h2 - h1) > minWidth && mouseValue > margins.left && mouseValue < (svgDimensions.width - margins.right)) {\r\n                d3.select(\".\" + handle).attr(\"transform\", \"translate(\" + mouseValue + \",0)\");\r\n                if (handle === \"handle1\") {\r\n                    tempH1 = mouseValue;\r\n                    trueH1 = trueMouseValue;\r\n                } else {\r\n                    tempH2 = mouseValue\r\n                    trueH2 = trueMouseValue;\r\n                }\r\n            }\r\n            else {\r\n                h1 = tempH1;\r\n                h2 = tempH2;\r\n                handle === \"handle1\" ? trueMouseValue = trueH1 : trueMouseValue = trueH2;\r\n            }\r\n            d3.select(\".rangeBarFilled\").remove();\r\n            d3.select(\".rangeSliderGroup\")\r\n                .insert(\"line\", \".rangeSliderAxis\")\r\n                .attr(\"x1\", h1)\r\n                .attr(\"x2\", h2)\r\n                .attr(\"y1\", 0)\r\n                .attr(\"y2\", 0)\r\n                .attr(\"class\", \"rangeBarFilled\")\r\n\r\n        }\r\n        function dragend() {\r\n            h1 = xScale(getTrueMouseValue(tempH1));\r\n            h2 = xScale(getTrueMouseValue(tempH2));\r\n            if (self.state.handle === \"\") {\r\n                \r\n            }\r\n            else {\r\n                d3.select(\".\" + self.state.handle).attr(\"transform\", \"translate(\" + xScale(trueMouseValue) + \",0)\");\r\n                d3.select(\".rangeBarFilled\").remove();\r\n                d3.select(\".rangeSliderGroup\")\r\n                    .insert(\"line\", \".rangeSliderAxis\")\r\n                    .attr(\"x1\", xScale(trueH1))\r\n                    .attr(\"x2\", xScale(trueH2))\r\n                    .attr(\"y1\", 0)\r\n                    .attr(\"y2\", 0)\r\n                    .attr(\"class\", \"rangeBarFilled\");\r\n\r\n                onChangeYear(trueH1, trueH2);\r\n            }\r\n\r\n\r\n        }\r\n        function getTrueMouseValue(mouseValue) {\r\n            // const a = xScale.invert(mouseValue) * 10\r\n            // return Math.round(a) / 10;\r\n\r\n\r\n            const a = xScale.invert(mouseValue) \r\n            return Math.round(a) ;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst RangeSlider = ({ data, onChangeYear, left, right }) => {\r\n    const margins = { top: 20, right: 50, bottom: 20, left: 50 },\r\n        svgDimensions = { width: 400, height: 150 };\r\n\r\n    const minData = d3.min(data), maxData = d3.max(data)\r\n\r\n    const xScale = d3.scaleLinear()\r\n        .domain([minData, maxData])\r\n        .range([margins.left, svgDimensions.width - margins.right])\r\n        .clamp(true);\r\n\r\n    const i1 = left, i2 = right\r\n\r\n    const RangeBar = <line x1={margins.left} y1=\"0\" x2={svgDimensions.width - margins.right} y2=\"0\" className=\"rangeBar\" />\r\n    const RangeBarFilled = <line x1={xScale(i1)} y1=\"0\" x2={xScale(i2)} y2=\"0\" className=\"rangeBarFilled\" />\r\n\r\n    // return (\r\n    //     <div>   \r\n\r\n    //         {/* <Handle onChangeYear={onChangeYear} handle=\"handle1\" initialValue={i1} other={i2}  /> */}\r\n    //         <Handle onChangeYear={onChangeYear} handle=\"handle1\" initialValue={i1} other={i2} data={data} xScale={xScale} margins={margins} svgDimensions={svgDimensions} />\r\n    //         <br></br>\r\n    //         {/* <Handle onChangeYear={onChangeYear} handle=\"handle2\" initialValue={i2} other={i1}  /> */}\r\n    //     </div>\r\n    // )\r\n\r\n    const xScale12 = d3.scaleLinear()\r\n    .domain([minData, maxData])\r\n    .range([margins.left, svgDimensions.width - margins.right])\r\n    // .clamp(true);\r\n    // data = data.splice(0, 1, 1);\r\n    \r\n    var sorted = data.map(d => d).sort(function(a, b){return a-b})\r\n    const xScale1 = scaleBand()\r\n                    .domain(sorted)\r\n                    // .domain([0,40])\r\n\r\n                    // .range([margins.left, svgDimensions.width])\r\n                    .range([margins.left, svgDimensions.width - margins.right])\r\n\r\n\r\n    // const yScale1 = this.yscale\r\n    //     .domain([0, max(data, d => d.position)])\r\n    //     .range([svgDimensions.height, margins.top])\r\n    const bandSize = xScale1.bandwidth()\r\n\r\n    const xProps = {\r\n        orient: 'Bottom',\r\n        scale: xScale1,\r\n        // translate: `translate(-${bandSize/2}, ${svgDimensions.height-100})`,\r\n        translate: `translate(-${bandSize/2-110}, ${8})`,\r\n\r\n        tickSize: svgDimensions.height-margins.top,\r\n        tickValues: xScale.domain().filter(function(d,i){ return !(i%4)})\r\n        \r\n      }\r\n    return  <svg className=\"rangeSliderSvg\" width={svgDimensions.width} height={svgDimensions.height}>\r\n    {/* <svg width={500} height={500}> */}\r\n\r\n    <g className=\"rangeSliderGroup\" transform={`translate(0,${svgDimensions.height - margins.bottom - 110})`}>\r\n                    <Axis {...xProps} />\r\n                    {RangeBar}{RangeBarFilled}\r\n\r\n                    <Handle onChangeYear={onChangeYear} handle=\"handle1\" initialValue={i1} other={i2} data={data} xScale={xScale} margins={margins} svgDimensions={svgDimensions} />\r\n                    <Handle onChangeYear={onChangeYear} handle=\"handle2\" initialValue={i2} other={i1}  data={data} xScale={xScale} margins={margins} svgDimensions={svgDimensions} />\r\n                    </g>\r\n                </svg>\r\n                \r\n\r\n\r\n\r\n\r\n\r\n//     <svg className=\"rangeSliderSvg\" width={svgDimensions.width} height={svgDimensions.height}>\r\n//     <g className=\"rangeSliderGroup\" transform={`translate(0,${svgDimensions.height - margins.bottom - 40})`}>\r\n//        {/* {RangeBar}{RangeBarFilled} */}\r\n//        {/* <Axis margins={margins} svgDimensions={svgDimensions} xScale={xScale} data={data}/> */}\r\n\r\n//         <Axis {...yProps}/>\r\n//         {/* <Handle onChangeYear={onChangeYear} handle=\"handle1\" initialValue={i1} other={i2} data={data} xScale={xScale} margins={margins} svgDimensions={svgDimensions} /> */}\r\n//         {/* <Handle onChangeYear={onChangeYear} handle=\"handle2\" initialValue={i2} other={i1}  data={data} xScale={xScale} margins={margins} svgDimensions={svgDimensions} /> */}\r\n//     </g>\r\n// </svg>;\r\n            \r\n    // return \r\n    //         <svg className=\"rangeSliderSvg\" width={svgDimensions.width} height={svgDimensions.height}>\r\n    //             <g className=\"rangeSliderGroup\" transform={`translate(0,${svgDimensions.height - margins.bottom - 40})`}>\r\n    //                 {/* {RangeBar}{RangeBarFilled} */}\r\n    //                 {/* <Axis margins={margins} svgDimensions={svgDimensions} xScale={xScale} /> */}\r\n    //                 {/* <Handle handle=\"handle1\" initialValue={i1} other={i2}  />\r\n    //                 <Handle handle=\"handle2\" initialValue={i2} other={i1}  /> */}\r\n\r\n    //                 <Handle onChangeYear={onChangeYear} handle=\"handle1\" initialValue={i1} other={i2} data={data} xScale={xScale} margins={margins} svgDimensions={svgDimensions} />\r\n    //                 <Handle onChangeYear={onChangeYear} handle=\"handle2\" initialValue={i2} other={i1}  data={data} xScale={xScale} margins={margins} svgDimensions={svgDimensions} />\r\n    //             </g>\r\n    //         </svg>;\r\n}\r\n/********************* RangeSlider end ***************************/\r\nexport default RangeSlider;","import React, { Component } from 'react'\r\n// import './App.css'\r\nimport { scaleLinear } from \"d3-scale\"\r\nimport { max } from 'd3-array'\r\nimport { select } from 'd3-selection'\r\nimport * as d3 from \"d3\";\r\n\r\n// import RangeSlider from \"./Test\"\r\nimport RangeSlider from \"./sibs\"\r\n\r\n\r\nclass Charts extends React.Component{\r\n    constructor(){\r\n      super();\r\n      this.state = {\r\n          rangeSliderData : '',\r\n          bubbleChartData : [],\r\n          data: [2000, 2100],\r\n          left: 2010,\r\n          right: 2045\r\n\r\n      }\r\n    }\r\n    componentWillMount(){\r\n      this.setState({\r\n          rangeSliderData: {\r\n              initialValue1 : 2013,\r\n              initialValue2 : 2015,\r\n            //   data: [2000, 2200]\r\n          }\r\n          \r\n      });\r\n    }\r\n  \r\n    handleChangeYear(year1,year2){\r\n        this.setState({\r\n            left: year1,\r\n            right: year2,\r\n            \r\n        })\r\n    }\r\n  \r\n    render(){\r\n      const width = window.screen.width/2, height = window.screen.height;\r\n  \r\n      return <div className=\"charts\" style={{width: width , margin: '0 auto'}}>\r\n            <div className=\"rangeSlider\" >\r\n            {/* <div className=\"rangeSlider\" style={{background: '#343042'}}> */}\r\n                <h1>dsasd</h1>\r\n              <RangeSlider onChangeYear={this.handleChangeYear.bind(this)} data={this.state.data} left={this.state.left} right={this.state.right}/>\r\n            </div>\r\n            {/* <div className=\"bubbleChart\" style={{background: '#403c52'}}> */}\r\n            <div className=\"bubbleChart\" >\r\n            <br></br>\r\n            <br></br>\r\n  \r\n              {/* <BubbleChart bubbleChartData={this.state.bubbleChartData}/> */}\r\n              left: {this.state.left}\r\n              <br></br>\r\n              right: {this.state.right }\r\n  \r\n  \r\n            </div>\r\n        </div>;\r\n    }\r\n  }\r\n  export default Charts;","\r\nimport React, { Component } from 'react';\r\nimport BarChart from '../graphs/BarChart'\r\nimport { CONFIG } from '../config.js';\r\nimport * as d3 from \"d3\";\r\nimport axios from 'axios'\r\nimport Dropdown from '../components/Dropdown';\r\nimport MultiDropdown from '../components/MultiDropdown';\r\nimport Scatterplot from \"../graphs/Scatterplot\"\r\n// import BarChart from \"../graphs/BarChart\"\r\n\r\nimport Datapoint from \"../components/Datapoint\"\r\nimport RangeSlider from \"../components/RangeSlider\"\r\n\r\n\r\nclass Main1 extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tplayers: [],\r\n\t\t\t// uniqList: [],\r\n\t\t\twholePts:[],\r\n\t\t\twholeAst:[],\r\n\t\t\ttest: [],\r\n\t\t\tresponse: [],\r\n\t\t\tbardata: [12, 25, 6, 6, 9, 10],\r\n\t\t\twidth: 600,\r\n\t\t\theight: 170,\r\n\t\t\tid: \"root\",\r\n\t\t\terror: null,\r\n\t\t\tisLoaded: false,\r\n\t\t\tfnames: [],\r\n\t\t\t// data: d3.range(100).map(_ => [Math.random(), Math.random()]),\r\n\t\t\tdata: [[0.1, 0.2], [0.3, 0.2], [4, 2], [4, 1]],\r\n\r\n\t\t\tleft: 0,\r\n\t\t\tright: 30,\r\n\t\t\tlocation: [\r\n\t\t\t\t{\r\n\t\t\t\t\tid: 0,\r\n\t\t\t\t\ttitle: 'New York',\r\n\t\t\t\t\tselected: false,\r\n\t\t\t\t\tkey: 'location'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tid: 1,\r\n\t\t\t\t\ttitle: 'Dublin',\r\n\t\t\t\t\tselected: false,\r\n\t\t\t\t\tkey: 'location'\r\n\t\t\t\t}\r\n\r\n\t\t\t],\r\n\r\n\t\t\tfruit: [\r\n\t\t\t\t{\r\n\t\t\t\t\tid: 0,\r\n\t\t\t\t\ttitle: 'Apple',\r\n\t\t\t\t\tselected: false,\r\n\t\t\t\t\tkey: 'fruit'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tid: 1,\r\n\t\t\t\t\ttitle: 'Orange',\r\n\t\t\t\t\tselected: false,\r\n\t\t\t\t\tkey: 'fruit'\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t};\r\n\t}\r\n\r\n\r\n\r\n\tcomponentDidMount() {\r\n\r\n\t\tconst racesRequest = axios.get(CONFIG.SHOTS)\r\n\t\t\t.then(response =>\r\n\t\t\t\tresponse.data\r\n\t\t\t).then(players => this.setDefault(players))\r\n\r\n\t\t// const racesRequest1 = axios.get(CONFIG.API_BASE_URL)\r\n\t\t//         .then(response =>\r\n\t\t//             response.data.map((p,index) => ({\r\n\t\t//                 firstname: p.PLAYER_NAME,\r\n\t\t//                 lastname: p.lastname,\r\n\t\t//                 PTS: p.PTS,\r\n\t\t//                 AST: p.PTS + Math.random() -10,\r\n\r\n\t\t//                 key: 'players',\r\n\t\t//                 selected: true,\r\n\t\t//                 id: index\r\n\t\t//             }))\r\n\t\t//              ).then(players => this.setDefault(players))\r\n\r\n\t\t//\r\n\r\n\r\n\t}\r\n\r\n\tsetDefault = (players) => {\r\n\r\n\t\tplayers.map(i => i.firstname = \"Nepal\");\r\n\t\tplayers.map(i => i.key = \"players\");\r\n\r\n\t\tplayers.map(i => i.selected = true);\r\n\t\tplayers.map((p, i) => p.id = p.PLAYER_ID);\r\n\t\tplayers.map((p, i) => p.shotid = i);\r\n\t\t// players.map((p, i) => p.SHOT_DIST  = p.SHOT_DIST *1.5);\r\n\r\n\r\n\t\tconst wholePts1 = players.map(post => (post.SHOT_DIST))\r\n\t\tconst wholeAst1 = players.map(post => (post.HOME_PTS))\r\n\r\n\r\n\r\n\r\n\t\tconst uniqNames = [...new Set(players.map(d => d.PLAYER_NAME))]\r\n\t\t// const uniqRaces = [...new Set(players.map(d => d.lastname))]\r\n\t\t// players = uniqRaces.map((y, index) => ({ id: index, raceName: y, selected: false, key: 'races' }))\r\n\t\t// const fnames = uniqFNames.map((y, index) => ({ id: index, firstname: y, selected: false, key: 'fnames' }))\r\n\t\t// seasons[0].selected = true;\r\n\t\t// players[0].SHOT_DIST = 100;\r\n\t\t// players[0].selected = true;\r\n\r\n\t\t// this.setState({ players: players, fnames:fnames })\r\n\t\tthis.setState({ players: players, wholePts:wholePts1, wholeAst:wholeAst1 })\r\n\r\n\t}\r\n\r\n\tresetThenSet = (value, key) => {\r\n\t\tlet data = [...this.state[key]];\r\n\t\tdata.forEach(item => item.selected = false);\r\n\t\tdata[value].selected = true;\r\n\r\n\r\n\t\tthis.setState({ key: data });\r\n\r\n\t}\r\n\r\n\tfilterAndSort_Laps = (selectedRace, selectedSeason, laptimes, filtQ) => {\r\n\r\n\t\tvar filtered = laptimes.filter(d => (d.raceName === selectedRace.raceName && d.season === selectedSeason.season))\r\n\t\treturn filtered\r\n\r\n\t}\r\n\r\n\r\n\ttoggleSelected = (id, key) => {\r\n\r\n\r\n\t\tlet temp = JSON.parse(JSON.stringify(this.state[key]))\r\n\r\n\t\ttemp.forEach(function myFunction(item, index, arr) {\r\n\t\t\t// arr[index] = item * 10;\r\n\t\t\tif (arr[index].id === id) {\r\n\t\t\t\ttemp[index].selected = !temp[index].selected\r\n\t\t\t}\r\n\r\n\t\t})\r\n\r\n\r\n\t\t// uniqList[listid].selected = !uniqList[listid].selected\r\n\t\tthis.setState({\r\n\t\t\t[key]: temp\r\n\t\t})\r\n\t}\r\n\r\n\thandleChangeYear(year1, year2) {\r\n\t\tthis.setState({\r\n\t\t\tleft: year1,\r\n\t\t\tright: year2,\r\n\r\n\t\t})\r\n\t}\r\n\r\n\r\n\trender() {\r\n\r\n\t\t// const names = this.state.players.map(post => post.firstname)\r\n\t\tconst { fnames, players} = this.state\r\n\r\n\t\tvar uniqIds = [...new Set(players.map(d => d.PLAYER_ID))]\r\n\t\tvar uniqList = players.map((p, index) => ({\r\n\t\t\toption: p[\"PLAYER_NAME\"],\r\n\t\t\tid: p[\"PLAYER_ID\"],\r\n\t\t\tselected: false,\r\n\t\t\tkey: \"players\"\r\n\t\t}))\r\n\r\n\t\tuniqList = uniqList.filter((item, index) => uniqIds.includes(item.id))\r\n\t\t// uniqList = uniqList.filter((item,index)=> uniqList.id.indexOf(item.id)===index)                                           \r\n\t\tuniqList = uniqList.filter((uniqList, index, self) =>\r\n\t\t\t\tindex === self.findIndex((t) => (t.id === uniqList.id)))\r\n\r\n\t\tuniqList.map((p, i) => p.listid = i);\r\n\r\n\r\n\r\n\r\n\t\tvar ab = players.filter((p) => (p.selected == true))\r\n\r\n\r\n\t\t// ab = ab.filter((p) => (p.PTS >= this.state.left) && (p.PTS <= this.state.right))\r\n\r\n\t\t// const pts = ab.map(post => (post.SHOT_DIST))\r\n\r\n\t\t// var wholePts = players.map(post => (post.SHOT_DIST))\r\n\t\t// var wholeAst = players.map(post => (post.HOME_PTS))\r\n\r\n\t\tvar wholePts = ab.map(post => (post.SHOT_DIST))\r\n\t\tvar wholeAst = ab.map(post => (post.SHOT_PTS))\r\n\r\n\r\n\t\t// wholePts.unshift(10)\r\n\t\t// wholePts.unshift(50)\r\n\t\t// wholeAst.unshift(5)\r\n\t\t// wholeAst.unshift(7)\r\n\r\n\r\n\t\t// wholePts = wholePts.map(Number);\r\n\t\t// wholeAst= wholeAst.map(Number);\r\n\r\n\t\t// var value = +record[year];\r\n\t\t// wholeAst = [111,72,46,10]\r\n\t\t// wholePts = [1,242,61,10]\r\n\r\n\r\n\t\t// var abc = [50].concat(wholePts)\r\n\t\t// var def = [4].concat(wholeAst)\r\n\r\n\t\tvar abc = []\r\n\t\tvar def = []\r\n\r\n\r\n\t\twholePts.forEach(function myFunction(item, index, arr) {\r\n\t\t\t\t// arr[index] = item * 10;\r\n\t\t\t\t\tabc.push(+item);\r\n\r\n\t\t\t\t})\r\n\t\twholeAst.forEach(function myFunction(item, index, arr) {\r\n\t\t\t// arr[index] = item * 10;\r\n\t\t\t\tdef.push(+item);\r\n\r\n\t\t\t})\r\n\r\n\t\t// const abc = [...wholeAst];\r\n\t\t// const def = [...wholePts];\r\n\r\n\r\n\r\n\t\t// const abc = wholePts.sort(function (a, b) { return a - b })\r\n\t\t// const def = wholeAst.sort(function (a, b) { return a - b })\r\n\r\n\t\t// abc = [210].concat(abc)\r\n\t\t// def = [16].concat(def)\r\n\t\t// const abc = wholePts\r\n\t\t// const def = wholeAst\r\n\r\n\r\n\t\t// var ab = players.filter((person) => pnames.includes(person.id))\r\n\r\n\t\tvar xmax = parseFloat(d3.max(abc))\r\n\t\tvar ymax = parseFloat(d3.max(def))\r\n\r\n\t\t// var xmin = d3.min(abc)\r\n\t\t// var ymin = d3.min(def)\r\n\r\n\t\t// abc.unshift(xmax)\r\n\t\t// wholePts.unshift(50)\r\n\t\t// def.unshift(ymax)\r\n\r\n\t\t// abc.unshift(100)\r\n\t\t// wholePts.unshift(50)\r\n\t\t// def.unshift(100)\r\n\r\n\t\t// abc = [20].concat(abc)\r\n\t\t// def = [10].concat(def)\r\n\t\t// var gg = [23,123,1]\r\n\r\n        // return <div className=\"hmmw\" style={{ background: '#57667B' }}></div>\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"hmmw\" style={{ background: '#666699' }}>\r\n\t\t\t\t<h1>Hello bugs</h1>\r\n\t\t\t\t<div className=\"asd\" style={{ display: 'flex', justifyContent: \"flex-start\", \"margin-left\": \"100px\" }}>\r\n\r\n\t\t\t\t\t<MultiDropdown\r\n\t\t\t\t\t\ttitleHelper=\"Player\"\r\n\t\t\t\t\t\ttitle=\"Select Players\"\r\n\t\t\t\t\t\tcol=\"PLAYER_NAME\"\r\n\t\t\t\t\t\tuid=\"PLAYER_ID\"\r\n\r\n\t\t\t\t\t\tlist={this.state.players}\r\n\t\t\t\t\t\tuniqList={uniqList}\r\n\t\t\t\t\t\ttoggleItem={this.toggleSelected}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{/* {wholePts} */}\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t<div><br></br></div>\r\n\t\t\t\t\r\n\t\t\t\t<div style={{ display: 'flex', justifyContent: \"flex-start\", \"margin-left\": \"200px\" }}>\r\n\r\n\t\t\t\t\t{/* <RangeSlider onChangeYear={this.handleChangeYear.bind(this)}\r\n                      data={wholePts} \r\n\r\n                      left={this.state.left}\r\n                        right={this.state.right}\r\n                        width={500}\r\n                        height={150}\r\n\t\t\t\t\t\t/> */}\r\n\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t{/* <BarChart  data={wholeAst} size={[600, 350] }/> */}\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div style={{ display: 'flex', justifyContent: 'center' }}>\r\n\t\t\t\t\t<svg width=\"800\" height=\"400\" >\r\n\t\t\t\t\t\t{/* onClick={this.onClick} */}\r\n\t\t\t\t\t\t<Scatterplot\r\n\t\t\t\t\t\t\tx={50}\r\n\t\t\t\t\t\t\ty={50}\r\n\t\t\t\t\t\t\txdata={abc}\r\n\t\t\t\t\t\t\tydata={def}\r\n\t\t\t\t\t\t\txmax={xmax}\r\n\t\t\t\t\t\t\tymax={ymax}\r\n\r\n\t\t\t\t\t\t\twidth={this.state.width}\r\n\t\t\t\t\t\t\theight={this.state.height}\r\n\t\t\t\t\t\t\t// data={this.state.data}\r\n\t\t\t\t\t\t\tdatapoint={({ x, y }) => <Datapoint x={x} y={y} />}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</svg>\r\n\r\n\r\n\t\t\t\t\t{/* <BarChart  data={pts} size={[250, 250] }/> */}\r\n\r\n\t\t\t\t\t{/* {data={pts}}  data={[31,32,25]}*/}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t\t{/* {xmax}::::: {ymax}\r\n\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t{xmin}::::: {ymin}\r\n\r\n\t\t\t\t\t\t{typeof abc[4]}::dsa: {typeof def[4]} sda {typeof gg[1]} */}\r\n\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// this.state.players.map(post => (\r\n\t\t\t\t\t\tthis.state.players.map(post => (\r\n\r\n\t\t\t\t\t\t\t<li align=\"start\">\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<p>{post.SHOT_DIST} : {post.SHOT_PTS} </p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default Main1;\r\n\r\n","// import React from \"react\";\r\nimport * as d3 from \"d3\";\r\n\r\nimport Axis from \"../components/AxisScatter\";\r\n\r\nimport React, { Component } from 'react';\r\nimport BarChart from '../graphs/BarChart'\r\nimport { CONFIG } from '../config.js';\r\n// import Scatter from './views/ScatterView'\r\n// import * as d3 from \"d3\";\r\nimport axios from 'axios'\r\nimport Dropdown from '../components/Dropdown';\r\nimport MultiDropdown from '../components/MultiDropdown';\r\n// import RangeSlider from \"./sibs\"\r\nimport RangeSlider from \"../components/RangeSlider\"\r\n\r\n// import Scatterplot from \"../graphs/Scatterplot\"\r\nimport Datapoint from \"../components/Datapoint\"\r\n\r\n\r\n\r\nclass Scatterplot extends React.PureComponent {\r\n  state = {\r\n    xScale: d3\r\n      .scaleLinear()\r\n      .domain([0, d3.max(this.props.data.map(function(x) { return x[0];}))])\r\n      .range([this.props.width, 0]),\r\n\r\n    yScale: d3\r\n      .scaleLinear()\r\n      .domain([0, d3.max(this.props.data.map(function(x) { return x[1];}))])\r\n      .range([this.props.height, 0])\r\n    //   .range([ 0,this.props.height])\r\n\r\n  };\r\n  \r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    const { yScale, xScale } = state;\r\n\r\n    xScale.range([0, props.width]);\r\n    yScale.range([props.height, 0]);\r\n\r\n    return {\r\n      ...state,\r\n      yScale,\r\n      xScale\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { x, y, data, height, datapoint } = this.props,\r\n      { yScale, xScale } = this.state;\r\n\r\n    return (\r\n      <g transform={`translate(${x}, ${y})`}>\r\n        {data.map(([x, y]) => datapoint({ x: xScale(x), y: yScale(y) }))}\r\n        <Axis x={0} y={0} scale={yScale} type=\"Left\" />\r\n        <Axis x={0} y={height} scale={xScale} type=\"Bottom\" />\r\n\r\n\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\n// export default Scatterplot;\r\n\r\n\r\nclass Main1 extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            players: [],\r\n            test: [],\r\n            response: [],\r\n            bardata: [12,25,6,6,9,10],\r\n            width: 600,\r\n            height: 320,\r\n            id: \"root\",\r\n            error : null,\r\n            isLoaded : false,\r\n            fnames : []   ,\r\n            // data: d3.range(100).map(_ => [Math.random(), Math.random()]),\r\n            data: [[0.1,0.2],[0.3,0.2],[4,2],[3,1]],\r\n\r\n            left: 0,\r\n            right: 30,\r\n            location: [\r\n                {\r\n                  id: 0,\r\n                  title: 'New York',\r\n                  selected: false,\r\n                  key: 'location'\r\n                },\r\n                {\r\n                  id: 1,\r\n                  title: 'Dublin',\r\n                  selected: false,\r\n                  key: 'location'\r\n                }\r\n                \r\n              ],\r\n\r\n              fruit: [\r\n                {\r\n                  id: 0,\r\n                  title: 'Apple',\r\n                  selected: false,\r\n                  key: 'fruit'\r\n                },\r\n                {\r\n                  id: 1,\r\n                  title: 'Orange',\r\n                  selected: false,\r\n                  key: 'fruit'\r\n                }\r\n              ]\r\n        };\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n\r\n    const racesRequest = axios.get(CONFIG.API_BASE_URL)\r\n       .then(response =>\r\n           response.data.map((player,index) => ({\r\n               firstname: player.firstname,\r\n               lastname: player.lastname,\r\n               PTS: player.PTS,\r\n               key: 'players',\r\n               selected: true,\r\n               id: index\r\n           }))\r\n            ).then(players => this.setDefault(players))\r\n       \r\n        //\r\n\r\n\r\n     }\r\n\r\n     setDefault = (players) => {\r\n            const uniqFNames = [...new Set(players.map(d => d.firstname))]\r\n            const uniqRaces = [...new Set(players.map(d => d.lastname))]\r\n            // players = uniqRaces.map((y, index) => ({ id: index, raceName: y, selected: false, key: 'races' }))\r\n            // const fnames = uniqFNames.map((y, index) => ({ id: index, firstname: y, selected: false, key: 'fnames' }))\r\n            // seasons[0].selected = true;\r\n            players[0].selected = true;\r\n            // fnames[0].selected = true;\r\n\r\n            // this.setState({ players: players, fnames:fnames })\r\n            this.setState({ players: players})\r\n\r\n        }\r\n\r\n     resetThenSet = (value, key) => \r\n     {\r\n\t\tlet data = [...this.state[key]];\r\n\t\tdata.forEach(item => item.selected = false);\r\n        data[value].selected = true;\r\n        \r\n\r\n        this.setState({ key: data });\r\n        \r\n    }\r\n    \r\n    filterAndSort_Laps = (selectedRace, selectedSeason, laptimes, filtQ) => {\r\n\r\n\t\tvar filtered = laptimes.filter(d => (d.raceName === selectedRace.raceName && d.season === selectedSeason.season))\r\n        return filtered\r\n\r\n    }\r\n    \r\n\r\n    toggleSelected = (id, key) => {\r\n        let temp = JSON.parse(JSON.stringify(this.state[key]))\r\n        temp[id].selected = !temp[id].selected\r\n        this.setState({\r\n          [key]: temp\r\n        })\r\n      }\r\n\r\n      handleChangeYear(year1,year2){\r\n        this.setState({\r\n            left: year1,\r\n            right: year2,\r\n            \r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const names = this.state.players.map(post => post.firstname)\r\n        const {fnames, players} = this.state\r\n\r\n\r\n        var ab = players.filter((p) => (p.selected == true))\r\n\r\n        \r\n        ab = ab.filter((p) => (p.PTS >= this.state.left) && (p.PTS <= this.state.right))\r\n        \r\n        const pts = ab.map(post => (post.PTS))\r\n        var wholePts = players.map(post => (post.PTS))\r\n\r\n        wholePts.unshift(0)\r\n        wholePts.unshift(50)\r\n\r\n\r\n        wholePts = wholePts.sort(function(a, b){return a-b})\r\n        \r\n\r\n       \r\n        return (\r\n            // <div className=\"hmmw\" style={{background: '#666699'}}>\r\n            <div className=\"hmmw\" >\r\n\r\n              <h1>Hello world</h1>\r\n              <div style={{background: '#666699'}}>\r\n\r\n              {/* <svg width={300} height={50} > */}\r\n              {/* {this.state.data} */}\r\n                    \r\n                    <RangeSlider onChangeYear={this.handleChangeYear.bind(this)}\r\n                     data={wholePts} \r\n                     left={this.state.left}\r\n                      right={this.state.right}\r\n                      width={700}\r\n                      height={150}\r\n                      />\r\n                      \r\n                {/* </svg> */}\r\n                {this.state.left}\r\n                </div>\r\n                left {this.state.left}\r\n                <br></br>\r\n                right {this.state.right }\r\n                <div>\r\n                <svg width={800} height={500} >\r\n                {/* onClick={this.onClick} */}\r\n                <Scatterplot\r\n                    x={150}\r\n                    y={50}\r\n                    width={200}\r\n                    height={200}\r\n                    data={this.state.data}\r\n                    datapoint={({ x, y }) => <Datapoint x={x} y={y} />}\r\n                />\r\n                </svg>\r\n\r\n              </div>\r\n              \r\n               \r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Main1;","import React from 'react'\r\n// import nba from 'nba'\r\nimport * as d3 from 'd3'\r\nimport { hexbin } from 'd3-hexbin'\r\n// import d3_hexbin from 'd3-hexbin';\r\nimport { court, shots } from 'd3-shotchart'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport sc from '../css/ShotChart.css'\r\n\r\nwindow.d3_hexbin = {hexbin: hexbin} // workaround library problem\r\n\r\nexport class ShotChart extends React.Component {\r\n  static propTypes = {\r\n    playerId: PropTypes.number,\r\n    minCount: PropTypes.number,\r\n    chartType: PropTypes.string,\r\n    displayToolTips: PropTypes.bool,\r\n  }\r\n\r\n  componentDidUpdate() {\r\n\tconsole.log(\"ShotChart ToolTips: \", this.props.displayToolTips)\r\n\t\r\n\t\tvar final_shots =[ \r\n\t\t\t{\r\n\t\t\t\"x\": (226+ 250) / 10,\r\n\t\t\t\"y\": (90 + 50) / 10,\r\n\t\t\t\"action_type\": \"Jump Shot\",\r\n\t\t\t\"shot_distance\": 24,\r\n\t\t\t\"shot_made_flag\":1\r\n\t\t\t},\r\n\t\t\t{\r\n\t\r\n\t\t\t\t\"x\": (-166+ 250) / 10,\r\n\t\t\t\t\"y\": (231 + 50) / 10,\r\n\t\t\t\t\"action_type\": \"Jump Shot\",\r\n\t\t\t\t\"shot_distance\": 28,\r\n\t\t\t\t\"shot_made_flag\":1\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"x\": (-2+ 250) / 10,\r\n\t\t\t\t\t\"y\":  (63 + 50) / 10,\r\n\t\t\t\t\t\"action_type\": \"Jump Shot\",\r\n\t\t\t\t\t\"shot_distance\": 6,\r\n\t\t\t\t\t\"shot_made_flag\":1\r\n\t\t\t\t\t}\r\n\t\t]\r\n\t\r\n\tfinal_shots = this.props.data\r\n\t\r\n\t\t// this.props.data\r\n\r\n\tconst courtSelection = d3.select(\"#shot-chart\")\r\n\t// without this line, all updates on court would be ineffect only after changing chartType\r\n\tcourtSelection.html('')\r\n\tconst chart_court = court().width(500)\r\n\tconst chart_shots = shots()\r\n\t\t\t\t\t\t.shotRenderThreshold(this.props.minCount)\r\n\t\t\t\t\t\t.displayToolTips(this.props.displayToolTips)\r\n\t\t\t\t\t\t.displayType(this.props.chartType)\r\n\t// selection.call always return the selection and not the return value of function passed in\r\n\tcourtSelection.call(chart_court)\r\n\tcourtSelection.datum(final_shots).call(chart_shots)\r\n    \r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"shot-chart\" className=\"sc\"></div>\r\n    );\r\n  }\r\n}\r\nexport default ShotChart","\r\nimport React, { Component } from 'react';\r\nimport BarChart from '../graphs/BarChart'\r\nimport { CONFIG } from '../config.js';\r\nimport * as d3 from \"d3\";\r\nimport axios from 'axios'\r\nimport Dropdown from '../components/Dropdown';\r\nimport MultiDropdown from '../components/MultiDropdown';\r\nimport Scatterplot from \"../graphs/Scatterplot\"\r\n// import BarChart from \"../graphs/BarChart\"\r\n\r\nimport Datapoint from \"../components/Datapoint\"\r\nimport RangeSlider from \"../components/RangeSlider\"\r\nimport Shotchart from \"../graphs/Shotchart\"\r\n\r\n\r\nclass Main1 extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tplayers: [],\r\n\t\t\t// uniqList: [],\r\n\t\t\twholePts:[],\r\n\t\t\twholeAst:[],\r\n\t\t\ttest: [],\r\n\t\t\tresponse: [],\r\n\t\t\tbardata: [12, 25, 6, 6, 9, 10],\r\n\r\n\t\t\tid: \"root\",\r\n\t\t\terror: null,\r\n\t\t\tisLoaded: false,\r\n\t\t\tfnames: [],\r\n\t\t\t// data: d3.range(100).map(_ => [Math.random(), Math.random()]),\r\n            data: [[0.1, 0.2], [0.3, 0.2], [4, 2], [4, 1]],\r\n            minCount: 1,\r\n            // chartType: 'scatter' ,//'hexbin', // 'scatter'\r\n            chartType: 'hexbin', // 'scatter'\r\n\r\n            displayToolTips: true,\r\n\r\n\t\t\tleft: 0,\r\n\t\t\tright: 20,\r\n\t\t\tlocation: [\r\n\t\t\t\t{\r\n\t\t\t\t\tid: 0,\r\n\t\t\t\t\ttitle: 'New York',\r\n\t\t\t\t\tselected: false,\r\n\t\t\t\t\tkey: 'location'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tid: 1,\r\n\t\t\t\t\ttitle: 'Dublin',\r\n\t\t\t\t\tselected: false,\r\n\t\t\t\t\tkey: 'location'\r\n\t\t\t\t}\r\n\r\n\t\t\t],\r\n\r\n\t\t\tfruit: [\r\n\t\t\t\t{\r\n\t\t\t\t\tid: 0,\r\n\t\t\t\t\ttitle: 'Apple',\r\n\t\t\t\t\tselected: false,\r\n\t\t\t\t\tkey: 'fruit'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tid: 1,\r\n\t\t\t\t\ttitle: 'Orange',\r\n\t\t\t\t\tselected: false,\r\n\t\t\t\t\tkey: 'fruit'\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t};\r\n\t}\r\n\r\n\r\n\r\n\tcomponentDidMount() {\r\n\r\n\t\tconst racesRequest = axios.get(CONFIG.SHOTS)\r\n\t\t\t.then(response =>\r\n\t\t\t\tresponse.data\r\n\t\t\t).then(players => this.setDefault(players))\r\n\r\n\t\t// const racesRequest1 = axios.get(CONFIG.API_BASE_URL)\r\n\t\t//         .then(response =>\r\n\t\t//             response.data.map((p,index) => ({\r\n\t\t//                 firstname: p.PLAYER_NAME,\r\n\t\t//                 lastname: p.lastname,\r\n\t\t//                 PTS: p.PTS,\r\n\t\t//                 AST: p.PTS + Math.random() -10,\r\n\r\n\t\t//                 key: 'players',\r\n\t\t//                 selected: true,\r\n\t\t//                 id: index\r\n\t\t//             }))\r\n\t\t//              ).then(players => this.setDefault(players))\r\n\r\n\t\t//\r\n\r\n\r\n\t}\r\n\r\n\tsetDefault = (players) => {\r\n\r\n\t\tplayers.map(i => i.firstname = \"Nepal\");\r\n\t\tplayers.map(i => i.key = \"players\");\r\n\r\n\t\tplayers.map(i => i.selected = true);\r\n\t\tplayers.map((p, i) => p.id = p.PLAYER_ID);\r\n\t\tplayers.map((p, i) => p.shotid = i);\r\n\t\t// players.map((p, i) => p.SHOT_DIST  = p.SHOT_DIST *1.5);\r\n\r\n\r\n\t\tconst wholePts1 = players.map(post => (post.SHOT_DIST))\r\n\t\tconst wholeAst1 = players.map(post => (post.HOME_PTS))\r\n\r\n\r\n\r\n\r\n\t\tconst uniqNames = [...new Set(players.map(d => d.PLAYER_NAME))]\r\n\t\t// const uniqRaces = [...new Set(players.map(d => d.lastname))]\r\n\t\t// players = uniqRaces.map((y, index) => ({ id: index, raceName: y, selected: false, key: 'races' }))\r\n\t\t// const fnames = uniqFNames.map((y, index) => ({ id: index, firstname: y, selected: false, key: 'fnames' }))\r\n\t\t// seasons[0].selected = true;\r\n\t\t// players[0].SHOT_DIST = 100;\r\n\t\t// players[0].selected = true;\r\n\r\n\t\t// this.setState({ players: players, fnames:fnames })\r\n\t\tthis.setState({ players: players})\r\n\r\n\t}\r\n\r\n\tresetThenSet = (value, key) => {\r\n\t\tlet data = [...this.state[key]];\r\n\t\tdata.forEach(item => item.selected = false);\r\n\t\tdata[value].selected = true;\r\n\r\n\r\n\t\tthis.setState({ key: data });\r\n\r\n\t}\r\n\r\n\tfilterAndSort_Laps = (selectedRace, selectedSeason, laptimes, filtQ) => {\r\n\r\n\t\tvar filtered = laptimes.filter(d => (d.raceName === selectedRace.raceName && d.season === selectedSeason.season))\r\n\t\treturn filtered\r\n\r\n\t}\r\n\r\n\r\n\ttoggleSelected = (id, key) => {\r\n\r\n\r\n\t\tlet temp = JSON.parse(JSON.stringify(this.state[key]))\r\n\r\n\t\ttemp.forEach(function myFunction(item, index, arr) {\r\n\t\t\t// arr[index] = item * 10;\r\n\t\t\tif (arr[index].id === id) {\r\n\t\t\t\ttemp[index].selected = !temp[index].selected\r\n\t\t\t}\r\n\r\n\t\t})\r\n\r\n\r\n\t\t// uniqList[listid].selected = !uniqList[listid].selected\r\n\t\tthis.setState({\r\n\t\t\t[key]: temp\r\n\t\t})\r\n\t}\r\n\r\n\thandleChangeYear(year1, year2) {\r\n\t\tthis.setState({\r\n\t\t\tleft: year1,\r\n\t\t\tright: year2,\r\n\r\n\t\t})\r\n\t}\r\n\r\n\r\n\trender() {\r\n\r\n\t\t// const names = this.state.players.map(post => post.firstname)\r\n\t\tconst { fnames, players} = this.state\r\n\r\n\t\tvar uniqIds = [...new Set(players.map(d => d.PLAYER_ID))]\r\n\t\tvar uniqList = players.map((p, index) => ({\r\n\t\t\toption: p[\"PLAYER_NAME\"],\r\n\t\t\tid: p[\"PLAYER_ID\"],\r\n\t\t\tselected: false,\r\n\t\t\tkey: \"players\"\r\n\t\t}))\r\n\r\n\t\tuniqList = uniqList.filter((item, index) => uniqIds.includes(item.id))\r\n\t\t// uniqList = uniqList.filter((item,index)=> uniqList.id.indexOf(item.id)===index)                                           \r\n\t\tuniqList = uniqList.filter((uniqList, index, self) =>\r\n\t\t\t\tindex === self.findIndex((t) => (t.id === uniqList.id)))\r\n\r\n\t\tuniqList.map((p, i) => p.listid = i);\r\n\r\n\r\n\r\n\r\n\t\tvar ab = players.filter((p) => (p.selected == true))\r\n\r\n\r\n\t\tab = ab.filter((p) => (p.SHOT_DIST>= this.state.left) && (p.SHOT_DIST <= this.state.right))\r\n\r\n\t\t// const pts = ab.map(post => (post.SHOT_DIST))\r\n\r\n\t\tvar dist = players.map(post => (post.SHOT_DIST))\r\n\t\t// var wholeAst = players.map(post => (post.HOME_PTS))\r\n\r\n\t\tvar xloc = ab.map(post => (post.LOC_X))\r\n\t\tvar yloc = ab.map(post => (post.LOC_Y))\r\n\r\n\r\n\t\t// xloc.unshift(20)\r\n\t\t// xloc.unshift(300)\r\n\t\t// yloc.unshift(20)\r\n\t\t// yloc.unshift(300)\r\n\r\n\r\n\t\tvar abc = ab.map((shot, index) => ({\r\n                x: (shot.LOC_X + 250) / 10,\r\n                y: (shot.LOC_Y + 50) / 10,\r\n                action_type: shot.SHOT_TYPE,\r\n                shot_distance: shot.SHOT_DIST,\r\n                shot_made_flag: shot.FGM,\r\n\t\t}))\r\n\r\n\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"hmmw\" style={{ background: '#57667B' }}>\r\n\t\t\t{/* <div className=\"hmmw\" > */}\r\n\r\n\t\t\t\t<h1>Hello bugs </h1>\r\n\t\t\t\t<div className=\"asd\" style={{ display: 'flex', justifyContent: \"flex-start\", \"margin-left\": \"200px\" }}>\r\n \r\n\t\t\t\t\t<MultiDropdown\r\n\t\t\t\t\t\ttitleHelper=\"Player\"\r\n\t\t\t\t\t\ttitle=\"Select Players\"\r\n\t\t\t\t\t\tcol=\"PLAYER_NAME\"\r\n\t\t\t\t\t\tuid=\"PLAYER_ID\"\r\n\r\n\t\t\t\t\t\tlist={this.state.players}\r\n\t\t\t\t\t\tuniqList={uniqList}\r\n\t\t\t\t\t\ttoggleItem={this.toggleSelected}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{/* {wholePts} */}\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t<div><br></br></div>\r\n\t\t\t\t\r\n\t\t\t\t<div style={{ display: 'flex', justifyContent: \"flex-start\", \"margin-left\": \"200px\" }}>\r\n\r\n\t\t\t\t\t<RangeSlider onChangeYear={this.handleChangeYear.bind(this)}\r\n                      data={dist} \r\n\r\n                      left={this.state.left}\r\n                        right={this.state.right}\r\n                        width={500}\r\n                        height={150}\r\n\t\t\t\t\t\t/> \r\n\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\r\n\r\n\t\t\t\t</div>\r\n                <div><br></br></div>\r\n\r\n\r\n\t\t\t\t<div >\r\n\r\n\t\t\t\t\t{/* <Shotchart data={abc} xdata={xloc} ydata={yloc} size={[600, 450] }/>  */}\r\n\r\n\t\t\t\t\t<Shotchart \r\n\t\t\t\t\t\t\tdata={abc}\r\n\t\t\t\t\t\t\t//  xdata={xloc} ydata={yloc}\r\n\t\t\t\t\t\t\tplayerId={this.props.playerId}\r\n\t\t\t\t\t\t\tminCount={this.state.minCount}\r\n\t\t\t\t\t\t\tchartType={this.state.chartType}\r\n\t\t\t\t\t\t\tdisplayToolTips={this.state.displayToolTips}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// this.state.players.map(post => (\r\n\t\t\t\t\t\tthis.state.players.slice(0, 15).map(post => (\r\n\r\n\t\t\t\t\t\t\t<li align=\"start\">\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t{/* <p>{post.SHOT_DIST} : {post.SHOT_PTS} </p> */}\r\n\t\t\t\t\t\t\t\t\t<p></p>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\r\n            \r\n\r\n\r\n\t\t\t\t\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default Main1;\r\n\r\n","\r\nimport React, { Component } from 'react';\r\nimport BarChart from '../graphs/BarChart'\r\nimport { CONFIG } from '../config.js';\r\nimport * as d3 from \"d3\";\r\nimport axios from 'axios'\r\nimport Dropdown from '../components/Dropdown';\r\nimport MultiDropdown from '../components/MultiDropdown';\r\nimport Scatterplot from \"../graphs/Scatterplot\"\r\n// import BarChart from \"../graphs/BarChart\"\r\n\r\nimport Datapoint from \"../components/Datapoint\"\r\nimport RangeSlider from \"../components/RangeSlider\"\r\nimport SingleSlider from \"../components/singleSlider\"\r\nimport VertSlider from \"../components/VertSlider\"\r\n\r\n\r\n// import Shotchart from \"../graphs/Shotchart\"\r\nimport Shotchart from \"../graphs/myShotChart\"\r\n\r\nimport {Container,Col,Row} from 'react-bootstrap'\r\n\r\n\r\n\r\n\r\nclass Main1 extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tplayers: [],\r\n\t\t\t// uniqList: [],\r\n\t\t\twholePts: [],\r\n\t\t\twholeAst: [],\r\n\t\t\ttest: [],\r\n\t\t\tresponse: [],\r\n\t\t\tbardata: [12, 25, 6, 6, 9, 10],\r\n\r\n\t\t\tid: \"root\",\r\n\t\t\terror: null,\r\n\t\t\tisLoaded: false,\r\n\t\t\tfnames: [],\r\n\t\t\t// data: d3.range(100).map(_ => [Math.random(), Math.random()]),\r\n\t\t\tdata: [[0.1, 0.2], [0.3, 0.2], [4, 2], [4, 1]],\r\n\t\t\tminCount: 1,\r\n\t\t\t// chartType: 'scatter' ,//'hexbin', // 'scatter'\r\n\t\t\tchartType: 'hexbin', // 'scatter'\r\n\r\n\t\t\tdisplayToolTips: true,\r\n\r\n\t\t\tisToggleOn: true,\r\n\r\n\r\n\t\t\tleft: 0,\r\n\t\t\tright: 35,\r\n\r\n\t\t\tdistL: 0,\r\n\t\t\tdistR: 35,\r\n\r\n\t\t\tleft2: 0,\r\n\t\t\tright2: 40\r\n\r\n\t\t};\r\n\t\tthis.handleClick = this.handleClick.bind(this);\r\n\r\n\t}\r\n\r\n\r\n\r\n\tcomponentDidMount() {\r\n\r\n\t\tconst racesRequest = axios.get(CONFIG.SHOTS)\r\n\t\t\t.then(response =>\r\n\t\t\t\tresponse.data\r\n\t\t\t).then(players => this.setDefault(players))\r\n\r\n\t\t// const racesRequest1 = axios.get(CONFIG.API_BASE_URL)\r\n\t\t//         .then(response =>\r\n\t\t//             response.data.map((p,index) => ({\r\n\t\t//                 firstname: p.PLAYER_NAME,\r\n\t\t//                 lastname: p.lastname,\r\n\t\t//                 PTS: p.PTS,\r\n\t\t//                 AST: p.PTS + Math.random() -10,\r\n\r\n\t\t//                 key: 'players',\r\n\t\t//                 selected: true,\r\n\t\t//                 id: index\r\n\t\t//             }))\r\n\t\t//              ).then(players => this.setDefault(players))\r\n\r\n\t\t//\r\n\r\n\r\n\t}\r\n\r\n\tsetDefault = (players) => {\r\n\r\n\t\tplayers.map(i => i.firstname = \"Nepal\");\r\n\t\tplayers.map(i => i.key = \"players\");\r\n\t\tplayers.map(i => i.selected = true);\r\n\r\n\r\n\t\tplayers.map((p, i) => {\r\n\t\t\tif (p.PLAYER_NAME === \"Stephen Curry\") { p.selected = true; }\r\n\t\t})\r\n\t\tplayers.map((p, i) => p.id = p.PLAYER_ID);\r\n\t\tplayers.map((p, i) => p.shotid = i);\r\n\t\t// players.map((p, i) => p.SHOT_DIST  = p.SHOT_DIST *1.5);\r\n\r\n\r\n\t\t// const wholePts1 = players.map(post => (post.SHOT_DIST))\r\n\t\t// const wholeAst1 = players.map(post => (post.HOME_PTS))\r\n\r\n\r\n\r\n\r\n\t\tconst uniqNames = [...new Set(players.map(d => d.PLAYER_NAME))]\r\n\t\t// const uniqRaces = [...new Set(players.map(d => d.lastname))]\r\n\t\t// players = uniqRaces.map((y, index) => ({ id: index, raceName: y, selected: false, key: 'races' }))\r\n\t\t// const fnames = uniqFNames.map((y, index) => ({ id: index, firstname: y, selected: false, key: 'fnames' }))\r\n\t\t// seasons[0].selected = true;\r\n\t\t// players[0].SHOT_DIST = 100;\r\n\t\t// players[1].selected = true;\r\n\t\t// players[0].selected = true;\r\n\r\n\r\n\t\t// this.setState({ players: players, fnames:fnames })\r\n\t\tthis.setState({ players: players })\r\n\r\n\t}\r\n\r\n\tresetThenSet = (value, key) => {\r\n\t\tlet data = [...this.state[key]];\r\n\t\tdata.forEach(item => item.selected = false);\r\n\t\tdata[value].selected = true;\r\n\r\n\r\n\t\tthis.setState({ key: data });\r\n\r\n\t}\r\n\r\n\tfilterAndSort_Laps = (selectedRace, selectedSeason, laptimes, filtQ) => {\r\n\r\n\t\tvar filtered = laptimes.filter(d => (d.raceName === selectedRace.raceName && d.season === selectedSeason.season))\r\n\t\treturn filtered\r\n\r\n\t}\r\n\r\n\r\n\ttoggleSelected = (id, key) => {\r\n\r\n\r\n\t\tlet temp = JSON.parse(JSON.stringify(this.state[key]))\r\n\r\n\t\ttemp.forEach(function myFunction(item, index, arr) {\r\n\t\t\t// arr[index] = item * 10;\r\n\t\t\tif (arr[index].id === id) {\r\n\t\t\t\ttemp[index].selected = !temp[index].selected\r\n\t\t\t}\r\n\r\n\t\t})\r\n\r\n\r\n\t\t// uniqList[listid].selected = !uniqList[listid].selected\r\n\t\tthis.setState({\r\n\t\t\t[key]: temp\r\n\t\t})\r\n\t}\r\n\r\n\thandleDistChange(x, y) {\r\n\t\tthis.setState({\r\n\t\t\tdistL: x,\r\n\t\t\tdistR: y\r\n\r\n\t\t})\r\n\t}\r\n\thandleChangeYear1(year1, year2) {\r\n\t\tthis.setState({\r\n\t\t\tleft2: year1,\r\n\t\t\tright2: year2,\r\n\r\n\t\t})\r\n\t}\r\n\r\n\thandleDistChange1(year1, year2) {\r\n\t\tthis.setState({\r\n\t\t\tleft: year1,\r\n\t\t\tright: year2,\r\n\r\n\t\t})\r\n\t}\r\n\r\n\r\n\thandleMinDist(x) {\r\n\t\tthis.setState({\r\n\t\t\tleft: x,\r\n\r\n\t\t})\r\n\t}\r\n\r\n\thandleBinChange(x) {\r\n\t\tthis.setState({\r\n\t\t\tminCount: x\r\n\t\t})\r\n\t}\r\n\thandleClick() {\r\n\t\t// let {margins,data,svgDimensions,onChangeYear,xScale,initialValue, other} = prevProps;\r\n\t\t// let {margins,data,svgDimensions,onChangeYear,xScale,initialValue, other} = this.props;\r\n\t\tif (this.state.isToggleOn === true) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tisToggleOn: !this.state.isToggleOn,\r\n\t\t\t\tchartType: 'scatter'\r\n\t\t\t})\r\n\t\t}\r\n\t\telse if (this.state.isToggleOn === false) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tisToggleOn: !this.state.isToggleOn,\r\n\t\t\t\tchartType: 'hexbin'\r\n\r\n\t\t\t})\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t}\r\n\r\n\r\n\trender() {\r\n\r\n\t\t// const names = this.state.players.map(post => post.firstname)\r\n\t\tconst { fnames, players } = this.state\r\n\r\n\t\tvar uniqIds = [...new Set(players.map(d => d.PLAYER_ID))]\r\n\t\tvar uniqList = players.map((p, index) => ({\r\n\t\t\toption: p[\"PLAYER_NAME\"],\r\n\t\t\tid: p[\"PLAYER_ID\"],\r\n\t\t\tselected: false,\r\n\t\t\tkey: \"players\"\r\n\t\t}))\r\n\r\n\t\tuniqList = uniqList.filter((item, index) => uniqIds.includes(item.id))\r\n\t\t// uniqList = uniqList.filter((item,index)=> uniqList.id.indexOf(item.id)===index)                                           \r\n\t\tuniqList = uniqList.filter((uniqList, index, self) =>\r\n\t\t\tindex === self.findIndex((t) => (t.id === uniqList.id)))\r\n\r\n\t\tuniqList.map((p, i) => p.listid = i);\r\n\r\n\r\n\r\n\r\n\t\tvar ab = players.filter((p) => (p.selected == true))\r\n\r\n\r\n\t\tab = ab.filter((p) => (p.SHOT_DIST >= this.state.distL) && (p.SHOT_DIST <= this.state.distR))\r\n\r\n\t\t// ab = ab.filter((p) => (((p.LOC_X+250)/10) >= this.state.distL) && (((p.LOC_X+250)/10) <= this.state.distR))\r\n\t\t// ab = ab.filter((p) => (((p.LOC_Y+50)/10) >= this.state.left2) && (((p.LOC_Y+50)/10) <= this.state.right2))\r\n\r\n\r\n\r\n\t\t// const pts = ab.map(post => (post.SHOT_DIST))\r\n\r\n\t\tvar dist = players.map(post => (post.SHOT_DIST))\r\n\t\tvar wholeAst = players.map(p => ((p.LOC_X+250)/10))\r\n\t\tvar wholePts = players.map(p => (p.LOC_Y+50)/10)\r\n\r\n\r\n\t\tvar xloc = ab.map(post => (post.LOC_X))\r\n\t\tvar yloc = ab.map(post => (post.LOC_Y))\r\n\r\n\r\n\t\t// xloc.unshift(20)\r\n\t\t// xloc.unshift(300)\r\n\t\t// yloc.unshift(20)\r\n\t\t// yloc.unshift(300)\r\n\r\n\r\n\t\tvar abc = ab.map((shot, index) => ({\r\n\t\t\tplayer: shot.PLAYER_NAME,\r\n\t\t\tx: (shot.LOC_X + 250) / 10,\r\n\t\t\ty: (shot.LOC_Y + 50) / 10,\r\n\t\t\taction_type: shot.SHOT_TYPE,\r\n\t\t\tshot_distance: shot.SHOT_DIST,\r\n\t\t\tshot_made_flag: shot.FGM,\r\n\t\t\tshot_value: shot.SHOT_VALUE,\r\n\t\t\tshot_pts: shot.SHOT_PTS,\r\n\t\t\tshot_zone: shot.SHOT_ZONE,\r\n\t\t\tshot_area: shot.SHOT_AREA,\r\n\t\t\tscore_margin: shot.SCORE_DIFF\r\n\r\n\t\t}))\r\n\r\n\t\tvar binrange = [1, 20]\r\n\r\n\t\tvar testt = [0,124,300]\r\n\r\n\t\t\r\n\r\n\t\treturn (\r\n\t\t\t// <div className=\"hmmw\" style={{ background: '#57667B' }}>\r\n\r\n\t\t\t<div className=\"hmmw\" >\r\n\t\t\t\t<h1>Hello bugs </h1>\r\n\t\t\t\t<div>\r\n\r\n\t\t\t\t\t<h2 style={{ display: 'flex', justifyContent: \"flex-start\", \"margin-left\": \"100px\" }}>\r\n\t\t\t\t\t\tPlayer\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t\t<div className=\"asd\" style={{ display: 'flex', justifyContent: \"flex-start\", \"margin-left\": \"100px\", \"margin-top\": \"10px\"  }}>  \r\n\t\t\t\t\t\t<div>\r\n\r\n\t\t\t\t\t\t{/* <MultiDropdown\r\n\t\t\t\t\t\t\ttitleHelper=\"Player\"\r\n\t\t\t\t\t\t\ttitle=\"Select Players\"\r\n\t\t\t\t\t\t\tcol=\"PLAYER_NAME\"\r\n\t\t\t\t\t\t\tuid=\"PLAYER_ID\"\r\n\r\n\t\t\t\t\t\t\tlist={this.state.players}\r\n\t\t\t\t\t\t\tuniqList={uniqList}\r\n\t\t\t\t\t\t\ttoggleItem={this.toggleSelected}\r\n\t\t\t\t\t\t/> */}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{/* {wholePts} */}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t\r\n\t\t\t\t<div>\r\n\r\n\t\t\t\t\t<h2 style={{ display: 'flex', justifyContent: \"flex-start\", \"margin-left\": \"100px\", \"margin-top\": \"10px\"  }}>\r\n\t\t\t\t\t\tDistance\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t\t<div className=\"asd\" style={{ display: 'flex', justifyContent: \"flex-start\", \"margin-left\": \"80px\" }}>  \r\n\t\t\t\t\t\t<div>\r\n\r\n\t\t\t\t\t\t<RangeSlider onChangeYear={this.handleDistChange.bind(this)}\r\n\t\t\t\t\t\tdata={dist} \r\n\t\t\t\t\t\thandle1={\"handle3\"}\r\n\t\t\t\t\t\thandle2={\"handle4\"}\r\n\t\t\t\t\t\tsGroup={\"test\"}\r\n\t\t\t\t\t\tlabel={\"Distance\"}\r\n\r\n\t\t\t\t\t\tleft={this.state.distL}\r\n\t\t\t\t\t\tright={this.state.distR}\r\n\t\t\t\t\t\twidth={500}\r\n\t\t\t\t\t\theight={150}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{/* {wholePts} */}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t<div >\r\n\t\t\t\t\t<div style={{ display: 'flex', justifyContent: \"flex-start\",\"align-items\":\"flex-start\", \"margin-left\": \"100px\", \"margin-top\": \"10px\"  }}></div>\r\n\t\t\t\t\t<h2 style={{ width:300}} >\r\n\t\t\t\t\t\tToggle Chart Mode\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t\t<h2 style={{ width:300}} >\r\n\t\t\t\t\t\tHex Bin\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t\t<div className=\"break\"></div>\r\n\t\t\t\t\t<div className=\"asd\" style={{ display: 'flex',\"flex-direction\":\"column\", justifyContent: \"flex-start\", \"margin-left\": \"100px\" }}>  \r\n\r\n\r\n\t\t\t\t\t\t<button onClick={this.handleClick} className=\"white\">\r\n\t\t\t\t\t\t\t{this.state.isToggleOn ? 'Scatter' : 'Hexbin'}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{/* {wholePts} */}\r\n\r\n\t\t\t\t\t\t<div style={{ display: 'flex', justifyContent: \"flex-start\", \"margin-left\": \"100px\", \"margin-top\": \"0px\"  }}>\r\n\t\t\t\t\t\t<SingleSlider onChangeYear={this.handleBinChange.bind(this)}\r\n\t\t\t\t\t\tdata={binrange}\r\n\t\t\t\t\t\thandle={\"handle13\"}\r\n\r\n\t\t\t\t\t\tleft={this.state.minCount}\r\n\t\t\t\t\t\t// right={this.state.minCount}\r\n\t\t\t\t\t\twidth={300}\r\n\t\t\t\t\t\theight={40}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\r\n\t\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\r\n\r\n\r\n\t\t\t\t<div><br></br></div>\r\n\r\n\t\t\t\t<div style={{ display: 'flex', justifyContent: \"flex-start\", \"margin-left\": \"200px\" }}>\r\n\r\n\t\t\t\t\t{/* <RangeSlider onChangeYear={this.handleDistChange.bind(this)}\r\n                      data={dist} \r\n\t\t\t\t\t  handle1={\"handle1\"}\r\n\t\t\t\t\t  handle2={\"handle2\"}\r\n\t\t\t\t\t  sGroup={\"dist\"}\r\n\t\t\t\t\t  label={\"Dist\"}\r\n\t\t\t\t\t  \r\n\r\n                      left={this.state.left}\r\n                        right={this.state.right}\r\n                        width={500}\r\n                        height={150}\r\n\t\t\t\t\t\t/>  */}\r\n\r\n\r\n\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t<div><br></br></div>\r\n\r\n\t\t\t\t<div style={{ display: 'flex', justifyContent: \"flex-start\", \"margin-left\": \"100px\", background: '#57667B' }}>\r\n\r\n\t\t\r\n\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t\t{/* <RangeSlider onChangeYear={this.handleDistChange.bind(this)}\r\n\t\t\t\t\t\tdata={dist} \r\n\t\t\t\t\t\thandle1={\"handle3\"}\r\n\t\t\t\t\t\thandle2={\"handle4\"}\r\n\t\t\t\t\t\tsGroup={\"test\"}\r\n\t\t\t\t\t\tlabel={\"Distance\"}\r\n\r\n\t\t\t\t\t\tleft={this.state.distL}\r\n\t\t\t\t\t\tright={this.state.distR}\r\n\t\t\t\t\t\twidth={500}\r\n\t\t\t\t\t\theight={150}\r\n\t\t\t\t\t/> */}\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t{/* {this.state.distL}:{this.state.distR}  */}\r\n\r\n\r\n\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div style={{ display: 'flex', justifyContent: \"center\" }}>\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/* <div style={{ width: 100,background: '#23667B'}} >\r\n\r\n\t\t\t\t\r\n\t\t\t\t</div> */}\r\n\t\t\t\t{/* <div><br></br><br></br></div> */}\r\n\r\n\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\r\n\t\t\t\t<Shotchart \r\n                                data={abc}\r\n                                //  xdata={xloc} ydata={yloc}\r\n                                playerId={this.props.playerId}\r\n                                minCount={this.state.minCount}\r\n                                chartType={this.state.chartType}\r\n\t\t\t\t\t\t\t\tdisplayToolTips={this.state.displayToolTips}\r\n\t\t\t\t\t\t\t\twidth={500}\r\n                                />\r\n\t\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* <SingleSlider onChangeYear={this.handleMinDist.bind(this)}\r\n\t\t\t\t\t  data={dist} \r\n\t\t\t\t\t  handle={\"handle4\"}\r\n\t\t\t\t\t  label={\"left\"}\r\n\r\n                      left={this.state.left}\r\n                        // right={this.state.minCount}\r\n                        width={500}\r\n                        height={150}\r\n\t\t\t\t\t\t/>  */}\r\n\r\n\t\t\t\t{/* {this.state.left} */}\r\n\r\n\r\n\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// this.state.players.map(post => (\r\n\t\t\t\t\t\tthis.state.players.slice(0, 15).map(post => (\r\n\r\n\t\t\t\t\t\t\t<li align=\"start\">\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t{/* <p>{post.SHOT_DIST} : {post.SHOT_PTS} </p> */}\r\n\t\t\t\t\t\t\t\t\t<p></p>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\r\n\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default Main1;\r\n\r\n","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport Home from './views/Home'\r\nimport Table from './views/Table'\r\n// import Scatter from './components/Scatter'\r\nimport Bars from './views/Bars'\r\nimport Filter from './views/Filtering'\r\nimport Better from './views/Better'\r\nimport Slider from './views/Slider'\r\nimport Test from './views/Test'\r\nimport Just from './views/Just'\r\n\r\nimport sibs from './views/sibs'\r\nimport Scatter from './views/ScatterView'\r\nimport Axistest from './views/Axistest'\r\nimport Shotchart from './views/ShotchartView'\r\nimport myShotchart from './views/myShotchartView'\r\nimport grid from './views/Grid'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Main = () => (\r\n  <main>\r\n    <Switch>\r\n      {/* <Route exact path='/' component={Home}/>   */}\r\n      <Route exact path='/' component={grid}/>     \r\n\r\n      <Route path='/table' component={Table}/>\r\n      <Route path='/filter' component={Filter}/>\r\n      <Route path='/barchart' component={Better}/>\r\n      <Route path='/slider' component={Slider}/>\r\n      <Route path='/test' component={Axistest}/>\r\n      <Route path='/bar' component={Just}/>\r\n      {/* <Route path='/slider' component={sibs}/> */}\r\n      <Route path='/scatter' component={Scatter}/>\r\n      <Route path='/shotchart' component={Shotchart}/>\r\n      <Route path='/my' component={myShotchart}/>\r\n      <Route path='/grid' component={grid}/>\r\n      \r\n\r\n\r\n      {/* <Route path='/scatter' component={Scatter}/> */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n    </Switch>\r\n  </main>\r\n  \r\n)\r\n\r\nexport default Main\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport Main from './Main'\r\n\r\n// import './css/ShotChart.css'\r\n// /node_modules/react-grid-layout/css/styles.css\r\n// /node_modules/react-resizable/css/styles.css\r\n\r\n\r\nimport '../node_modules/react-grid-layout/css/styles.css'\r\nimport '../node_modules/react-resizable/css/styles.css'\r\nimport './css/global.css';\r\nimport './css/Axis.css';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faCheck, faAngleUp, faAngleDown} from '@fortawesome/free-solid-svg-icons'\r\nlibrary.add(faCheck, faAngleUp, faAngleDown)\r\n\r\n\r\nconst App = () => (\r\n  // <div className=\"App\" style={{ background: '#57667B' }} >\r\n  <div className=\"App\"  >\r\n\r\n    <Header />\r\n    <Main />\r\n  </div>\r\n)\r\n\r\nexport default App\r\n","import '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n// import '../node_modules/bootstrap/dist/css/bootstrap-theme.css';\r\n\r\n//import 'bootstrap/dist/css/bootstrap-theme.css';\r\nimport React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport App from \"./App\";\r\n//import '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render((\r\n     <BrowserRouter>\r\n        <App/>\r\n     </BrowserRouter>\r\n     ),\r\n     document.getElementById('root')\r\n);","export const CONFIG = {\r\n    API_BASE_URL: 'https://gyc027wdca.execute-api.us-west-1.amazonaws.com/players',\r\n    // SHOTS: 'http://localhost:5000/api/shots'\r\n    SHOTS: 'https://gyc027wdca.execute-api.us-west-1.amazonaws.com/players/shotlogs',\r\n    // STATS: 'https://gyc027wdca.execute-api.us-west-1.amazonaws.com/players/playerstats'\r\n\r\n\r\n\r\n};","\r\nimport React, { Component } from 'react'\r\n// import '../css/global.css'\r\n// import { scaleLinear } from \"d3-scale\"\r\nimport { max } from 'd3-array'\r\nimport { select } from 'd3-selection'\r\nimport * as d3 from \"d3\";\r\nimport { range } from 'd3-array';\r\nimport { scaleBand, scaleLinear, scaleOrdinal } from 'd3-scale';\r\n\r\n// import Axis from \"../components/AxisRange\"\r\nimport Axis from \"./AxisScatter\"\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Handle extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            handle: '',\r\n            h1: 2,\r\n            h2: 3,\r\n            tempH1: null,\r\n            tempH2: null,\r\n            trueYear1: null,\r\n            trueYear2:null\r\n        }\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n    onMouseOver() {\r\n        this.setState({\r\n            handle: this.props.handle\r\n\r\n        });\r\n    }\r\n    render() {\r\n        const { initialValue,other, xScale, handle } = this.props;\r\n        // const circle = <circle className=\"handleCircle\" r=\"10px\" fill=\"#fa7070\" />\r\n        const circle = <circle  r=\"10px\"  />\r\n\r\n\r\n        // if (handle === \"handle1\")\r\n        // {\r\n        //     var h1 = initialValue;\r\n        //     var h2 = other;\r\n\r\n        // }\r\n        \r\n        // else if (handle === \"handle2\")\r\n        // {\r\n        //     var h1 = other;\r\n        //     var h2 = initialValue;\r\n        // }\r\n\r\n        return  <g className={handle} transform={`translate(${xScale(initialValue)},0)` }\r\n                    onMouseOver={this.onMouseOver.bind(this)}   style={{fill:\"#fa7070\"}}   >\r\n                    \r\n                    {circle}\r\n\r\n                        </g>\r\n\r\n        // return <div>\r\n        //             <div> <button onClick={this.handleClick}>\r\n        //                     {this.state.isToggleOn ? 'ON' : 'OFF'}\r\n        //                 </button>  \r\n        //             </div>\r\n                    \r\n                    \r\n        //             {handle}:<br></br>H1: {h1}<br></br> H2: {h2}\r\n\r\n        //             <g className={handle} transform={`translate(${xScale(initialValue)},0)`}\r\n        //                     onMouseOver={this.onMouseOver.bind(this)}>{circle}\r\n        //             </g>\r\n\r\n        //         </div>\r\n    }\r\n\r\n    handleClick(prevProps) {\r\n \r\n        // onChangeYear(h1,h2 );\r\n\r\n      }\r\n\r\n\r\n\r\n      componentDidUpdate(prevProps, prevState) {\r\n        // let {margins,data,svgDimensions,onChangeYear,initialValue} = prevProps;\r\n        let {handle,margins,data,svgDimensions,onChangeYear,xScale,initialValue, other,handleSide,sGroup} = this.props;\r\n\r\n        // let { margins,data, svgDimensions, xScale, onChangeYear } = prevProps;\r\n\r\n\r\n        // const minData = d3.min(data), maxData = d3.max(data)\r\n\r\n        if (handleSide === \"left\")\r\n        {\r\n            // a = other +5\r\n            var h1 = xScale(initialValue);\r\n            var h2 = xScale(other);   \r\n            var tempH1 = xScale(initialValue);\r\n            var tempH2 = xScale(other);   \r\n            var trueH1 = initialValue \r\n            var trueH2 = other    \r\n        }\r\n        \r\n        else if (handleSide === \"right\")\r\n        {\r\n            var h1 = xScale(other);   \r\n            var h2 = xScale(initialValue);\r\n            var tempH1 = xScale(other);   \r\n            var tempH2 = xScale(initialValue);\r\n            var trueH1 = other    \r\n            var trueH2 = initialValue \r\n        }\r\n\r\n        \r\n\r\n\r\n        let mouseValue, trueMouseValue, self = this;\r\n        // let handle = this.props.handle;\r\n        let minWidth = 10//((window.screen.width/2 - margins.left - margins.right)/5);\r\n        // let minWidth = ((window.screen.width/2 - margins.left - margins.right)/10);\r\n\r\n\r\n        const drag = d3.drag()\r\n            .on(\"drag\", draged).on(\"end\", dragend);\r\n\r\n        d3.select(\".rangeSliderGroup\"+sGroup).call(drag);\r\n        // d3.select(\".\"+handle).call(drag);\r\n\r\n\r\n        function draged() {\r\n            mouseValue = d3.mouse(this)[0];\r\n            trueMouseValue = getTrueMouseValue(mouseValue);\r\n\r\n            handleSide === \"left\" ? h1 = mouseValue : h2 = mouseValue;\r\n\r\n            if ((h2 - h1) > minWidth && mouseValue > margins.left && mouseValue < (svgDimensions.width - margins.right))\r\n             {\r\n                d3.select(\".\" + handle).attr(\"transform\", \"translate(\" + mouseValue + \",0)\");\r\n\r\n                if (handleSide === \"left\") \r\n                {\r\n                    tempH1 = mouseValue;\r\n                    trueH1 = trueMouseValue;\r\n                } \r\n                else\r\n                {\r\n                    tempH2 = mouseValue\r\n                    trueH2 = trueMouseValue;\r\n                }\r\n            }\r\n            else \r\n            {\r\n                h1 = tempH1;\r\n                h2 = tempH2;\r\n                handleSide === \"left\" ? trueMouseValue = trueH1 : trueMouseValue = trueH2;\r\n            }\r\n\r\n            d3.select(\".rangeBarFilled\"+sGroup).remove();\r\n\r\n            d3.select(\".rangeSliderGroup\" +sGroup)\r\n                .insert(\"line\", \".rangeSliderAxis\"+sGroup)\r\n                .attr(\"x1\", h1)\r\n                .attr(\"x2\", h2)\r\n                .attr(\"y1\", 0)\r\n                .attr(\"y2\", 0)\r\n                .attr(\"class\", \"rangeBarFilled\"+sGroup)\r\n                .style(\"stroke\", \"#fa7070\")\r\n                .style(\"stroke-width\",\"3px\")\r\n\r\n\r\n        }\r\n        function dragend() {\r\n            // h1 = xScale(getTrueMouseValue(tempH1));\r\n            // h2 = xScale(getTrueMouseValue(tempH2));\r\n            // if  ((xScale(trueH1) < margins.left)&& (handleSide ===\"left\"))\r\n            // {\r\n                \r\n            // }\r\n            // else if ((xScale(trueH2) < margins.left)&& (handleSide ===\"right\"))\r\n            // {\r\n\r\n            // }\r\n            if (((xScale(trueH1) < margins.left)||(xScale(trueH2) < margins.left)) || (self.state.handle !== \"\")) {\r\n\r\n            }\r\n            else {\r\n                // d3.select(\".\" + self.state.handle).attr(\"transform\", \"translate(\" + xScale(trueMouseValue) + \",0)\");\r\n\r\n                // d3.select(\".rangeBarFilled\"+sGroup).remove();\r\n\r\n                // d3.select(\".rangeSliderGroup\" +sGroup)\r\n                //     .insert(\"line\", \".rangeSliderAxis\"+sGroup)\r\n                //     .attr(\"x1\", xScale(trueH1))\r\n                //     .attr(\"x2\", xScale(trueH2))\r\n                //     .attr(\"y1\", 0)\r\n                //     .attr(\"y2\", 0)\r\n                //     .attr(\"class\", \"rangeBarFilled\"+sGroup)\r\n                //     .style(\"stroke\", \"#fa7070\")\r\n                //     .style(\"stroke-width\",\"3px\")\r\n\r\n                \r\n            }\r\n\r\n\r\n            onChangeYear(trueH1, trueH2);\r\n            // handle = \"\"\r\n\r\n        }\r\n        function getTrueMouseValue(mouseValue) {\r\n            // const a = xScale.invert(mouseValue) * 10\r\n            // return Math.round(a) / 10;\r\n\r\n\r\n            const a = xScale.invert(mouseValue) \r\n            return Math.round(a) ;//+18;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst RangeSlider = ({ data, onChangeYear, left, right,width,height,handle1,handle2, sGroup, handleSide, label }) => {\r\n    const margins = { top: 20, right: 30, bottom: 20, left: 30 },\r\n        svgDimensions = { width: width, height: height };\r\n\r\n    const minData = d3.min(data), maxData = d3.max(data)\r\n\r\n    // const xScale = d3.scaleLinear()\r\n    //     .domain([0, maxData])\r\n    //     .range([margins.left, svgDimensions.width - margins.right])\r\n    //     .clamp(true);\r\n\r\n    const xScale = d3.scaleLinear()\r\n        .domain([minData, maxData])\r\n        .range([margins.left, svgDimensions.width - margins.right])\r\n        .clamp(true);\r\n\r\n    const i1 = left, i2 = right\r\n\r\n    const RangeBar = <line x1={margins.left} y1=\"0\" x2={svgDimensions.width - margins.right} y2=\"0\" className={\"rangeBar\"} />\r\n    const RangeBarFilled = <line x1={xScale(i1)} y1=\"0\" x2={xScale(i2)} y2=\"0\" className={\"rangeBarFilled\"+sGroup} style={{stroke: \"#fa7070\",\"stroke-width\": \"3px\"}}/>\r\n\r\n    // const xScale2 = d3\r\n    //   .scaleLinear()\r\n    //   .domain([0, maxData])\r\n    //   .range([margins.left, svgDimensions.width - margins.right])\r\n\r\n      const xScale2 = d3\r\n      .scaleLinear()\r\n      .domain([minData, maxData])\r\n      .range([margins.left, svgDimensions.width - margins.right])\r\n\r\n\r\n\r\n\r\n    // return  (\r\n    //     <g transform={`translate(${50}, ${50})`}>\r\n    //       {/* {data.map(([x, y]) => datapoint({ x: xScale(x), y: yScale(y) }))} */}\r\n    //       {/* <Axis x={0} y={0} scale={yScale} type=\"Left\" /> */}\r\n    //        {RangeBar}{RangeBarFilled}\r\n    //       <Axis x={0} y={200} scale={xScale2} type=\"Bottom\" />\r\n\r\n    //         <Handle onChangeYear={onChangeYear} handle=\"handle1\" initialValue={i1} other={i2} data={data} xScale={xScale} margins={margins} svgDimensions={svgDimensions} /> \r\n    //         <Handle onChangeYear={onChangeYear} handle=\"handle2\" initialValue={i2} other={i1}  data={data} xScale={xScale} margins={margins} svgDimensions={svgDimensions} />\r\n\r\n    //     </g>\r\n    //   );\r\n\r\n\r\n              \r\nreturn     <svg width={width} height={55} >\r\n                <g className={\"rangeSliderGroup\"+sGroup} transform={`translate(0,${20})`}>\r\n                <Axis x={0} y={0} scale={xScale2} label={label} type=\"Bottom\" />\r\n                {RangeBar}{RangeBarFilled}\r\n                {/* <Axis margins={margins} svgDimensions={svgDimensions} xScale={xScale} data={data}/> */}\r\n                    {/* <Axis {...yProps}/> */}\r\n                    <Handle onChangeYear={onChangeYear} handle={handle2} handle2={handle1} handleSide={\"right\"} sGroup={sGroup} initialValue={i2} other={i1}  data={data} xScale={xScale} margins={margins} svgDimensions={svgDimensions} />\r\n                    <Handle onChangeYear={onChangeYear} handle={handle1} handle2={handle2} handleSide={\"left\"} sGroup={sGroup} initialValue={i1} other={i2} data={data} xScale={xScale} margins={margins} svgDimensions={svgDimensions} />\r\n                </g>\r\n    </svg>;\r\n             \r\n\r\n\r\n\r\n    \r\n\r\n//     return <svg className=\"rangeSliderSvg\" width={svgDimensions.width} height={svgDimensions.height}>\r\n//     <g className=\"rangeSliderGroup\" transform={`translate(0,${svgDimensions.height - margins.bottom - 40})`}>\r\n//        {RangeBar}{RangeBarFilled}\r\n//        {/* <Axis margins={margins} svgDimensions={svgDimensions} xScale={xScale} data={data}/> */}\r\n\r\n//         {/* <Axis {...yProps}/> */}\r\n//         <Handle onChangeYear={onChangeYear} handle=\"handle1\" initialValue={i1} other={i2} data={data} xScale={xScale} margins={margins} svgDimensions={svgDimensions} />\r\n//         <Handle onChangeYear={onChangeYear} handle=\"handle2\" initialValue={i2} other={i1}  data={data} xScale={xScale} margins={margins} svgDimensions={svgDimensions} />\r\n//     </g>\r\n// </svg>;\r\n            \r\n    // return \r\n    //         <svg className=\"rangeSliderSvg\" width={svgDimensions.width} height={svgDimensions.height}>\r\n    //             <g className=\"rangeSliderGroup\" transform={`translate(0,${svgDimensions.height - margins.bottom - 40})`}>\r\n    //                 {/* {RangeBar}{RangeBarFilled} */}\r\n    //                 {/* <Axis margins={margins} svgDimensions={svgDimensions} xScale={xScale} /> */}\r\n    //                 {/* <Handle handle=\"handle1\" initialValue={i1} other={i2}  />\r\n    //                 <Handle handle=\"handle2\" initialValue={i2} other={i1}  /> */}\r\n\r\n    //                 <Handle onChangeYear={onChangeYear} handle=\"handle1\" initialValue={i1} other={i2} data={data} xScale={xScale} margins={margins} svgDimensions={svgDimensions} />\r\n    //                 <Handle onChangeYear={onChangeYear} handle=\"handle2\" initialValue={i2} other={i1}  data={data} xScale={xScale} margins={margins} svgDimensions={svgDimensions} />\r\n    //             </g>\r\n    //         </svg>;\r\n}\r\n/********************* RangeSlider end ***************************/\r\nexport default RangeSlider;","import React from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Text = styled.text`\r\n    fill: black;\r\n    font-family: sans-serif;\r\n    font-size: 10px;\r\n`;\r\n\r\nclass Axis extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.gRef = React.createRef();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.d3Render();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.d3Render();\r\n  }\r\n\r\n  d3Render() {\r\n    const { type } = this.props;\r\n\r\n    d3.select(this.gRef.current).call(d3[`axis${type}`](this.props.scale));\r\n  }\r\n  a;\r\n  get labelPos() {\r\n    const { type, scale } = this.props;\r\n\r\n    switch (type) {\r\n      case \"Top\":\r\n        return { x: scale.range()[1] + 20, y: 0 };\r\n      case \"Right\":\r\n        return { x: 20, y: 0 };\r\n      case \"Bottom\":\r\n        return { x: scale.range()[1] + 0, y: 25 };\r\n      case \"Left\":\r\n        return { x: -25, y: 0 };\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { x, y, label } = this.props;\r\n\r\n    return (\r\n      <g ref={this.gRef} transform={`translate(${x}, ${y})`}>\r\n        <Text {...this.labelPos}>{label}</Text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Axis;","import React, { Component } from 'react'\r\n// import {FontAwesome} from 'react-fontawesome'\r\nimport { fontAwesome } from '@fortawesome/react-fontawesome'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nimport onClickOutside from \"react-onclickoutside\";\r\nimport '../css/global.css'\r\n\r\nclass DropdownMultiple extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tlistOpen: false,\r\n\t\t\theaderTitle: this.props.title,\r\n\t\t\ttimeOut: null\r\n\t\t}\r\n\t\tthis.close = this.close.bind(this)\r\n\t}\r\n\r\n\tcomponentDidUpdate() {\r\n\t\tconst { listOpen } = this.state\r\n\t\tsetTimeout(() => {\r\n\t\t\tif (listOpen) {\r\n\t\t\t\twindow.addEventListener('click', this.close)\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\twindow.removeEventListener('click', this.close)\r\n\t\t\t}\r\n\t\t}, 0)\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\twindow.removeEventListener('click', this.close)\r\n\t}\r\n\r\n\tclose(timeOut) {\r\n\t\tthis.setState({\r\n\t\t\tlistOpen: false\r\n\t\t})\r\n\t}\r\n\r\n\tstatic getDerivedStateFromProps(nextProps) {\r\n\r\n\t\tconst uniqNames = [...new Set(nextProps.list.filter(function (a) { return a[nextProps.selCol]; }).map(d => d.PLAYER_NAME))]\r\n\t\t// const selcetedids = [...new Set(nextProps.list.filter(function (a) { return a.selected; }).map(d => d.PLAYER_ID))]\r\n\r\n        // nextProps.uniqList= nextProps.uniqList.filter((person) => selcetedids.includes(person.id))\r\n\r\n\r\n\t\t// const names = nextProps.list.filter(function(a) { return a.selected; }).map(d => d.PLAYER_NAME)\r\n\t\tconst count = uniqNames.length;\r\n\r\n\t\t// nextProps.list\r\n\r\n\t\tif (count === 0) {\r\n\t\t\treturn { headerTitle: nextProps.title }\r\n\t\t}\r\n\t\telse if (count === 1) {\r\n\t\t\treturn { headerTitle: `${uniqNames.join(\" | \")}` }\r\n\t\t}\r\n\t\telse if (count > 1) {\r\n\t\t\treturn { headerTitle: `${uniqNames.join(\" | \")}` }\r\n\t\t\t// return {headerTitle: `${count} ${nextProps.titleHelper}s`}\r\n\t\t}\r\n\t}\r\n\r\n\ttoggleList() {\r\n\t\tthis.setState(prevState => ({\r\n\t\t\tlistOpen: !prevState.listOpen\r\n\t\t}))\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { list, toggleItem, uniqList,selCol } = this.props\r\n\t\tconst { listOpen, headerTitle } = this.state\r\n\r\n\r\n\t\tconst selcetedids = [...new Set(list.filter(function (a) { return a.selected; }).map(d => d.PLAYER_ID))]\r\n\r\n\t\t// uniqList= uniqList.filter((person) => selcetedids.includes(person.id))\r\n\r\n\t\tuniqList.forEach( function myFunction(item, index, arr) {\r\n\t\t\t// arr[index] = item * 10;\r\n\t\t\tif (selcetedids.includes(arr[index].id))\r\n\t\t\t{\r\n\t\t\t\tarr[index].selected = true ;\r\n\t\t\t\t// !arr[index].selected\r\n\t\t\t}\r\n\t\t\t\r\n\t\t  })\r\n\r\n\r\n\t\t// .map((p,index) => ({\r\n\t\t// \t                firstname: p.PLAYER_NAME,\r\n\t\t// \t                lastname: p.lastname,\r\n\t\t// \t            }))\r\n\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"dd-wrapper\">\r\n\t\t\t\t<div className=\"dd-header\" onClick={() => this.toggleList()}>\r\n\t\t\t\t\t<div className=\"dd-header-title\">{headerTitle}</div>\r\n\t\t\t\t\t{listOpen\r\n\t\t\t\t\t\t? <fontAwesome name=\"angle-up\" size=\"2x\" />\r\n\t\t\t\t\t\t: <fontAwesome name=\"angle-down\" size=\"2x\" />\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t\t{listOpen && <ul className=\"dd-list\" onClick={e => e.stopPropagation()}>\r\n\t\t\t\t\t{uniqList.map((item) => (\r\n\r\n\t\t\t\t\t\t<li className=\"dd-list-item\" key={item.key} onClick={() => toggleItem(item.id, item.key,uniqList,item.listid,selCol)}>\r\n\t\t\t\t\t\t\t{/* toggleItem(item.id, item.key,uniqList, item.listid,selCol) */}\r\n\r\n\t\t\t\t\t\t\t{item[\"option\"]} {item[selCol] && <FontAwesomeIcon icon=\"check\" size=\"sm\" color=\"#ccc\" />}\r\n\r\n\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t{/* {uniqList.map((item) => (\r\n\r\n\t\t\t\t\t\t<li className=\"dd-list-item\" key={item.key} onClick={() => toggleItem(item.id, item.key)}>\r\n\r\n\t\t\t\t\t\t\t{item[this.props.col]} {item.selected && <FontAwesomeIcon icon=\"check\" size=\"sm\" color=\"#ccc\" />}\r\n\r\n\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t))} */}\r\n\t\t\t\t</ul>}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n}\r\n\r\nexport default DropdownMultiple","import React, { Component } from 'react'\r\n// import './App.css'\r\nimport { scaleLinear } from \"d3-scale\"\r\nimport { max } from 'd3-array'\r\nimport { select } from 'd3-selection'\r\n\r\nclass BarChart extends Component {\r\n   constructor(props){\r\n      super(props)\r\n      this.createBarChart = this.createBarChart.bind(this)\r\n   }\r\n   componentDidMount() {\r\n      this.createBarChart()\r\n   }\r\n   componentDidUpdate() {\r\n      this.createBarChart()\r\n   }\r\n   createBarChart() {\r\n      const node = this.node\r\n      const dataMax = max(this.props.data)\r\n      const yScale = scaleLinear()\r\n         .domain([0, dataMax])\r\n         .range([0, this.props.size[1]-15])\r\n\r\n      // const yScaleText = scaleLinear()\r\n      //    .domain([0, dataMax ])\r\n      //    .range([0, this.props.size[1]+ 16])\r\n\r\n\r\n   select(node)\r\n      .selectAll('rect')\r\n      .data(this.props.data)\r\n      .enter()\r\n      .append('rect')\r\n   \r\n   select(node)\r\n      .selectAll('rect')\r\n      .data(this.props.data)\r\n      .exit()\r\n      .remove()\r\n\r\n      select(node)      \r\n      .selectAll('text')\r\n      // .data(this.props.data)\r\n      // .exit()\r\n      .remove()\r\n\r\n\r\n   \r\n   select(node)\r\n      .selectAll('rect')\r\n      .data(this.props.data)\r\n      .style('fill', '#fe9922')\r\n      .attr('x', (d,i) => i * 38)\r\n      .attr('y', d => this.props.size[1] - yScale(d))\r\n      .attr('height', d => yScale(d))\r\n      .attr('width', 34)\r\n\r\n\r\n\r\n\r\n   select(node)\r\n      .selectAll('text')\r\n\r\n         .data(this.props.data)\r\n         .enter()\r\n         .append(\"text\")\r\n         .text((d) => d)\r\n         .attr(\"x\", (d, i) => i * 38)\r\n         .attr(\"y\", (d, i) => this.props.size[1] - yScale(d) -3 )\r\n\r\n    \r\n\r\n   }\r\nrender() {\r\n      return <svg ref={node => this.node = node}\r\n      width={this.props.size[0]} height={this.props.size[1]+100}>\r\n      </svg>\r\n   }\r\n}\r\nexport default BarChart","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Circle = styled.circle`\r\n  fill: steelblue;\r\n  fill-opacity: .7;\r\n  stroke: steelblue;\r\n  stroke-width: 1.5px;\r\n`;\r\n\r\nclass Datapoint extends React.Component {\r\n  state = {\r\n    r: 3\r\n  };\r\n\r\n  highlight = () => {\r\n    this.setState({ r: 10 });\r\n  };\r\n\r\n  unhighlight = () => {\r\n    this.setState({ r: 3 });\r\n  };\r\n\r\n  render() {\r\n    const { x, y } = this.props;\r\n\r\n    return (\r\n      <Circle\r\n        cx={x}\r\n        cy={y}\r\n        r={this.state.r}\r\n        onMouseOver={this.highlight}\r\n        onMouseOut={this.unhighlight}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Datapoint;\r\n","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport onClickOutside from \"react-onclickoutside\";\r\nimport '../css/global.css';\r\n\r\nclass Dropdown extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      listOpen: false,\r\n      headerTitle: this.props.title\r\n    }\r\n  }\r\n\r\n  handleClickOutside(){\r\n    this.setState({\r\n      listOpen: false\r\n    })\r\n  }\r\n\r\n  selectItem = (title, id, stateKey) => {\r\n\r\n    // const sel = laptimes.filter(d => (d.selected === true))\r\n    // const selnames = sel.map((d => d.firstname))\r\n    // const selids = sel.map((d => d.id))\r\n\r\n\r\n    this.setState({\r\n      headerTitle: title,\r\n      listOpen: false\r\n    }, this.props.resetThenSet(id, stateKey))\r\n  }\r\n\r\n  toggleList = () => {\r\n    this.setState(prevState => ({\r\n      listOpen: !prevState.listOpen\r\n    }))\r\n  }\r\n\r\n  render(){\r\n    const{list} = this.props\r\n    const{listOpen, headerTitle} = this.state\r\n    return(\r\n      <div className=\"dd-wrapper\">\r\n        <div className=\"dd-header\" onClick={this.toggleList}>\r\n          <div className=\"dd-header-title\">{headerTitle}</div>\r\n          {listOpen\r\n            ? <FontAwesomeIcon icon=\"angle-up\" size=\"sm\" color=\"#ccc\"/>\r\n            : <FontAwesomeIcon icon=\"angle-down\" size=\"sm\" color=\"#ccc\"/>\r\n          }\r\n        </div>\r\n        {listOpen && <ul className=\"dd-list\">\r\n          {list.map((item)=> (\r\n            <li className=\"dd-list-item\" \r\n                key={item.id} \r\n                onClick={() => this.selectItem(item[this.props.col], item.id, item.key)}>\r\n                  {item[this.props.col]} {item.selected && <FontAwesomeIcon icon=\"check\" size=\"sm\" color=\"#ccc\"/>}\r\n            </li>\r\n          ))}\r\n        </ul>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default onClickOutside(Dropdown);\r\n\r\n// {listOpen && <ul className=\"dd-list\">\r\n//           {list.map((item)=> (\r\n//             <li className=\"dd-list-item\" \r\n//                 key={item.id} \r\n//                 onClick={() => this.selectItem(item[this.props.col], item.id, item.key)}>\r\n//                   {item[this.props.col]} {item.selected && <FontAwesomeIcon icon=\"check\" size=\"sm\" color=\"#ccc\"/>}\r\n//             </li>\r\n//           ))}\r\n//         </ul>}","import React from \"react\";\r\nimport * as d3 from \"d3\";\r\n\r\nimport Axis from \"../components/AxisScatter\";\r\n\r\nclass Scatterplot extends React.PureComponent {\r\n  \r\n  \r\n  \r\n  // var xmax = d3.max(this.props.xdata)\r\n  \r\n  state = {\r\n    xScale: d3\r\n      .scaleLinear()\r\n      .domain([0, d3.max(this.props.xdata)])\r\n      .range([0,this.props.width ]),\r\n    yScale: d3\r\n      .scaleLinear()\r\n      .domain([0, d3.max(this.props.ydata)])\r\n      .range([this.props.height, 0])\r\n  };\r\n  \r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    const { yScale, xScale } = state;\r\n\r\n    // yScale.range([props.height, 0]);\r\n    // xScale.range([0, props.width]);\r\n\r\n    return {\r\n      ...state,\r\n      yScale,\r\n      xScale\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { x, y, data, height, datapoint,xdata,ydata, } = this.props,\r\n      { yScale, xScale } = this.state;\r\n\r\n    if (ydata.length === xdata.length)\r\n    {\r\n        var i, out = [];//literal new array\r\n        for(i=0;i<xdata.length;i++)\r\n        {\r\n            out.push([xdata[i],ydata[i]]);\r\n        }\r\n      }\r\n      else if (ydata.length > xdata.length){\r\n        var i, out = [];//literal new array\r\n        for(i=0;i<xdata.length;i++)\r\n        {\r\n            out.push([0,ydata[i]]);\r\n        }\r\n\r\n      }\r\n      else if (ydata.length < xdata.length){\r\n\r\n        var i, out = [];//literal new array\r\n        for(i=0;i<xdata.length;i++)\r\n        {\r\n          out.push([xdata[i],0]);\r\n        }\r\n\r\n      }\r\n\r\n        return (\r\n            <g transform={`translate(${x}, ${y})`}>\r\n              {out.map(([x, y]) => datapoint({ x: xScale(x), y: yScale(y) }))}\r\n              <Axis x={0} y={0} scale={yScale} type=\"Left\" />\r\n              <Axis x={0} y={height} scale={xScale} type=\"Bottom\" />\r\n            </g>\r\n          );\r\n    \r\n\r\n    \r\n  }\r\n}\r\n\r\nexport default Scatterplot;","import * as d3 from 'd3';\nimport { hexbin } from 'd3-hexbin'\nimport { tip } from 'd3-tip'\n\nwindow.d3_hexbin = {hexbin: hexbin} // workaround library problem\n\n\n\n// SCALES USED TO INVERT COURT Y COORDS AND MAP SHOOTING PERCENTAGES OF BINS TO A FILL COLOR \nvar yScale = d3.scaleLinear().domain([0, 47]).rangeRound([47, 0]);\n\nexport default function() {\n    // NBA court dimensions are 50ft sideline to sideline and 94feet baseline to baseline (47ft half court)\n    // Forcing at least a 500x470 ratio for the court in order to paint shots appropriately        \n    var width = 500,\n        height = .94 * width;\n\n    function court(selection){\n        \n        selection.each(function(data){\n            // Responsive container for the shotchart\n            d3.select(this).style(\"max-width\", width/16 + \"em\");\n            // Select the SVG if it exists\n            if (!d3.select(this).selectAll(\"svg\").empty()){\n                var svg = d3.select(this).selectAll(\"svg\");\n            }\n            else {\n                var svg = d3.select(this).append(\"svg\")\n                    .attr(\"viewBox\", \"0, 0, \" + 50 + \", \" + 47 + \"\")\n                    .classed(\"court\", true);\n            // Append the outer paint rectangle\n                svg.append(\"g\")\n                    .classed(\"court-paint\", true)\n                    .append(\"rect\")\n                    .attr(\"width\", 16)\n                    .attr(\"height\", 19) \n                    .attr(\"x\", 25)\n                    .attr(\"transform\", \"translate(\" + -8 + \",\" + 0 + \")\")\n                    .attr(\"y\", yScale(19));\n                // Append inner paint lines\n                svg.append(\"g\")\n                    .classed(\"inner-court-paint\", true)\n                    .append(\"line\")\n                    .attr(\"x1\", 19)\n                    .attr(\"x2\", 19)\n                    .attr(\"y1\", yScale(19))\n                    .attr(\"y2\", yScale(0));\n                svg.append(\"g\")\n                    .classed(\"inner-court-paint\", true)\n                    .append(\"line\")        \n                    .attr(\"x1\", 31)\n                    .attr(\"x2\", 31)\n                    .attr(\"y1\", yScale(19))\n                    .attr(\"y2\", yScale(0));\n                // Append foul circle\n                // Add clipPaths w/ rectangles to make the 2 semi-circles with our desired styles\n                var dashedFoulCircle = svg.append(\"g\").classed(\"foul-circle dashed\", true);\n                dashedFoulCircle.append(\"defs\").append(\"clipPath\")\n                    .attr(\"id\", \"cut-off-top\")\n                    .append(\"rect\")\n                    .attr(\"width\", 12)\n                    .attr(\"height\", 6) \n                    .attr(\"x\", 25)\n                    .attr(\"y\", yScale(19)) // 47-19 (top of rectangle is pinned to foul line, which is at 19 ft)\n                    .attr(\"transform\", \"translate(\" + -6 + \",\" + 0 + \")\");\n                dashedFoulCircle.append(\"circle\")\n                    .attr(\"cx\", 25)\n                    .attr(\"cy\", yScale(19)) // 47-19\n                    .attr(\"r\", 6)\n                    .attr(\"stroke-dasharray\", 1 + \",\" + 1)\n                    .attr(\"clip-path\", \"url(#cut-off-top)\");\n                var solidFoulCircle = svg.append(\"g\").classed(\"foul-circle solid\", true);\n                solidFoulCircle.append(\"defs\").append(\"clipPath\")\n                    .attr(\"id\", \"cut-off-bottom\")\n                    .append(\"rect\")\n                    .attr(\"width\", 12)\n                    .attr(\"height\", 6) \n                    .attr(\"x\", 25)\n                    .attr(\"y\", yScale(19)) /*foul line is 19 feet, then transform by 6 feet (circle radius) to pin rectangle above foul line..clip paths only render the parts of the circle that are in the rectangle path */\n                    .attr(\"transform\", \"translate(\" + -6 + \",\" + -6 + \")\");\n                solidFoulCircle.append(\"circle\")\n                    .attr(\"cx\", 25)\n                    .attr(\"cy\", yScale(19))\n                    .attr(\"r\", 6)\n                    .attr(\"clip-path\", \"url(#cut-off-bottom)\");\n                // Add backboard and rim\n                svg.append(\"g\").classed(\"backboard\", true)\n                    .append(\"line\")        \n                    .attr(\"x1\", 22)\n                    .attr(\"x2\", 28)\n                    .attr(\"y1\", yScale(4)) // 47-4\n                    .attr(\"y2\", yScale(4)); // 47-4\n                svg.append(\"g\").classed(\"rim\", true)\n                    .append(\"circle\")\n                    .attr(\"cx\", 25)\n                    .attr(\"cy\", yScale(4.75)) // 47-4.75 need to set center point of circle to be 'r' above backboard\n                    .attr(\"r\", .75); //regulation rim is 18 inches\n                // Add restricted area -- a 4ft radius circle from the center of the rim\n                var restrictedArea = svg.append(\"g\").classed(\"restricted-area\", true);\n                restrictedArea.append(\"defs\").append(\"clipPath\")\n                    .attr(\"id\", \"restricted-cut-off\")\n                    .append(\"rect\")\n                    .attr(\"width\", 8) // width is 2r of the circle it's cutting off\n                    .attr(\"height\", 4) // height is 1r of the circle it's cutting off\n                    .attr(\"x\", 25) // center rectangle\n                    .attr(\"y\", yScale(4.75))\n                    .attr(\"transform\", \"translate(\" + -4 + \",\" + -4 + \")\");\n                restrictedArea.append(\"circle\")\n                    .attr(\"cx\", 25)\n                    .attr(\"cy\", yScale(4.75))\n                    .attr(\"r\", 4)\n                    .attr(\"clip-path\", \"url(#restricted-cut-off)\");\n                restrictedArea.append(\"line\")\n                    .attr(\"x1\", 21)\n                    .attr(\"x2\", 21)\n                    .attr(\"y1\", yScale(5.25))\n                    .attr(\"y2\", yScale(4));\n                restrictedArea.append(\"line\")\n                    .attr(\"x1\", 29)\n                    .attr(\"x2\", 29)\n                    .attr(\"y1\", yScale(5.25))\n                    .attr(\"y2\", yScale(4));\n                // Add 3 point arc\n                var threePointArea = svg.append(\"g\").classed(\"three-point-area\", true);\n                threePointArea.append(\"defs\").append(\"clipPath\")\n                    .attr(\"id\", \"three-point-cut-off\")\n                    .append(\"rect\")\n                    .attr(\"width\", 44)\n                    .attr(\"height\", 23.75)\n                    .attr(\"x\", 25)\n                    .attr(\"y\", yScale(4.75)) // put recentagle at centerpoint of circle then translate by the inverse of the circle radius to cut off top half\n                    .attr(\"transform\", \"translate(\" + -22 + \",\" + -23.75 + \")\");                \n                threePointArea.append(\"circle\")\n                    .attr(\"cx\", 25)\n                    .attr(\"cy\", yScale(4.75))\n                    .attr(\"r\", 23.75)\n                    .attr(\"clip-path\", \"url(#three-point-cut-off)\");                   \n                threePointArea.append(\"line\")\n                    .attr(\"x1\", 3)\n                    .attr(\"x2\", 3)\n                    .attr(\"y1\", yScale(14))\n                    .attr(\"y2\", yScale(0));\n                threePointArea.append(\"line\")\n                    .attr(\"x1\", 47)\n                    .attr(\"x2\", 47)\n                    .attr(\"y1\", yScale(14))\n                    .attr(\"y2\", yScale(0)); \n                // Add key lines\n                var keyLines = svg.append(\"g\").classed(\"key-lines\", true);\n                keyLines.append(\"line\")\n                    .attr(\"x1\", 16)\n                    .attr(\"x2\", 17)\n                    .attr(\"y1\", yScale(7))\n                    .attr(\"y2\", yScale(7));\n                keyLines.append(\"line\")\n                    .attr(\"x1\", 16)\n                    .attr(\"x2\", 17)\n                    .attr(\"y1\", yScale(8))\n                    .attr(\"y2\", yScale(8));\n                keyLines.append(\"line\")\n                    .attr(\"x1\", 16)\n                    .attr(\"x2\", 17)\n                    .attr(\"y1\", yScale(11))\n                    .attr(\"y2\", yScale(11));\n                keyLines.append(\"line\")\n                    .attr(\"x1\", 16)\n                    .attr(\"x2\", 17)\n                    .attr(\"y1\", yScale(14))\n                    .attr(\"y2\", yScale(14));\n                keyLines.append(\"line\")\n                    .attr(\"x1\", 33)\n                    .attr(\"x2\", 34)\n                    .attr(\"y1\", yScale(7))\n                    .attr(\"y2\", yScale(7));\n                keyLines.append(\"line\")\n                    .attr(\"x1\", 33)\n                    .attr(\"x2\", 34)\n                    .attr(\"y1\", yScale(8))\n                    .attr(\"y2\", yScale(8));\n                keyLines.append(\"line\")\n                    .attr(\"x1\", 33)\n                    .attr(\"x2\", 34)\n                    .attr(\"y1\", yScale(11))\n                    .attr(\"y2\", yScale(11));\n                keyLines.append(\"line\")\n                    .attr(\"x1\", 33)\n                    .attr(\"x2\", 34)\n                    .attr(\"y1\", yScale(14))\n                    .attr(\"y2\", yScale(14));\n                // Append baseline\n                svg.append(\"g\")\n                    .classed(\"court-baseline\", true)\n                    .append(\"line\")\n                    .attr(\"x1\", 0)\n                    .attr(\"x2\", 50)\n                    .attr(\"y1\", yScale(0))\n                    .attr(\"y2\", yScale(0)); \n\n                svg.append(\"g\").classed(\"shots\", true);\n                \n            };            \n        });\n    };\n\n  court.width = function(_) {\n    if (!arguments.length) return width;\n    width = _;\n    height = .94 * _;\n    return court;\n  };\n\n    return court;\n};","import * as d3 from 'd3';\nimport { hexbin } from 'd3-hexbin'\nimport d3_tip from 'd3-tip'\nwindow.d3_hexbin = {hexbin: hexbin} // workaround library problem\n// import d3_hexbin from 'd3-hexbin';\n// import {hexbin as d3_hexbin} from 'd3-hexbin'\n\nvar activeDisplay = \"scatter\";\nvar activeTheme = \"day\";\n// SCALES USED TO INVERT COURT Y COORDS AND MAP SHOOTING PERCENTAGES OF BINS TO A FILL COLOR \nvar yScale = d3.scaleLinear().domain([0, 47]).rangeRound([47, 0]);\nvar percentFormatter = d3.format(\".2%\");\nvar decFormatter = d3.format(\".3n\");\n\nexport default function() {\n    \n    var hexRadiusValues = [.8, 1.0, 1.2],\n        hexMinShotThreshold = 1,\n        heatScale = d3.scaleQuantize().domain([0.3, 1.5]).range(['#5458A2', '#6689BB', '#FADC97', '#F08460', '#B02B48']),\n        hexRadiusScale = d3.scaleQuantize().domain([0, 2]).range(hexRadiusValues),\n        toolTips = false\n    \n    var    hexbin1 = hexbin()\n                .radius(1.2)\n                .x(function(d) { return d.key[0]; }) // accessing the x, y coords from the nested json key\n                .y(function(d) { return yScale(d.key[1]); });        \n    \n    var _nestShotsByLocation = function(data) {\n        var nestedData = d3.nest()\n            .key(function(d) {\n                return [d.x, d.y];\n            })\n            .rollup(function(v) { return {\n                \"made\": d3.sum(v, function(d) { return d.shot_made_flag }),\n                \"points\": d3.sum(v, function(d) { return d.shot_pts }),\n\n                \"attempts\": v.length,\n                \"pps\":  d3.sum(v, function(d) { return d.shot_pts })/v.length,\n                \"shootingPercentage\":  d3.sum(v, function(d) { return d.shot_made_flag })/v.length\n\n            }})\n            .entries(data);\n        // change to use a string split and force cast to int\n        nestedData.forEach(function(a){\n            a.key = JSON.parse(\"[\" + a.key + \"]\");\n        });\n\n        return nestedData;\n    };\n\n    var _getHexBinShootingStats = function(data, index) {\n        var attempts = d3.sum(data, function(d) { return d.value.attempts; })\n        var makes = d3.sum(data, function(d) { return d.value.made; })\n        var points =  d3.sum(data, function(d) { return d.value.points; })\n\n        var shootingPercentage = makes/attempts;\n        \n        var pps = points/attempts;\n        data.shootingPercentage = shootingPercentage;\n        data.pps = pps;\n\n        data.attempts = attempts;\n        data.makes = makes;\n        return data;\n    };\n    \n\n    function shots(selection){\n\n        selection.each(function(data){\n\n            var shotsGroup = d3.select(this).select(\"svg\").select(\".shots\"),\n                legends = d3.select(this).select(\"#legends\"),\n                nestedData = _nestShotsByLocation(data),\n                hexBinCoords = hexbin1(nestedData).map(_getHexBinShootingStats);\n\n            if (activeDisplay === \"scatter\"){\n                if (legends.empty() === false){\n                    legends.remove();\n                }\n                \n                var shots = shotsGroup.selectAll(\".shot\")\n                                    .data(data, function(d){ return [d.x, d.y]; });\n                shots.exit()\n                    .transition().duration(1000)\n                    .attr(\"r\", 0)\n                    .attr(\"d\", hexbin1.hexagon(0))\n                    .remove();\n\n                if (toolTips) {\n                    var tool_tip = d3_tip()\n                      .attr(\"class\", \"d3-tip\")\n                      .offset([-8, 0])\n                      .html(function(d) { \n                            return d.player + \"<br><br/>\" + d.shot_distance + \"' \" + d.action_type; \n                        });\n                    \n                    shotsGroup.call(tool_tip);\n                }\n\n                shots.enter()\n                    .append(\"circle\")\n                    .classed(\"shot\", true)\n                    .classed(\"make\", function(d){\n                          return d.shot_made_flag === 1; // used to set fill color to green if it's a made shot\n                    })\n                    .classed(\"miss\", function(d){\n                          return d.shot_made_flag === 0; // used to set fill color to red if it's a miss\n                    })\n                    .attr(\"cx\", function(d) { return d.x; })\n                    .attr(\"cy\", function(d) { return yScale(d.y); })\n                    .attr(\"r\", 0)\n                    .on('mouseover', function(d) { if (toolTips) {tool_tip.show(d,this);} })\n                    .on('mouseout', function(d) { if (toolTips) {tool_tip.hide(d,this);} })\n                    .transition().duration(1000)\n                    .attr(\"r\", .5);\n                \n            }\n            else if (activeDisplay === \"hexbin\"){\n\n                var shots = shotsGroup.selectAll(\".shot\")\n                                    .data(hexBinCoords, function(d){ return [d.x, d.y]; });\n\n                shots.exit()\n                    .transition().duration(1000)\n                    .attr(\"r\", 0)\n                    .attr(\"d\", hexbin1.hexagon(0))                \n                    .remove();\n                \n                if (toolTips) {\n                    var tool_tip = d3_tip()\n                      .attr(\"class\", \"d3-tip\")\n                      .offset([-8, 0])\n                      .html(function(d) { \n                            return d.makes + \" / \" + d.attempts +\" (\"+ percentFormatter(d.shootingPercentage) + \")\" + \"<br><br/>PPS: \" + decFormatter(d.pps) ; \n                            // return d.makes + \" / \" + d.attempts + \" (\"+ d.shootingPercentage + \")\"; \n\n                        });\n                    \n                    shotsGroup.call(tool_tip);\n                }\n\n                shots.enter()                \n                    .append(\"path\")\n                    .classed(\"shot\", true)\n                    .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; })\n                    .attr(\"d\", hexbin1.hexagon(0))\n                    .on('mouseover', function(d) { if (toolTips) {tool_tip.show(d,this);} })\n                    .on('mouseout', function(d) { if (toolTips) {tool_tip.hide(d,this);} })\n                    .transition().duration(1000)\n                    .attr(\"d\", function(d) { \n                                if (d.length >= hexMinShotThreshold) {\n                                    if (d.length <= 4){\n                                        return hexbin1.hexagon(hexRadiusScale(0));\n                                    }\n                                    else if (4 < d.length && d.length <= 10){\n                                        return hexbin1.hexagon(hexRadiusScale(1));\n                                    }\n                                    else {\n                                        return hexbin1.hexagon(hexRadiusScale(2));\n                                    }\n                                } \n                            })\n                    .style(\"fill\", function(d) { return heatScale(d.pps); });\n                \n                // CHANGE TO USE SELECTION.EMPTY()\n                if (legends.empty() === true){\n                    var legendSVG = d3.select(this).append('svg').attr(\"viewBox\", \"0, 0, \" + 50 + \", \" + 10 + \"\").attr('id', 'legends'),\n                        efficiencyLegend = legendSVG.append('g').classed('legend', true),\n                        frequencyLegend = legendSVG.append('g').classed('legend', true)\n                                                            .classed('frequency', true),\n                        frequencyLegendXStart = 7;\n\n                    efficiencyLegend.append(\"text\")\n                                    .classed('legend-text', true)\n                                    .attr(\"x\", 40)             \n                                    .attr(\"y\", 5)\n                                    .attr(\"text-anchor\", \"middle\") \n                                    .text(\"Efficiency (PPS)\");\n                    efficiencyLegend.append(\"text\")\n                                    .classed(\"legend-text\", true)\n                                    .attr(\"x\", 34.25)             \n                                    .attr(\"y\", 2.5)\n                                    .attr(\"text-anchor\", \"end\") \n                                    .text(\"cold\");\n                    efficiencyLegend.append(\"text\")\n                                    .classed(\"legend-text\", true)\n                                    .attr(\"x\", 45.75)             \n                                    .attr(\"y\", 2.5)\n                                    .attr(\"text-anchor\", \"start\") \n                                    .text(\"hot\");\n                    efficiencyLegend.selectAll('path').data(heatScale.range())\n                                    .enter()\n                                    .append('path')\n                                    .attr(\"transform\", function (d, i) {\n                                      return \"translate(\" + \n                                        (35 + ((1 + i*2) * 1)) + \", \" + 2 + \")\";\n                                    })\n                                    .attr('d', hexbin1.hexagon(0))\n                                    .transition().duration(1000)\n                                    .attr('d', hexbin1.hexagon(1))\n                                    .style('fill', function (d) { return d; });\n                    efficiencyLegend.selectAll(\"text\").style(\"fill\", function(){ \n                                        if (activeTheme === \"night\"){ return \"white\"; }\n                                        else if (activeTheme === \"day\"){ return \"black\"; };\n                                    });\n                    \n                    frequencyLegend.append(\"text\")\n                                    .classed('legend-text', true)\n                                    .attr(\"x\", 10.25)             \n                                    .attr(\"y\", 5)\n                                    .attr(\"text-anchor\", \"middle\")  \n                                    .text(\"Frequency\");\n                    frequencyLegend.append(\"text\")\n                                    .classed(\"legend-text\", true)\n                                    .attr(\"x\", 6.25)             \n                                    .attr(\"y\", 2.5)\n                                    .attr(\"text-anchor\", \"end\")  \n                                    .text(\"low\");\n                    frequencyLegend.selectAll('path').data(hexRadiusValues)\n                                    .enter()\n                                    .append('path')\n                                    .attr(\"transform\", function (d, i) {\n                                        frequencyLegendXStart += d * 2;\n                                        return \"translate(\" + (frequencyLegendXStart - d) + \", \" + 2 + \")\";\n                                    })\n                                    .attr('d', hexbin1.hexagon(0))\n                                    .transition().duration(1000)\n                                    .attr('d', function (d) { return hexbin1.hexagon(d); })\n                    frequencyLegend.append(\"text\")\n                                    .classed(\"legend-text\", true)\n                                    .attr(\"x\", 13.75)             \n                                    .attr(\"y\", 2.5)\n                                    .attr(\"text-anchor\", \"start\")  \n                                    .text(\"high\");\n                    \n                    frequencyLegend.selectAll(\"text\").style(\"fill\", function(){ \n                                        if (activeTheme === \"night\"){ return \"white\"; }\n                                        else if (activeTheme === \"day\"){ return \"black\"; };\n                                    })\n                    frequencyLegend.selectAll(\"path\").style(\"fill\", function(){ \n                                        if (activeTheme === \"night\"){ return \"none\"; }\n                                        else if (activeTheme === \"day\"){ return \"grey\"; };\n                                    });\n                };                                                      \n            };\n        });\n    };\n  \n  shots.displayType = function(_) {\n    if (!arguments.length) return activeDisplay;\n    activeDisplay = _;\n    return shots;\n  };\n  \n  shots.shotRenderThreshold = function(_) {\n    if (!arguments.length) return hexMinShotThreshold;\n    hexMinShotThreshold = _;\n    return shots;\n  }; \n  \n  shots.displayToolTips = function(_) {\n    if (!arguments.length) return toolTips;\n    toolTips = _;\n    return shots;\n  };\n\n  shots.theme = function(_) {\n    if (!arguments.length) return activeTheme;\n    activeTheme = _;\n    return shots;\n  };\n\n\n    return shots;\n};","import React from 'react'\r\n// import nba from 'nba'\r\nimport * as d3 from 'd3'\r\nimport { hexbin } from 'd3-hexbin'\r\n// import { court, shots } from 'd3-shotchart'\r\nimport PropTypes from 'prop-types'\r\nimport court from \"../shotchart/court\"\r\nimport shots from \"../shotchart/shots\"\r\n\r\n\r\nimport sc from '../css/ShotChart.css'\r\n\r\nwindow.d3_hexbin = {hexbin: hexbin} // workaround library problem\r\n\r\nexport class ShotChart extends React.Component {\r\n  static propTypes = {\r\n    playerId: PropTypes.number,\r\n    minCount: PropTypes.number,\r\n    chartType: PropTypes.string,\r\n    displayToolTips: PropTypes.bool,\r\n  }\r\n\r\n  componentDidUpdate() {\r\n\tconsole.log(\"ShotChart ToolTips: \", this.props.displayToolTips)\r\n\t\r\n\t\tvar final_shots =[ \r\n\t\t\t{\r\n\t\t\t\"x\": (226+ 250) / 10,\r\n\t\t\t\"y\": (90 + 50) / 10,\r\n\t\t\t\"action_type\": \"Jump Shot\",\r\n\t\t\t\"shot_distance\": 24,\r\n\t\t\t\"shot_made_flag\":1\r\n\t\t\t},\r\n\t\t\t{\r\n\t\r\n\t\t\t\t\"x\": (-166+ 250) / 10,\r\n\t\t\t\t\"y\": (231 + 50) / 10,\r\n\t\t\t\t\"action_type\": \"Jump Shot\",\r\n\t\t\t\t\"shot_distance\": 28,\r\n\t\t\t\t\"shot_made_flag\":1\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"x\": (-2+ 250) / 10,\r\n\t\t\t\t\t\"y\":  (63 + 50) / 10,\r\n\t\t\t\t\t\"action_type\": \"Jump Shot\",\r\n\t\t\t\t\t\"shot_distance\": 6,\r\n\t\t\t\t\t\"shot_made_flag\":1\r\n\t\t\t\t\t}\r\n\t\t]\r\n\t\r\n\tfinal_shots = this.props.data\r\n\tconst namee = this.props.namee\r\n\t\r\n\t\t// this.props.data\r\n\r\n\tconst courtSelection = d3.select(\"#shot-chart\"+namee)\r\n\t// without this line, all updates on court would be ineffect only after changing chartType\r\n\tcourtSelection.html('')\r\n\tconst chart_court = court().width(this.props.width)\r\n\tconst chart_shots = shots()\r\n\t\t\t\t\t\t.shotRenderThreshold(this.props.minCount)\r\n\t\t\t\t\t\t.displayToolTips(this.props.displayToolTips)\r\n\t\t\t\t\t\t.displayType(this.props.chartType)\r\n\t// selection.call always return the selection and not the return value of function passed in\r\n\tcourtSelection.call(chart_court)\r\n\tcourtSelection.datum(final_shots).call(chart_shots)\r\n    \r\n  }\r\n  render() {\r\n    return (\r\n      <div id={\"shot-chart\"+this.props.namee} className=\"sc\" ></div>\r\n    );\r\n  }\r\n}\r\nexport default ShotChart\r\n\r\n// SHOT_ZONE\tFGM\t        FGA\t        FG%\t    PPS\r\n// 5\tRA\t    45574.0\t    72427.0\t    0.629\t1.258\r\n// 0\tATB3\t21061.0\t    60285.0\t    0.349\t1.048\r\n// 4\tPAINT\t14177.0\t    35122.0\t    0.404\t0.807\r\n// 3\tMR\t    13404.0\t    33275.0\t    0.403\t0.807\r\n// 2\tLC3\t    3519.0\t    9112.0\t    0.386\t1.159\r\n// 6\tRC3\t    3313.0\t    8771.0\t    0.378\t1.133\r\n// 1\tBCOURT\t14.0\t    466.0\t    0.030\t0.090","\r\nimport React, { Component } from 'react'\r\n// import '../css/global.css'\r\n// import { scaleLinear } from \"d3-scale\"\r\nimport { max } from 'd3-array'\r\nimport { select } from 'd3-selection'\r\nimport * as d3 from \"d3\";\r\nimport { range } from 'd3-array';\r\nimport { scaleBand, scaleLinear, scaleOrdinal } from 'd3-scale';\r\n\r\n// import Axis from \"../components/AxisRange\"\r\nimport Axis from \"../components/AxisScatter\"\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Handle extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            handle: '',\r\n            h1: 2,\r\n            h2: 3,\r\n            tempH1: null,\r\n            tempH2: null,\r\n            trueYear1: null,\r\n            trueYear2:null\r\n        }\r\n        // this.handleClick = this.handleClick.bind(this);\r\n    }\r\n    onMouseOver() {\r\n        this.setState({\r\n            handle: this.props.handle\r\n\r\n        });\r\n    }\r\n    render() {\r\n        const { initialValue,other, xScale, handle } = this.props;\r\n        // const circle = <circle className=\"handleCircle\" r=\"10px\" fill=\"#fa7070\" />\r\n        const circle = <circle  r=\"10px\"  />\r\n\r\n\r\n        return  <g className={handle} transform={`translate(${xScale(initialValue)},0)` }\r\n                    onMouseOver={this.onMouseOver.bind(this)}   style={{fill:\"#fa7070\"}}   >\r\n                    \r\n                    {circle}\r\n\r\n                        </g>\r\n\r\n\r\n    }\r\n\r\n          componentDidUpdate(prevProps, prevState) {\r\n        // let {margins,data,svgDimensions,onChangeYear,initialValue} = prevProps;\r\n        let {handle,margins,data,svgDimensions,onChangeYear,xScale,initialValue, other} = this.props;\r\n\r\n        // let { margins,data, svgDimensions, xScale, onChangeYear } = prevProps;\r\n\r\n\r\n        // const minData = d3.min(data), maxData = d3.max(data)\r\n\r\n    \r\n\r\n        var h1 = xScale(initialValue);\r\n        var h2 = xScale(other);   \r\n        var tempH1 = xScale(initialValue);\r\n        var tempH2 = xScale(other);   \r\n        var trueH1 = initialValue \r\n        var trueH2 = other  \r\n\r\n\r\n        let mouseValue, trueMouseValue, self = this;\r\n        // let handle = this.props.handle;\r\n        let minWidth = 10//((window.screen.width/2 - margins.left - margins.right)/5);\r\n        // let minWidth = ((window.screen.width/2 - margins.left - margins.right)/10);\r\n\r\n\r\n        const drag = d3.drag()\r\n            .on(\"drag\", draged).on(\"end\", dragend);\r\n\r\n        d3.select(\".rangeSliderGroup\"+handle).call(drag);\r\n\r\n        function draged() {\r\n            mouseValue = d3.mouse(this)[0];\r\n            trueMouseValue = getTrueMouseValue(mouseValue);\r\n\r\n            handle === \"handle2\" ? h2 = mouseValue : h1 = mouseValue;\r\n\r\n            if (mouseValue > margins.left && mouseValue < (svgDimensions.width - margins.right)) {\r\n\r\n                d3.select(\".\" + handle).attr(\"transform\", \"translate(\" + mouseValue + \",0)\");\r\n\r\n                tempH1 = mouseValue;\r\n                trueH1 = trueMouseValue;\r\n            }\r\n            else {\r\n                h1 = tempH1;\r\n                h2 = tempH2;\r\n                trueMouseValue = trueH1;\r\n            }\r\n\r\n\r\n        }\r\n        function dragend() {\r\n            h1 = xScale(getTrueMouseValue(tempH1));\r\n            // h2 = xScale(getTrueMouseValue(tempH2));\r\n            if (handle === \"\") {\r\n                \r\n            }\r\n            else {\r\n                // d3.select(\".\" + handle).attr(\"transform\", \"translate(\" + xScale(trueMouseValue) + \",0)\");\r\n\r\n                // onChangeYear(trueH1);\r\n\r\n            }\r\n            onChangeYear(trueH1);\r\n\r\n\r\n        }\r\n        function getTrueMouseValue(mouseValue) {\r\n            // const a = xScale.invert(mouseValue) * 10\r\n            // return Math.round(a) / 10;\r\n\r\n\r\n            const a = xScale.invert(mouseValue) \r\n            return Math.round(a) ;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst SingleSlider = ({ data, onChangeYear, left, right,width,height,handle,label }) => {\r\n    const margins = { top: 0, right: 30, bottom: 0, left: 30 },\r\n        svgDimensions = { width: width, height: width };\r\n\r\n    const minData = d3.min(data), maxData = d3.max(data)\r\n\r\n    const xScale = d3.scaleLinear()\r\n        .domain([0, maxData])\r\n        .range([margins.left, svgDimensions.width - margins.right])\r\n        .clamp(true);\r\n\r\n    const i1 = left, i2 = right\r\n\r\n    const RangeBar = <line x1={margins.left} y1=\"0\" x2={svgDimensions.width - margins.right} y2=\"0\" className=\"rangeBar\" />\r\n    // const RangeBarFilled = <line x1={xScale(i1)} y1=\"0\" x2={xScale(i2)} y2=\"0\" className=\"rangeBarFilled\" />\r\n    const xScale2 = d3\r\n      .scaleLinear()\r\n      .domain([0, maxData])\r\n      .range([margins.left, svgDimensions.width - margins.right])\r\n\r\n\r\n\r\n\r\n    // return  (\r\n    //     <g transform={`translate(${50}, ${50})`}>\r\n    //       {/* {data.map(([x, y]) => datapoint({ x: xScale(x), y: yScale(y) }))} */}\r\n    //       {/* <Axis x={0} y={0} scale={yScale} type=\"Left\" /> */}\r\n    //        {RangeBar}\r\n    //        {/* {RangeBarFilled} */}\r\n    //       <Axis x={0} y={200} scale={xScale2} type=\"Bottom\" />\r\n\r\n    //         {/* <Handle onChangeYear={onChangeYear} handle=\"handle1\" initialValue={i1} other={i2} data={data} xScale={xScale} margins={margins} svgDimensions={svgDimensions} />  */}\r\n    //         {/* <Handle onChangeYear={onChangeYear} handle=\"handle2\" initialValue={i2} other={i1}  data={data} xScale={xScale} margins={margins} svgDimensions={svgDimensions} /> */}\r\n\r\n    //     </g>\r\n    //   );\r\n    // return <div>dsadasd</div>\r\n\r\n\r\n              \r\nreturn     <svg width={width} height={height} >\r\n                <g className={\"rangeSliderGroup\"+handle} transform={`translate(0,${20})`}>\r\n                <Axis x={0} y={0} scale={xScale2} label={label} type=\"Bottom\" />\r\n                {/* {RangeBar} */}\r\n                {/* {RangeBarFilled} */}\r\n                {/* <Axis margins={margins} svgDimensions={svgDimensions} xScale={xScale} data={data}/> */}\r\n                    {/* <Axis {...yProps}/> */}\r\n                    <Handle onChangeYear={onChangeYear} handle={handle}  initialValue={i1}  data={data} xScale={xScale} margins={margins} svgDimensions={svgDimensions} />\r\n                    {/* <Handle onChangeYear={onChangeYear} handle=\"handle2\" initialValue={i2} other={i1}  data={data} xScale={xScale} margins={margins} svgDimensions={svgDimensions} /> */}\r\n                </g>\r\n    </svg>;\r\n             \r\n\r\n\r\n\r\n    \r\n\r\n//     return <svg className=\"rangeSliderSvg\" width={svgDimensions.width} height={svgDimensions.height}>\r\n//     <g className=\"rangeSliderGroup\" transform={`translate(0,${svgDimensions.height - margins.bottom - 40})`}>\r\n//        {RangeBar}{RangeBarFilled}\r\n//        {/* <Axis margins={margins} svgDimensions={svgDimensions} xScale={xScale} data={data}/> */}\r\n\r\n//         {/* <Axis {...yProps}/> */}\r\n//         <Handle onChangeYear={onChangeYear} handle=\"handle1\" initialValue={i1} other={i2} data={data} xScale={xScale} margins={margins} svgDimensions={svgDimensions} />\r\n//         <Handle onChangeYear={onChangeYear} handle=\"handle2\" initialValue={i2} other={i1}  data={data} xScale={xScale} margins={margins} svgDimensions={svgDimensions} />\r\n//     </g>\r\n// </svg>;\r\n            \r\n    // return \r\n    //         <svg className=\"rangeSliderSvg\" width={svgDimensions.width} height={svgDimensions.height}>\r\n    //             <g className=\"rangeSliderGroup\" transform={`translate(0,${svgDimensions.height - margins.bottom - 40})`}>\r\n    //                 {/* {RangeBar}{RangeBarFilled} */}\r\n    //                 {/* <Axis margins={margins} svgDimensions={svgDimensions} xScale={xScale} /> */}\r\n    //                 {/* <Handle handle=\"handle1\" initialValue={i1} other={i2}  />\r\n    //                 <Handle handle=\"handle2\" initialValue={i2} other={i1}  /> */}\r\n\r\n    //                 <Handle onChangeYear={onChangeYear} handle=\"handle1\" initialValue={i1} other={i2} data={data} xScale={xScale} margins={margins} svgDimensions={svgDimensions} />\r\n    //                 <Handle onChangeYear={onChangeYear} handle=\"handle2\" initialValue={i2} other={i1}  data={data} xScale={xScale} margins={margins} svgDimensions={svgDimensions} />\r\n    //             </g>\r\n    //         </svg>;\r\n}\r\n/********************* RangeSlider end ***************************/\r\nexport default SingleSlider;","\r\nimport React, { Component } from 'react';\r\n\r\nimport { Responsive as ResponsiveGridLayout } from 'react-grid-layout';\r\nimport { WidthProvider} from \"react-grid-layout\";\r\n\r\n\r\n\r\n\r\n\r\nimport BarChart from '../graphs/BarChart'\r\nimport { CONFIG } from '../config.js';\r\nimport * as d3 from \"d3\";\r\nimport axios from 'axios'\r\nimport Dropdown from '../components/Dropdown';\r\nimport MultiDropdown from '../components/MultiDropdown';\r\nimport Scatterplot from \"../graphs/Scatterplot\"\r\n// import BarChart from \"../graphs/BarChart\"\r\n\r\nimport Datapoint from \"../components/Datapoint\"\r\nimport RangeSlider from \"../components/RangeSlider\"\r\nimport SingleSlider from \"../components/singleSlider\"\r\nimport VertSlider from \"../components/VertSlider\"\r\n\r\n// import Shotchart from \"../graphs/Shotchart\"\r\nimport Shotchart from \"../graphs/myShotChart\"\r\n\r\nimport {Container,Col,Row} from 'react-bootstrap'\r\n\r\nconst ResponsiveReactGridLayout = WidthProvider(ResponsiveGridLayout );\r\nconst originalLayouts = getFromLS(\"layouts\") || {};\r\n\r\n\r\nclass Main1 extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tplayers: [],\r\n\t\t\tuniqList: [],\r\n\t\t\twholePts: [],\r\n\t\t\twholeAst: [],\r\n\t\t\ttest: [],\r\n\t\t\tresponse: [],\r\n\t\t\tbardata: [12, 25, 6, 6, 9, 10],\r\n\r\n\t\t\tid: \"root\",\r\n\t\t\terror: null,\r\n\t\t\tisLoaded: false,\r\n\t\t\tfnames: [],\r\n\t\t\t// data: d3.range(100).map(_ => [Math.random(), Math.random()]),\r\n\t\t\tdata: [[0.1, 0.2], [0.3, 0.2], [4, 2], [4, 1]],\r\n\t\t\tminCount: 2,\r\n\t\t\t// chartType: 'scatter' ,//'hexbin', // 'scatter'\r\n\t\t\tchartType: 'hexbin', // 'scatter'\r\n\r\n\t\t\tdisplayToolTips: true,\r\n\r\n\t\t\tisToggleOn: true,\r\n\r\n\r\n\t\t\tleft: 0,\r\n\t\t\tright: 35,\r\n\r\n\t\t\tdistL: 0,\r\n\t\t\tdistR: 35,\r\n\r\n\t\t\tdist2L: 0,\r\n\t\t\tdist2R: 35,\r\n\r\n\t\t};\r\n\t\tthis.handleClick = this.handleClick.bind(this);\r\n\r\n\t}\r\n\r\n\r\n\r\n\tcomponentDidMount() {\r\n\r\n\t\tconst racesRequest = axios.get(CONFIG.SHOTS)\r\n\t\t\t.then(response =>\r\n\t\t\t\tresponse.data\r\n\t\t\t).then(players => this.setDefault(players))\r\n\r\n\t}\r\n\r\n\tsetDefault = (players) => {\r\n\r\n\t\tplayers.map(i => i.firstname = \"Nepal\");\r\n\t\tplayers.map(i => i.key = \"players\");\r\n\r\n\t\t// players.map((p, i) => {\r\n\t\t// \tif (p.PLAYER_NAME === \"Stephen Curry\") { p[\"selectedP1\"] = true; }\r\n\t\t// })\r\n\t\t// players.map((p, i) => {\r\n\t\t// \tif (p.PLAYER_NAME === \"Giannis\") { p[\"selectedP2\"] = true; }\r\n\t\t// })\r\n\t\tplayers.map((p, i) => p.id = p.PLAYER_ID);\r\n\t\tplayers.map((p, i) => p.shotid = i);\r\n\r\n        const uniqNames = [...new Set(players.map(d => d.PLAYER_NAME))]\r\n\r\n\t\tthis.setState({ players: players })\r\n\r\n\r\n\r\n\t\t//\r\n\t\tvar uniqIds = [...new Set(players.map(d => d.PLAYER_ID))]\r\n\t\tvar uniqList = players.map((p, index) => ({\r\n\t\t\toption: p[\"PLAYER_NAME\"],\r\n\t\t\tid: p[\"PLAYER_ID\"],\r\n\t\t\tselectedP1: false,\r\n\t\t\tselectedP2: false,\r\n\t\t\tkey: \"players\"\r\n\t\t}))\r\n\r\n\t\tuniqList = uniqList.filter((item, index) => uniqIds.includes(item.id))\r\n\t\t// uniqList = uniqList.filter((item,index)=> uniqList.id.indexOf(item.id)===index)                                           \r\n\t\tuniqList = uniqList.filter((uniqList, index, self) =>\r\n\t\t\tindex === self.findIndex((t) => (t.id === uniqList.id)))\r\n\r\n\t\tuniqList.map((p, i) => p.listid = i);\r\n\r\n\t\tthis.setState({ uniqList: uniqList })\r\n\r\n\r\n\t}\r\n\r\n\tresetThenSet = (value, key) => {\r\n\t\tlet data = [...this.state[key]];\r\n\t\tdata.forEach(item => item.selected = false);\r\n\t\tdata[value].selected = true;\r\n\r\n\r\n\t\tthis.setState({ key: data });\r\n\r\n\t}\r\n\r\n\tfilterAndSort_Laps = (selectedRace, selectedSeason, laptimes, filtQ) => {\r\n\r\n\t\tvar filtered = laptimes.filter(d => (d.raceName === selectedRace.raceName && d.season === selectedSeason.season))\r\n\t\treturn filtered\r\n\r\n\t}\r\n\r\n\r\n\ttoggleSelected = (id, key,uniqList,listid,selCol) => {\r\n\r\n\r\n\t\tlet temp = JSON.parse(JSON.stringify(this.state[key]))\r\n\r\n\t\ttemp.forEach(function myFunction(item, index, arr) {\r\n\t\t\t// arr[index] = item * 10;\r\n\t\t\tif (arr[index].id === id) {\r\n\t\t\t\t// temp[index].selected = !temp[index].selected\r\n\t\t\t\ttemp[index][selCol]= !temp[index][selCol]\r\n\r\n\t\t\t}\r\n\r\n\t\t})\r\n\r\n\r\n\t\tuniqList[listid][selCol] = !uniqList[listid][selCol]\r\n\t\tthis.setState({\r\n\t\t\t[key]: temp\r\n\t\t})\r\n\t}\r\n\r\n\thandleDistChange(x, y) {\r\n\t\tthis.setState({\r\n\t\t\tdistL: x,\r\n\t\t\tdistR: y\r\n\r\n\t\t})\r\n\t}\r\n\thandleDistChange2(x, y) {\r\n\t\tthis.setState({\r\n\t\t\tdist2L: x,\r\n\t\t\tdist2R: y\r\n\r\n\t\t})\r\n\t}\r\n\thandleChangeYear1(year1, year2) {\r\n\t\tthis.setState({\r\n\t\t\tleft2: year1,\r\n\t\t\tright2: year2,\r\n\r\n\t\t})\r\n\t}\r\n\r\n\t// handleDistChange1(year1, year2) {\r\n\t// \tthis.setState({\r\n\t// \t\tleft: year1,\r\n\t// \t\tright: year2,\r\n\r\n\t// \t})\r\n\t// }\r\n\r\n\r\n\thandleMinDist(x) {\r\n\t\tthis.setState({\r\n\t\t\tleft: x,\r\n\r\n\t\t})\r\n\t}\r\n\r\n\thandleBinChange(x) {\r\n\t\tthis.setState({\r\n\t\t\tminCount: x\r\n\t\t})\r\n\t}\r\n\thandleClick() {\r\n\t\t// let {margins,data,svgDimensions,onChangeYear,xScale,initialValue, other} = prevProps;\r\n\t\t// let {margins,data,svgDimensions,onChangeYear,xScale,initialValue, other} = this.props;\r\n\t\tif (this.state.isToggleOn === true) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tisToggleOn: !this.state.isToggleOn,\r\n\t\t\t\tchartType: 'scatter'\r\n\t\t\t})\r\n\t\t}\r\n\t\telse if (this.state.isToggleOn === false) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tisToggleOn: !this.state.isToggleOn,\r\n\t\t\t\tchartType: 'hexbin'\r\n\r\n\t\t\t})\r\n\t\t}\r\n\r\n\r\n\r\n\r\n    }\r\n    \r\n    resetLayout() {\r\n        this.setState({ layouts: {} });\r\n      }\r\n    \r\n      onLayoutChange(layout, layouts) {\r\n        saveToLS(\"layouts\", layouts);\r\n        this.setState({ layouts });\r\n      }\r\n    \r\n\r\n\r\n\trender() {\r\n\r\n\t\t// const names = this.state.players.map(post => post.firstname)\r\n\t\tconst { fnames, players, uniqList } = this.state\r\n\r\n\t\t// var uniqIds = [...new Set(players.map(d => d.PLAYER_ID))]\r\n\t\t// var uniqList = players.map((p, index) => ({\r\n\t\t// \toption: p[\"PLAYER_NAME\"],\r\n\t\t// \tid: p[\"PLAYER_ID\"],\r\n\t\t// \tselected: false,\r\n\t\t// \tkey: \"players\"\r\n\t\t// }))\r\n\r\n\t\t// uniqList = uniqList.filter((item, index) => uniqIds.includes(item.id))\r\n\t\t// // uniqList = uniqList.filter((item,index)=> uniqList.id.indexOf(item.id)===index)                                           \r\n\t\t// uniqList = uniqList.filter((uniqList, index, self) =>\r\n\t\t// \tindex === self.findIndex((t) => (t.id === uniqList.id)))\r\n\r\n\t\t// uniqList.map((p, i) => p.listid = i);\r\n\r\n\r\n\r\n\r\n\t\tvar ab = players.filter((p) => (p[\"selectedP1\"] === true))\r\n\r\n\r\n\t\tab = ab.filter((p) => (p.SHOT_DIST >= this.state.distL) && (p.SHOT_DIST <= this.state.distR))\r\n\r\n\t\t// ab = ab.filter((p) => (((p.LOC_X+250)/10) >= this.state.distL) && (((p.LOC_X+250)/10) <= this.state.right1))\r\n\t\t// ab = ab.filter((p) => (((p.LOC_Y+50)/10) >= this.state.left2) && (((p.LOC_Y+50)/10) <= this.state.right2))\r\n\r\n\r\n\r\n\t\t// const pts = ab.map(post => (post.SHOT_DIST))\r\n\r\n\t\tvar dist = players.map(post => (post.SHOT_DIST))\r\n\t\tvar wholeAst = players.map(p => ((p.LOC_X+250)/10))\r\n\t\tvar wholePts = players.map(p => (p.LOC_Y+50)/10)\r\n\r\n\r\n\t\tvar xloc = ab.map(post => (post.LOC_X))\r\n\t\tvar yloc = ab.map(post => (post.LOC_Y))\r\n\r\n\r\n\t\t// xloc.unshift(20)\r\n\t\t// xloc.unshift(300)\r\n\t\t// yloc.unshift(20)\r\n\t\t// yloc.unshift(300)\r\n\r\n\r\n\t\tvar abc = ab.map((shot, index) => ({\r\n\t\t\tplayer: shot.PLAYER_NAME,\r\n\t\t\tx: (shot.LOC_X + 250) / 10,\r\n\t\t\ty: (shot.LOC_Y + 50) / 10,\r\n\t\t\taction_type: shot.SHOT_TYPE,\r\n\t\t\tshot_distance: shot.SHOT_DIST,\r\n\t\t\tshot_made_flag: shot.FGM,\r\n\t\t\tshot_value: shot.SHOT_VALUE,\r\n\t\t\tshot_pts: shot.SHOT_PTS,\r\n\t\t\tshot_zone: shot.SHOT_ZONE,\r\n\t\t\tshot_area: shot.SHOT_AREA,\r\n\t\t\tscore_margin: shot.SCORE_DIFF\r\n\r\n        }))\r\n  \r\n\t\t\r\n\t\tdeff = players.filter((p) => (p[\"selectedP2\"] === true))\r\n\t\tdeff = deff.filter((p) => (p.SHOT_DIST >= this.state.dist2L) && (p.SHOT_DIST <= this.state.dist2R))\r\n\t\t\r\n\r\n        var deff = deff.map((shot, index) => ({\r\n\t\t\tplayer: shot.PLAYER_NAME,\r\n\t\t\tx: (shot.LOC_X + 250) / 10,\r\n\t\t\ty: (shot.LOC_Y + 50) / 10,\r\n\t\t\taction_type: shot.SHOT_TYPE,\r\n\t\t\tshot_distance: shot.SHOT_DIST,\r\n\t\t\tshot_made_flag: shot.FGM,\r\n\t\t\tshot_value: shot.SHOT_VALUE,\r\n\t\t\tshot_pts: shot.SHOT_PTS,\r\n\t\t\tshot_zone: shot.SHOT_ZONE,\r\n\t\t\tshot_area: shot.SHOT_AREA,\r\n\t\t\tscore_margin: shot.SCORE_DIFF\r\n\r\n        }))\r\n        \r\n        // deff.map((p, i) => (p.PLAYER_NAME === \"Kevin Durant\" \t))\t\r\n\t\t// deff = deff.filter((p) => (p.player === \"Kevin Durant\"))\r\n\r\n\t\t\r\n\r\n\t\tvar binrange = [1, 20]\r\n\r\n\t\tvar testt = [0,124,300]\r\n\r\n\t\t\r\n\t\tvar r1h = 8\r\n\t\tvar r2h = 10\r\n\t\tvar fullwidth = 10\r\n\t\tvar halfwidth = fullwidth/2\r\n\r\n\r\n\r\n\r\n\r\n\t\t// var layout = [\r\n        //     {i: 'a', x: 0, y: 0, w: 1, h: 2, static: true},\r\n        //     {i: 'b', x: 1, y: 0, w: 3, h: 2, minW: 2, maxW: 4},\r\n        //     {i: 'c', x: 4, y: 0, w: 1, h: 2}\r\n        //   ];\r\n          return (\r\n            <div style={{ background: '#57667B' }}> \r\n            {/* // <div >  */}\r\n\r\n\t\t\t\t<h1>Hello bugs </h1>\r\n\r\n\r\n\t\t\t\t\r\n\t\t\t\t<div>\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n              {/* <button onClick={() => this.resetLayout()}>Reset Layout</button> */}\r\n\t\t\t\t<ResponsiveReactGridLayout\r\n\t\t\t\t\tclassName=\"layout\"\r\n\t\t\t\t\tbreakpoints={{lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0}}\r\n\t\t\t\t\t// cols={{ lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 }}\r\n\t\t\t\t\tcols={{ lg: 10, md: 10, sm: 10, xs: 10, xxs: 10 }}\r\n\t\t\t\t\t\r\n\t\t\t\t\trowHeight={30}\r\n\t\t\t\t\tlayouts={this.state.layouts}\r\n\t\t\t\t\tonLayoutChange={(layout, layouts) =>\r\n\t\t\t\t\tthis.onLayoutChange(layout, layouts)\r\n\t\t\t\t\t}\r\n              \t>\r\n                <div key=\"1\" style={{ background: '#455162' }} data-grid={{ w: 5, h: r1h, x: 0, y: 0, minW: 2, minH: 3, static: true  }}>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t<h2 style={{ display: 'flex', justifyContent: \"flex-start\", \"margin-left\": \"10px\" }}>\r\n\t\t\t\t\t\tPlayer\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t\t<div className=\"asd\" style={{ display: 'flex', justifyContent: \"flex-start\", \"margin-left\": \"10px\", \"margin-top\": \"10px\"  }}>  \r\n\t\t\t\t\t\t<div>\r\n\r\n\t\t\t\t\t\t<MultiDropdown\r\n\t\t\t\t\t\t\ttitleHelper=\"Player\"\r\n\t\t\t\t\t\t\ttitle=\"Select Players\"\r\n\t\t\t\t\t\t\tcol=\"PLAYER_NAME\"\r\n\t\t\t\t\t\t\tuid=\"PLAYER_ID\"\r\n\t\t\t\t\t\t\tselCol={\"selectedP1\"}\r\n\r\n\t\t\t\t\t\t\tlist={this.state.players}\r\n\t\t\t\t\t\t\tuniqList={uniqList}\r\n\t\t\t\t\t\t\ttoggleItem={this.toggleSelected}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{/* {wholePts} */}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<h2 style={{ display: 'flex', justifyContent: \"flex-start\", \"margin-left\": \"10px\", \"margin-top\": \"10px\"  }}>\r\n\t\t\t\t\t\tDistance\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t\t<div className=\"asd\" style={{ display: 'flex', justifyContent: \"flex-start\", \"margin-left\": \"-10px\" }}>  \r\n\t\t\t\t\t\t<div>\r\n\r\n\t\t\t\t\t\t<RangeSlider onChangeYear={this.handleDistChange.bind(this)}\r\n\t\t\t\t\t\tdata={dist} \r\n\t\t\t\t\t\thandle1={\"handle3\"}\r\n\t\t\t\t\t\thandle2={\"handle4\"}\r\n\t\t\t\t\t\tsGroup={\"test\"}\r\n\t\t\t\t\t\tlabel={\"Distance\"}\r\n\r\n\t\t\t\t\t\tleft={this.state.distL}\r\n\t\t\t\t\t\tright={this.state.distR}\r\n\t\t\t\t\t\twidth={500}\r\n\t\t\t\t\t\theight={150}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{/* {wholePts} */}\r\n\t\t\t\t\t</div>\r\n\r\n                </div>\r\n      \r\n      \r\n      \r\n                <div key=\"2\" style={{ background: '#455162' }} data-grid={{ w: 5, h: r1h, x: 5, y: 0, minW: 2, minH: 1, static: true  }}>\r\n      \r\n\t\t\t\t{/* <div className=\"asd\" style={{ display: 'flex', justifyContent: \"flex-start\", \"margin-left\": \"10px\", \"margin-top\": \"10px\"  }}>   */}\r\n\t\t\t\t<h2 style={{ display: 'flex', justifyContent: \"flex-start\", \"margin-left\": \"10px\"}}>\r\n\t\t\t\t\t\tPlayer\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t\t<div className=\"asd\" style={{ display: 'flex', justifyContent: \"flex-start\", \"margin-left\": \"10px\", \"margin-top\": \"10px\"  }}>  \r\n\t\t\t\t\t\t<div style={{ }}>\r\n\t\t\t\t\t\t{/* <div> */}\r\n\t\t\t\t\t\t<MultiDropdown\r\n\t\t\t\t\t\t\ttitleHelper=\"Player\"\r\n\t\t\t\t\t\t\ttitle=\"Select Players\"\r\n\t\t\t\t\t\t\tcol=\"PLAYER_NAME\"\r\n\t\t\t\t\t\t\tuid=\"PLAYER_ID\"\r\n\t\t\t\t\t\t\tselCol={\"selectedP2\"}\r\n\r\n\t\t\t\t\t\t\tlist={this.state.players}\r\n\t\t\t\t\t\t\tuniqList={uniqList}\r\n\t\t\t\t\t\t\ttoggleItem={this.toggleSelected}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\r\n\t\t\t\t\t{/* </div> */}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{/* {wholePts} */}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<h2 style={{ display: 'flex', justifyContent: \"flex-start\", \"margin-left\": \"10px\", \"margin-top\": \"10px\"  }}>\r\n\t\t\t\t\t\tDistance\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t\t<div className=\"asd\" style={{ display: 'flex', justifyContent: \"flex-start\", \"margin-left\": \"-10px\" }}>  \r\n\t\t\t\t\t\t<div>\r\n\r\n\t\t\t\t\t\t<RangeSlider onChangeYear={this.handleDistChange2.bind(this)}\r\n\t\t\t\t\t\tdata={dist} \r\n\t\t\t\t\t\thandle1={\"handle123\"}\r\n\t\t\t\t\t\thandle2={\"handle124\"}\r\n\t\t\t\t\t\tsGroup={\"test232\"}\r\n\t\t\t\t\t\tlabel={\"Distance\"}\r\n\r\n\t\t\t\t\t\tleft={this.state.dist2L}\r\n\t\t\t\t\t\tright={this.state.dist2R}\r\n\t\t\t\t\t\twidth={500}\r\n\t\t\t\t\t\theight={150}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{/* {wholePts} */}\r\n\t\t\t\t\t</div>\r\n      \r\n\r\n\r\n      \t\t\t</div>\r\n\r\n\t\t\t\t<div  key=\"3\" style={{ background: '#455162' }} data-grid={{ w: 2.5, h:12 , x: 2.5, y: r1h, minW: 2, minH: 1, static: true  }}>\r\n\t\t\t\t\t<h2>P1</h2>\r\n\t\t\t\t\t{/* <div style={{display: 'flex', justifyContent: \"center\", \"margin-left\": \"0px\", background: '#135162' }}> */}\r\n\t\t\t\t\t<Shotchart \r\n\t\t\t\t\t\tdata={abc}\r\n\t\t\t\t\t\t//  xdata={xloc} ydata={yloc}\r\n\t\t\t\t\t\tplayerId={this.props.playerId}\r\n\t\t\t\t\t\tminCount={this.state.minCount}\r\n\t\t\t\t\t\tchartType={this.state.chartType}\r\n\t\t\t\t\t\tdisplayToolTips={this.state.displayToolTips}\r\n\t\t\t\t\t\twidth={400}\r\n\t\t\t\t\t\tnamee={\"p1\"}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t{/* </div> */}\r\n\t\t\t\t\t\r\n\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t<div  key=\"4\" style={{ background: '#455162' }} data-grid={{ w: 2.5, h:12 , x: 7.5, y: r1h, minW: 2, minH: 1, static: true  }}>\r\n\t\t\t\t\t<h2>P2</h2>\r\n\t\t\t\t\t<Shotchart \r\n\t\t\t\t\t\tdata={deff}\r\n\t\t\t\t\t\t//  xdata={xloc} ydata={yloc}\r\n\t\t\t\t\t\tplayerId={this.props.playerId}\r\n\t\t\t\t\t\tminCount={this.state.minCount}\r\n\t\t\t\t\t\tchartType={this.state.chartType}\r\n\t\t\t\t\t\tdisplayToolTips={this.state.displayToolTips}\r\n\t\t\t\t\t\twidth={400}\r\n\t\t\t\t\t\tnamee={\"p2\"}\r\n\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t</div>\r\n\r\n      \r\n   \r\n                \r\n\r\n              </ResponsiveReactGridLayout>\r\n\r\n\t\t\t  <div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// this.state.players.map(post => (\r\n\t\t\t\t\t\tthis.state.players.slice(0, 15).map(post => (\r\n\r\n\t\t\t\t\t\t\t<li align=\"start\">\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t{/* <p>{post.SHOT_DIST} : {post.SHOT_PTS} </p> */}\r\n\t\t\t\t\t\t\t\t\t<p></p>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\r\n\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\r\n            </div>\r\n\r\n\r\n          );\r\n\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default Main1;\r\n\r\nfunction getFromLS(key) {\r\n    let ls = {};\r\n    if (global.localStorage) {\r\n      try {\r\n        ls = JSON.parse(global.localStorage.getItem(\"rgl-8\")) || {};\r\n      } catch (e) {\r\n        /*Ignore*/\r\n      }\r\n    }\r\n    return ls[key];\r\n  }\r\n  \r\n  function saveToLS(key, value) {\r\n    if (global.localStorage) {\r\n      global.localStorage.setItem(\r\n        \"rgl-8\",\r\n        JSON.stringify({\r\n          [key]: value\r\n        })\r\n      );\r\n    }\r\n  }"],"sourceRoot":""}